# If a variable does not have a value assigned, remove the variable. (e.g if you aren't using a custom DATABASE_NAME, remove the DATABASE_NAME line.)
PORT=<Port that the app starts up on (if nothing is provided, defaults to 3000)>
DATABASE_HOST=<Hostname where the database exists (if nothing is provided, defaults to 127.0.0.1)>
DATABASE_PORT=<Port to connect to the database (if nothing is provided, defaults to 5432)>
DATABASE_USERNAME=<Username to authenticate to the database (if nothing is provided, defaults to postgres)>
DATABASE_PASSWORD=<Password to authenticate to the database (if nothing is provided, defaults to no password)>
DATABASE_NAME=<Name of the database (if nothing is provided, defaults to heimdall-server-NODE_ENV)>
JWT_SECRET=<JSON Web Token Secret (no default, must be set)>
JWT_EXPIRE_TIME=<JSON Web Token Length of time before signature expires (if nothing is provided, defaults to 60s)>
NODE_ENV=<development, production, or test (no default, must be set)>
HEIMDALL_HEADLESS_TESTS=<run integration tests in a headless browser (defaults to true)>
ADMIN_PASSWORD=<Password for admin user (if nothing is provided, defaults to a randomly generated password)>
EXTERNAL_URL=<The external URL for your Heimdall deployment, for example https://heimdall.mitre.org>
REGISTRATION_DISABLED=<If public user registration should be allowed, if not then only the administrator user can create users (defaults to false)>

# Oauth Client IDs and Secrets, If a variable does not have client id values assigned then the feature is disabled.
GITHUB_CLIENTID=<Github Application Client ID>
GITHUB_CLIENTSECRET=<Github Application Client Secret>
GITHUB_ENTERPRISE_INSTANCE_BASE_URL=<Github Enterprise Instance Base URL (default=https://github.com/)>
GITHUB_ENTERPRISE_INSTANCE_API_URL=<Github Enterprise Instance API URL (default=https://api.github.com/)>

GITLAB_CLIENTID=<Gitlab Application Client ID>
GITLAB_CLIENTSECRET=<Gitlab Application Client Secret>
GITLAB_BASEURL=<Gitlab Base URL (default=https://gitlab.com)>

GOOGLE_CLIENTID=<Google Application Client ID (apps.googleusercontent.com)>
GOOGLE_CLIENTSECRET="<Google Application Client Secret>"

OKTA_DOMAIN="<yourdomain>.okta.com"
OKTA_CLIENTID=<Your Client ID>
OKTA_CLIENTSECRET=<Your Client Secret>

# Custom OIDC Service
OIDC_NAME=<What you want your authentication method to be named on the frontend>
OIDC_ISSUER=<Your OIDC Base URL, for example: https://sample.us.auth0.com>
OIDC_AUTHORIZATION_URL=<Your OIDC authorization endpoint, for example: https://sample.us.auth0.com/authorize>
OIDC_TOKEN_URL=<Your OIDC token endpoint, for example: https://sample.us.auth0.com/oauth/token>
OIDC_USER_INFO_URL=<Your OIDC user info endpoint, for example: https://sample.us.auth0.com/userinfo>
OIDC_CLIENTID=<Your OIDC Client ID>
OIDC_CLIENT_SECRET=<Your OIDC Client Secret>

# LDAP Configuration
LDAP_ENABLED=<If you want to enable LDAP login (true/false)>
LDAP_HOST=<Your LDAP target server>
LDAP_PORT=<Your LDAP target port (if nothing is provided, defaults to 389)>
LDAP_BINDDN=<The Dn of the user used for lookups>
LDAP_PASSWORD=<Your LDAP user's passwords used for lookups>
# Here you set your LDAP searchbase, for more info see https://docs.oracle.com/cd/E19693-01/819-0997/auto45/index.html
# If you're using Active Directory, you probably want "OU=Users, DC=<yourdomain>, DC=local"
LDAP_SEARCHBASE="<Your LDAP search base>"
# Here you set your LDAP search filter, for more info see https://confluence.atlassian.com/kb/how-to-write-ldap-search-filters-792496933.html
# If you are using Active Directory Users, you probably want "sAMAccountName={{username}}"
LDAP_SEARCHFILTER="<Your LDAP search filter (if nothing is provided, defaults to (sAMAccountName={{username}})>"
LDAP_NAMEFIELD="<The field that contains the user's full name (if nothing is provided, defaults to name)>"
LDAP_MAILFIELD="<The field that contains the user's email (if nothing is provided, defaults to mail)>"
