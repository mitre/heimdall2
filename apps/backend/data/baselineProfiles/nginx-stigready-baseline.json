{
  "name": "nginx-srg-baseline",
  "title": "The NGINX Web SRG v2.0 STIG-Ready Baseline",
  "maintainer": "The MITRE Security Automation Framework",
  "copyright": "(c) 2021",
  "copyright_email": "saf@groups.mitre.org",
  "license": "Apache-2.0",
  "summary": "Inspec Validation Profile for NGINX SRG",
  "version": "2.4.3",
  "inspec_version": ">= 4.0",
  "inputs": [],
  "supports": [],
  "controls": [
    {
      "title": "The NGINX web server must only contain services and functions necessary for\n  operation.",
      "desc": "A web server can provide many features, services, and processes. Some\n  of these may be deemed unnecessary or too unsecure to run on a production DoD\n  system.\n\n    The web server must provide the capability to disable, uninstall, or\n  deactivate functionality and services that are deemed to be non-essential to\n  the web server mission or can adversely impact server performance.",
      "descriptions": {
        "default": "A web server can provide many features, services, and processes. Some\n  of these may be deemed unnecessary or too unsecure to run on a production DoD\n  system.\n\n    The web server must provide the capability to disable, uninstall, or\n  deactivate functionality and services that are deemed to be non-essential to\n  the web server mission or can adversely impact server performance.",
        "check": "Review the NGINX web server documentation and deployed configuration\n  to determine if web server features, services, and processes are installed that are not\n  needed for hosted application deployment.\n\n  If the site requires the use of a particular piece of software, the ISSO will need\n  to maintain documentation identifying this software as necessary for operations. The\n  software must be operated at the vendor’s current patch level and must be a supported\n  vendor release.\n\n  If programs or utilities that meet the above criteria are installed on the Web Server,\n  and appropriate documentation and signatures are in evidence, this is not a finding.\n\n  Determine whether the web server is configured with unnecessary software.\n\n  Determine whether processes other than those that support the web server are loaded\n  and/or run on the web server.\n\n  Examples of software that should not be on the web server are all web development\n  tools, office suites (unless the web server is a private web development server),\n  compilers, and other utilities that are not part of the web server suite or the basic\n  operating system.\n\n  Check the directory structure of the server and ensure that additional, unintended, or\n  unneeded applications are not loaded on the system.\n\n  If, after review of the application on the system, there is no justification for the\n  identified software, this is a finding.",
        "fix": "Uninstall or deactivate features, services, and processes not\nneeded by the NGINX web server for operation."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000141-WSR-000075",
        "gid": "V-41693",
        "rid": "SV-54270r3_rule",
        "stig_id": "SRG-APP-000141-WSR-000075",
        "fix_id": "F-47152r2_fix",
        "cci": [
          "CCI-000381"
        ],
        "nist": [
          "CM-7 a",
          ""
        ]
      },
      "code": "control 'V-41693' do\n  title \"The NGINX web server must only contain services and functions necessary for\n  operation.\"\n  desc \"A web server can provide many features, services, and processes. Some\n  of these may be deemed unnecessary or too unsecure to run on a production DoD\n  system.\n\n    The web server must provide the capability to disable, uninstall, or\n  deactivate functionality and services that are deemed to be non-essential to\n  the web server mission or can adversely impact server performance.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and deployed configuration\n  to determine if web server features, services, and processes are installed that are not\n  needed for hosted application deployment.\n\n  If the site requires the use of a particular piece of software, the ISSO will need\n  to maintain documentation identifying this software as necessary for operations. The\n  software must be operated at the vendor’s current patch level and must be a supported\n  vendor release.\n\n  If programs or utilities that meet the above criteria are installed on the Web Server,\n  and appropriate documentation and signatures are in evidence, this is not a finding.\n\n  Determine whether the web server is configured with unnecessary software.\n\n  Determine whether processes other than those that support the web server are loaded\n  and/or run on the web server.\n\n  Examples of software that should not be on the web server are all web development\n  tools, office suites (unless the web server is a private web development server),\n  compilers, and other utilities that are not part of the web server suite or the basic\n  operating system.\n\n  Check the directory structure of the server and ensure that additional, unintended, or\n  unneeded applications are not loaded on the system.\n\n  If, after review of the application on the system, there is no justification for the\n  identified software, this is a finding.\n  \"\n  desc 'fix', \"Uninstall or deactivate features, services, and processes not\nneeded by the NGINX web server for operation.\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000141-WSR-000075'\n  tag \"gid\": 'V-41693'\n  tag \"rid\": 'SV-54270r3_rule'\n  tag \"stig_id\": 'SRG-APP-000141-WSR-000075'\n  tag \"fix_id\": 'F-47152r2_fix'\n  tag \"cci\": ['CCI-000381']\n  tag \"nist\": ['CM-7 a', '']\n\n  describe \"This test requires a Manual Review: Check the directory structure of the server and\n  ensure that additional, unintended, or unneeded applications are not loaded on the system.\" do\n    skip \"This test requires a Manual Review: Check the directory structure of the server and\n  ensure that additional, unintended, or unneeded applications are not loaded on the system.\"\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41693.rb",
        "line": 1
      },
      "id": "V-41693"
    },
    {
      "title": "The NGINX web server must not be a proxy server.",
      "desc": "A web server should be primarily a web server or a proxy server but\n  not both, for the same reasons that other multi-use servers are not\n  recommended.  Scanning for web servers that will also proxy requests into an\n  otherwise protected network is a very common attack making the attack\n  anonymous.",
      "descriptions": {
        "default": "A web server should be primarily a web server or a proxy server but\n  not both, for the same reasons that other multi-use servers are not\n  recommended.  Scanning for web servers that will also proxy requests into an\n  otherwise protected network is a very common attack making the attack\n  anonymous.",
        "check": "Review the NGINX web server documentation and deployed\n  configuration to determine if the web server is also a proxy server.\n\n  If the NGINX server is a proxy server and not a web server, this check is Not Applicable.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Execute the following command:\n\n  # nginx -V\n\n  Verify the ‘nginx_http_proxy_module’ module is not installed.\n\n    # grep the 'proxy_pass' directive in the location context of the nginx.conf and any\n    separated include configuration file.\n\n  If the 'nginx_http_proxy_module' module is installed and the 'proxy_pass' directive exists,\n  this is a finding.",
        "fix": "Use the configure script (available in the nginx download package) to exclude the\n'nginx_http_proxy_module' module by using the --without {module_name} option.\n\nEnsure the 'proxy_pass' directive is not enabled in the NGINX configuration file(s)."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000141-WSR-000076",
        "gid": "V-41694",
        "rid": "SV-54271r3_rule",
        "stig_id": "SRG-APP-000141-WSR-000076",
        "fix_id": "F-47153r3_fix",
        "cci": [
          "CCI-000381"
        ],
        "nist": [
          "CM-7 a",
          ""
        ]
      },
      "code": "control 'V-41694' do\n  title 'The NGINX web server must not be a proxy server.'\n  desc  \"A web server should be primarily a web server or a proxy server but\n  not both, for the same reasons that other multi-use servers are not\n  recommended.  Scanning for web servers that will also proxy requests into an\n  otherwise protected network is a very common attack making the attack\n  anonymous.\"\n\n  desc 'check', \"Review the NGINX web server documentation and deployed\n  configuration to determine if the web server is also a proxy server.\n\n  If the NGINX server is a proxy server and not a web server, this check is Not Applicable.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Execute the following command:\n\n  # nginx -V\n\n  Verify the ‘nginx_http_proxy_module’ module is not installed.\n\n    # grep the 'proxy_pass' directive in the location context of the nginx.conf and any\n    separated include configuration file.\n\n  If the 'nginx_http_proxy_module' module is installed and the 'proxy_pass' directive exists,\n  this is a finding.\n  \"\n  desc 'fix', \"\n  Use the configure script (available in the nginx download package) to exclude the\n  'nginx_http_proxy_module' module by using the --without {module_name} option.\n\n  Ensure the 'proxy_pass' directive is not enabled in the NGINX configuration file(s).\n  \"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000141-WSR-000076'\n  tag \"gid\": 'V-41694'\n  tag \"rid\": 'SV-54271r3_rule'\n  tag \"stig_id\": 'SRG-APP-000141-WSR-000076'\n  tag \"fix_id\": 'F-47153r3_fix'\n  tag \"cci\": ['CCI-000381']\n  tag \"nist\": ['CM-7 a', '']\n\n  if input('proxy_server') == 'true'\n    impact 0.0\n    describe 'This check is NA because NGINX server is a proxy server and not a web server' do\n      skip 'This check is NA because NGINX server is a proxy server and not a web server'\n    end\n  elsif nginx_conf.locations.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    describe nginx do\n      its('modules') { should_not include 'http_proxy' }\n    end\n    nginx_conf.locations.each do |location|\n      describe 'proxy_pass' do\n        it 'should not exist in the location context.' do\n          expect(location.params).to_not(include 'proxy_pass')\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41694.rb",
        "line": 1
      },
      "id": "V-41694"
    },
    {
      "title": "The web server must allow the mappings to unused and vulnerable\n  scripts to be removed.",
      "desc": "Scripts allow server side processing on behalf of the hosted\n  application user or as processes needed in the implementation of hosted\n  applications. Removing scripts not needed for application operation or deemed\n  vulnerable helps to secure the web server.\n\n    To assure scripts are not added to the web server and run maliciously,\n  those script mappings that are not needed or used by the web server for hosted\n  application operation must be removed.",
      "descriptions": {
        "default": "Scripts allow server side processing on behalf of the hosted\n  application user or as processes needed in the implementation of hosted\n  applications. Removing scripts not needed for application operation or deemed\n  vulnerable helps to secure the web server.\n\n    To assure scripts are not added to the web server and run maliciously,\n  those script mappings that are not needed or used by the web server for hosted\n  application operation must be removed.",
        "check": "Review the web server documentation and deployment configuration to\ndetermine what script mappings are available.\n\nReview the scripts used by the web server and the hosted applications.\n\nIf NGINX is not configured to serve files, this check is Not Applicable.\n\nCheck the following:\n  # grep 'fastcgi_param' directive in the location context of the nginx.conf\n  and any separated include configuration file.\n\nIf the 'fastcgi_param' directive cannot be found in NGINX configuration files,\nthis check is Not Applicable.\n\nReview the 'fastcgi_param' directive and go into each directory to locate\ncgi-bin scripts with the following command:\n  # ls <fastcgi_param directory>\n\nIf the 'fastcgi_params' directive exists and if there are any scripts are\npresent that are unused or vulnerable, this is a finding.\n\nIf this is not documented and approved by the Information System Security\nOfficer (ISSO), this is a finding.",
        "fix": "Review script mappings that are configured in the 'fastcgi_param'\n  directive, if it exists, and remove scripts that are not needed for the NGINX web\n  server and hosted application operation."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000141-WSR-000082",
        "gid": "V-41700",
        "rid": "SV-54277r3_rule",
        "stig_id": "SRG-APP-000141-WSR-000082",
        "fix_id": "F-47159r2_fix",
        "cci": [
          "CCI-000381"
        ],
        "nist": [
          "CM-7 a",
          ""
        ]
      },
      "code": "control 'V-41700' do\n  title \"The web server must allow the mappings to unused and vulnerable\n  scripts to be removed.\"\n  desc \"Scripts allow server side processing on behalf of the hosted\n  application user or as processes needed in the implementation of hosted\n  applications. Removing scripts not needed for application operation or deemed\n  vulnerable helps to secure the web server.\n\n    To assure scripts are not added to the web server and run maliciously,\n  those script mappings that are not needed or used by the web server for hosted\n  application operation must be removed.\n  \"\n\n  desc 'check', \"\n  Review the web server documentation and deployment configuration to\n  determine what script mappings are available.\n\n  Review the scripts used by the web server and the hosted applications.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check the following:\n    # grep 'fastcgi_param' directive in the location context of the nginx.conf\n    and any separated include configuration file.\n\n  If the 'fastcgi_param' directive cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  Review the 'fastcgi_param' directive and go into each directory to locate\n  cgi-bin scripts with the following command:\n    # ls <fastcgi_param directory>\n\n  If the 'fastcgi_params' directive exists and if there are any scripts are\n  present that are unused or vulnerable, this is a finding.\n\n  If this is not documented and approved by the Information System Security\n  Officer (ISSO), this is a finding.\n  \"\n  desc 'fix', \"Review script mappings that are configured in the 'fastcgi_param'\n  directive, if it exists, and remove scripts that are not needed for the NGINX web\n  server and hosted application operation.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000141-WSR-000082'\n  tag \"gid\": 'V-41700'\n  tag \"rid\": 'SV-54277r3_rule'\n  tag \"stig_id\": 'SRG-APP-000141-WSR-000082'\n  tag \"fix_id\": 'F-47159r2_fix'\n  tag \"cci\": ['CCI-000381']\n  tag \"nist\": ['CM-7 a', '']\n\n  if nginx_conf.locations.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.locations.each do |location|\n      if location.params['fastcgi_param'].nil?\n        impact 0.0\n        describe 'This check is NA because the fastcgi_param directive has not been configured.' do\n          skip 'This check is NA because the fastcgi_param directive has not been configured.'\n        end\n      else\n        location.params['fastcgi_param'].each do |value|\n          next unless value[0] == 'SCRIPT_FILENAME'\n\n          cgi_script_path = command(\"echo #{value[1]} | cut -d '$' -f 1\").stdout\n          cgi_scripts = command(\"ls #{cgi_script_path}\").stdout.split(\"\\n\")\n          cgi_scripts.uniq!\n\n          cgi_scripts.each do |script|\n            describe(script) do\n              it { should be_in input('nginx_allowed_script_list') }\n            end\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41700.rb",
        "line": 1
      },
      "id": "V-41700"
    },
    {
      "title": "The web server must maintain the confidentiality and integrity of\n  information during reception.",
      "desc": "Information can be either unintentionally or maliciously disclosed or\n  modified during reception, including, for example, during aggregation, at\n  protocol transformation points, and during packing/unpacking. These\n  unauthorized disclosures or modifications compromise the confidentiality or\n  integrity of the information.\n\n  Protecting the confidentiality and integrity of received information\n  requires that application servers take measures to employ approved cryptography\n  in order to protect the information during transmission over the network. This\n  is usually achieved through the use of Transport Layer Security (TLS), SSL VPN,\n  or IPsec tunnel.\n\n  The web server must utilize approved encryption when receiving transmitted\n  data.",
      "descriptions": {
        "default": "Information can be either unintentionally or maliciously disclosed or\n  modified during reception, including, for example, during aggregation, at\n  protocol transformation points, and during packing/unpacking. These\n  unauthorized disclosures or modifications compromise the confidentiality or\n  integrity of the information.\n\n  Protecting the confidentiality and integrity of received information\n  requires that application servers take measures to employ approved cryptography\n  in order to protect the information during transmission over the network. This\n  is usually achieved through the use of Transport Layer Security (TLS), SSL VPN,\n  or IPsec tunnel.\n\n  The web server must utilize approved encryption when receiving transmitted\n  data.",
        "check": "Review web server configuration to determine if the server\n  is using a transmission method that maintains the confidentiality and integrity of\n  information during reception.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n    #grep the 'ssl_protocols' directive in the server context of the nginx.conf\n    and any separated include configuration file.\n\n  If the 'ssl_protocols' directive cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  If the 'ssl_protocols' directive is not set to the approved TLS version,\n  this is a finding.",
        "fix": "Add the 'ssl_protocols' directive to the NGINX configuration\n  file(s) and configure it to use only the approved TLS protocols to maintain\n  the confidentiality and integrity of information during reception.\n\n  Example:\n    server {\n            ssl_protocols TLSv1.2;\n    }"
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000442-WSR-000182  ",
        "gid": "V-56015",
        "rid": "SV-70269r2_rule",
        "stig_id": "SRG-APP-000442-WSR-000182",
        "fix_id": "F-60893r1_fix",
        "cci": [
          "CCI-002422"
        ],
        "nist": [
          "SC-8 (2)",
          ""
        ]
      },
      "code": "control 'V-56015' do\n  title \"The web server must maintain the confidentiality and integrity of\n  information during reception.\"\n  desc \"Information can be either unintentionally or maliciously disclosed or\n  modified during reception, including, for example, during aggregation, at\n  protocol transformation points, and during packing/unpacking. These\n  unauthorized disclosures or modifications compromise the confidentiality or\n  integrity of the information.\n\n  Protecting the confidentiality and integrity of received information\n  requires that application servers take measures to employ approved cryptography\n  in order to protect the information during transmission over the network. This\n  is usually achieved through the use of Transport Layer Security (TLS), SSL VPN,\n  or IPsec tunnel.\n\n  The web server must utilize approved encryption when receiving transmitted\n  data.\n  \"\n\n  desc 'check', \"Review web server configuration to determine if the server\n  is using a transmission method that maintains the confidentiality and integrity of\n  information during reception.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n    #grep the 'ssl_protocols' directive in the server context of the nginx.conf\n    and any separated include configuration file.\n\n  If the 'ssl_protocols' directive cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  If the 'ssl_protocols' directive is not set to the approved TLS version,\n  this is a finding.\n  \"\n  desc 'fix', \"Add the 'ssl_protocols' directive to the NGINX configuration\n  file(s) and configure it to use only the approved TLS protocols to maintain\n  the confidentiality and integrity of information during reception.\n\n  Example:\n    server {\n            ssl_protocols TLSv1.2;\n    }\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000442-WSR-000182  '\n  tag \"gid\": 'V-56015'\n  tag \"rid\": 'SV-70269r2_rule'\n  tag \"stig_id\": 'SRG-APP-000442-WSR-000182'\n  tag \"fix_id\": 'F-60893r1_fix'\n  tag \"cci\": ['CCI-002422']\n  tag \"nist\": ['SC-8 (2)', '']\n\n  if nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.each do |server|\n      if server.params['ssl_protocols'].nil?\n        impact 0.0\n        describe 'This test is NA because the ssl_protocols directive has not been configured.' do\n          skip 'This test is NA because the ssl_protocols directive has not been configured.'\n        end\n      else\n        server.params['ssl_protocols'].each do |protocol|\n          describe 'Each protocol' do\n            it 'should be included in the list of protocols approved to encrypt data' do\n              expect(protocol).to(be_in(input('approved_ssl_protocols')))\n            end\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-56015.rb",
        "line": 1
      },
      "id": "V-56015"
    },
    {
      "title": "The NGINX web server must use cryptographic modules that meet the\n  requirements of applicable federal laws, Executive Orders, directives,\n  policies, regulations, standards, and guidance when encrypting stored data.",
      "desc": "Encryption is only as good as the encryption modules utilized.\n  Unapproved cryptographic module algorithms cannot be verified, and cannot be\n  relied upon to provide confidentiality or integrity, and DoD data may be\n  compromised due to weak algorithms.\n\n    FIPS 140-2 is the current standard for validating cryptographic modules and\n  NSA Type-X (where X=1, 2, 3, 4) products are NSA-certified, hardware-based\n  encryption modules.\n\n    The web server must provide FIPS-compliant encryption modules when storing\n  encrypted data and configuration settings.",
      "descriptions": {
        "default": "Encryption is only as good as the encryption modules utilized.\n  Unapproved cryptographic module algorithms cannot be verified, and cannot be\n  relied upon to provide confidentiality or integrity, and DoD data may be\n  compromised due to weak algorithms.\n\n    FIPS 140-2 is the current standard for validating cryptographic modules and\n  NSA Type-X (where X=1, 2, 3, 4) products are NSA-certified, hardware-based\n  encryption modules.\n\n    The web server must provide FIPS-compliant encryption modules when storing\n  encrypted data and configuration settings.",
        "check": "Review NGINX web server documentation and deployed configuration\n  to determine whether the encryption modules utilized for storage of data are FIPS 140-2\n  compliant.\n\n  Verify the Operating System and OpenSSL are in FIPS Mode -\n  Execute the following command to check the OS:\n\n    # sudo sysctl –a | grep fips\n\n  If crypto.fips_enabled is set to 0, this is a finding.\n\n  Execute the following command to check OpenSSL:\n    # nginx -V\n\n  The version of OpenSSL specified should include a '-fips'. If NGINX is not build with\n  a version of OpenSSL that is FIPS compliant, this is a finding.",
        "fix": "Configure the web server to utilize FIPS 140-2 approved\n  encryption modules when the web server is storing data."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000179-WSR-000110",
        "gid": "V-41745",
        "rid": "SV-54322r3_rule",
        "stig_id": "SRG-APP-000179-WSR-000110",
        "fix_id": "F-47204r2_fix",
        "cci": [
          "CCI-000803"
        ],
        "nist": [
          "IA-7"
        ]
      },
      "code": "control 'V-41745' do\n  title \"The NGINX web server must use cryptographic modules that meet the\n  requirements of applicable federal laws, Executive Orders, directives,\n  policies, regulations, standards, and guidance when encrypting stored data.\"\n  desc \"Encryption is only as good as the encryption modules utilized.\n  Unapproved cryptographic module algorithms cannot be verified, and cannot be\n  relied upon to provide confidentiality or integrity, and DoD data may be\n  compromised due to weak algorithms.\n\n    FIPS 140-2 is the current standard for validating cryptographic modules and\n  NSA Type-X (where X=1, 2, 3, 4) products are NSA-certified, hardware-based\n  encryption modules.\n\n    The web server must provide FIPS-compliant encryption modules when storing\n  encrypted data and configuration settings.\n  \"\n\n  desc 'check', \"Review NGINX web server documentation and deployed configuration\n  to determine whether the encryption modules utilized for storage of data are FIPS 140-2\n  compliant.\n\n  Verify the Operating System and OpenSSL are in FIPS Mode -\n  Execute the following command to check the OS:\n\n    # sudo sysctl –a | grep fips\n\n  If crypto.fips_enabled is set to 0, this is a finding.\n\n  Execute the following command to check OpenSSL:\n    # nginx -V\n\n  The version of OpenSSL specified should include a '-fips'. If NGINX is not build with\n  a version of OpenSSL that is FIPS compliant, this is a finding.\n  \"\n  desc 'fix', \"Configure the web server to utilize FIPS 140-2 approved\n  encryption modules when the web server is storing data.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000179-WSR-000110'\n  tag \"gid\": 'V-41745'\n  tag \"rid\": 'SV-54322r3_rule'\n  tag \"stig_id\": 'SRG-APP-000179-WSR-000110'\n  tag \"fix_id\": 'F-47204r2_fix'\n  tag \"cci\": ['CCI-000803']\n  tag \"nist\": %w(IA-7)\n\n  if virtualization.system.eql?('docker')\n    impact 0.0\n    describe \"Control not applicable - Kernel config for FIPS capability must be done on the host\" do\n      skip \"Control not applicable - Kernel config for FIPS capability must be done on the host\"\n    end\n  else\n    describe command('sysctl –a | grep fips') do\n      its('stdout') { should eq \"crypto.fips_enabled = 1\\n\" }\n      its('exit_status') { should eq 0 }\n    end\n\n    describe command('nginx -V 2>&1').stdout do\n      it { should match(/-fips/) }\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41745.rb",
        "line": 1
      },
      "id": "V-41745"
    },
    {
      "title": "Non-privileged accounts on the hosting system must only access NGINX web\nserver security-relevant information and functions through a distinct\nadministrative account.",
      "desc": "By separating web server security functions from non-privileged users,\nroles can be developed that can then be used to administer the web server.\nForcing users to change from a non-privileged account to a privileged account\nwhen operating on the web server or on security-relevant information forces\nusers to only operate as a web server administrator when necessary. Operating\nin this manner allows for better logging of changes and better forensic\ninformation and limits accidental changes to the web server.",
      "descriptions": {
        "default": "By separating web server security functions from non-privileged users,\nroles can be developed that can then be used to administer the web server.\nForcing users to change from a non-privileged account to a privileged account\nwhen operating on the web server or on security-relevant information forces\nusers to only operate as a web server administrator when necessary. Operating\nin this manner allows for better logging of changes and better forensic\ninformation and limits accidental changes to the web server.",
        "check": "Review the NGINX web server documentation and configuration\n  to determine if accounts used for administrative duties of the web server are\n  separated from non-privileged accounts.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  If the 'root' directory cannot be found in NGINX configuration files, this check\n  is Not Applicable.\n\n  This check verifies that the SA or Web Manager controlled account owns the key\n  web server files. These same files, which control the configuration of the web\n  server, and thus its behavior, must also be accessible by the account that runs\n  the web service process.\n\n  If it exists, the following file need to be owned by a privileged account:\n    - nginx.conf and its included configuration files\n\n  Use the following commands:\n    #  find / -name nginx.conf to find the file.\n    #  grep 'include' on the nginx.conf file to identify included configuration files.\n\n  Change to the directories that contain the nginx.conf and included configuration files.\n  Use the following command:\n    #   ls -l on these files to determine ownership of the file\n\n  -The Web Manager or the SA should own all the system files and directories.\n  -The configurable directories can be owned by the WebManager or equivalent user.\n  -Permissions on these files should be 660 or more restrictive.\n\n  If root or an authorized user does not own the web system files and the permission are\n  not correct, this is a finding.",
        "fix": "Restrict access to the web servers access control files to only the System Administrator, Web Manager, or the Web Manager designees.\n\n  Determine where the key server files are located by running the following command (per file):\n\n    # find / -name <'key server file'>\n\n  Run the following commands to set permissions:\n\n    # cd <'key server file location'>/\n    # chown <'authorized user'>:<'authorized group'>  <'key server file'>\n    # chmod 660 <'key server file'>"
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000340-WSR-000029",
        "gid": "V-55947",
        "rid": "SV-70201r2_rule",
        "stig_id": "SRG-APP-000340-WSR-000029",
        "fix_id": "F-60825r1_fix",
        "cci": [
          "CCI-002235"
        ],
        "nist": [
          "AC-6 (10)",
          ""
        ]
      },
      "code": "control 'V-55947' do\n  title \"Non-privileged accounts on the hosting system must only access NGINX web\nserver security-relevant information and functions through a distinct\nadministrative account.\"\n  desc  \"By separating web server security functions from non-privileged users,\nroles can be developed that can then be used to administer the web server.\nForcing users to change from a non-privileged account to a privileged account\nwhen operating on the web server or on security-relevant information forces\nusers to only operate as a web server administrator when necessary. Operating\nin this manner allows for better logging of changes and better forensic\ninformation and limits accidental changes to the web server.\"\n\n  desc  'check', \"Review the NGINX web server documentation and configuration\n  to determine if accounts used for administrative duties of the web server are\n  separated from non-privileged accounts.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  If the 'root' directory cannot be found in NGINX configuration files, this check\n  is Not Applicable.\n\n  This check verifies that the SA or Web Manager controlled account owns the key\n  web server files. These same files, which control the configuration of the web\n  server, and thus its behavior, must also be accessible by the account that runs\n  the web service process.\n\n  If it exists, the following file need to be owned by a privileged account:\n    - nginx.conf and its included configuration files\n\n  Use the following commands:\n    #  find / -name nginx.conf to find the file.\n    #  grep 'include' on the nginx.conf file to identify included configuration files.\n\n  Change to the directories that contain the nginx.conf and included configuration files.\n  Use the following command:\n    #   ls -l on these files to determine ownership of the file\n\n  -The Web Manager or the SA should own all the system files and directories.\n  -The configurable directories can be owned by the WebManager or equivalent user.\n  -Permissions on these files should be 660 or more restrictive.\n\n  If root or an authorized user does not own the web system files and the permission are\n  not correct, this is a finding.\n  \"\n  desc 'fix', \"Restrict access to the web servers access control files to only the System Administrator, Web Manager, or the Web Manager designees.\n\n  Determine where the key server files are located by running the following command (per file):\n\n    # find / -name <'key server file'>\n\n  Run the following commands to set permissions:\n\n    # cd <'key server file location'>/\n    # chown <'authorized user'>:<'authorized group'>  <'key server file'>\n    # chmod 660 <'key server file'>\n  \"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000340-WSR-000029'\n  tag \"gid\": 'V-55947'\n  tag \"rid\": 'SV-70201r2_rule'\n  tag \"stig_id\": 'SRG-APP-000340-WSR-000029'\n  tag \"fix_id\": 'F-60825r1_fix'\n  tag \"cci\": ['CCI-002235']\n  tag \"nist\": ['AC-6 (10)', '']\n\n  if input('access_control_files').empty?\n    describe 'This check is skipped because no configuration files have been specified.' do\n      skip 'This check is skipped because no configuration files have been specified.'\n    end\n  else\n    input('access_control_files').each do |file|\n      file_path = command(\"find / -name #{file}\").stdout.chomp\n\n      if file_path.empty?\n        describe 'Skip Message' do\n          skip \"Skipped: Access control file #{file} not found\"\n        end\n      end\n\n      file_path.split.each do |file|\n        describe file(file) do\n          its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n          its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n          it { should_not be_more_permissive_than('0660') }\n        end\n      end\n    end\n\n    nginx_conf.contents.each_key do |file|\n      describe file(file) do\n        its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n        its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n        it { should_not be_more_permissive_than('0660') }\n      end\n    end\n\n    if nginx_conf.contents.keys.empty?\n      describe 'Skip Message' do\n        skip 'Skipped: no conf files included.'\n      end\n    end\n\n    webserver_roots = []\n\n    if nginx_conf.params['http'].nil?\n      impact 0.0\n      describe 'This check is NA because no websites have been configured.' do\n        skip 'This check is NA because no websites have been configured.'\n      end\n    else\n      nginx_conf.http.entries.each do |http|\n        webserver_roots.push(http.params['root']) unless http.params['root'].nil?\n      end\n    end\n\n    if nginx_conf.servers.nil?\n      impact 0.0\n      describe 'This check is NA because NGINX has not been configured to serve files.' do\n        skip 'This check is NA because NGINX has not been configured to serve files.'\n      end\n    else\n      nginx_conf.servers.entries.each do |server|\n        webserver_roots.push(server.params['root']) unless server.params['root'].nil?\n      end\n    end\n\n    if nginx_conf.locations.nil?\n      impact 0.0\n      describe 'This check is NA because NGINX has not been configured to serve files.' do\n        skip 'This check is NA because NGINX has not been configured to serve files.'\n      end\n    else\n      nginx_conf.locations.entries.each do |location|\n        webserver_roots.push(location.params['root']) unless location.params['root'].nil?\n      end\n    end\n\n    if webserver_roots.empty?\n      impact 0.0\n      describe 'This check is NA because no root directories have been set.' do\n        skip 'This test is NA because no root directories have been set.'\n      end\n    else\n      webserver_roots.flatten!.uniq!\n      webserver_roots.each do |directory|\n        describe file(directory) do\n          its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n          its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n          its('sticky') { should be true }\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55947.rb",
        "line": 1
      },
      "id": "V-55947"
    },
    {
      "title": "The NGINX web server must be configurable to integrate with an organizations\nsecurity infrastructure.",
      "desc": "A web server will typically utilize logging mechanisms for maintaining\na historical log of activity that occurs within a hosted application. This\ninformation can then be used for diagnostic purposes, forensics purposes, or\nother purposes relevant to ensuring the availability and integrity of the\nhosted application.\n\n    While it is important to log events identified as being critical and\nrelevant to security, it is equally important to notify the appropriate\npersonnel in a timely manner so they are able to respond to events as they\noccur.\n\n    Manual review of the web server logs may not occur in a timely manner, and\neach event logged is open to interpretation by a reviewer. By integrating the\nweb server into an overall or organization-wide log review, a larger picture of\nevents can be viewed, and analysis can be done in a timely and reliable manner.",
      "descriptions": {
        "default": "A web server will typically utilize logging mechanisms for maintaining\na historical log of activity that occurs within a hosted application. This\ninformation can then be used for diagnostic purposes, forensics purposes, or\nother purposes relevant to ensuring the availability and integrity of the\nhosted application.\n\n    While it is important to log events identified as being critical and\nrelevant to security, it is equally important to notify the appropriate\npersonnel in a timely manner so they are able to respond to events as they\noccur.\n\n    Manual review of the web server logs may not occur in a timely manner, and\neach event logged is open to interpretation by a reviewer. By integrating the\nweb server into an overall or organization-wide log review, a larger picture of\nevents can be viewed, and analysis can be done in a timely and reliable manner.",
        "check": "Review the NGINX web server documentation and deployed configuration to determine\nwhether the web server is logging security-relevant events.\n\nIf there are no websites configured for NGINX, this check is Not Applicable.\n\nCheck for the following:\n    # grep for 'access_log' and 'error_log' directives in the nginx.conf and\n    any separated include configuration file.\n\nIf the 'access_log' and 'error_log' directives cannot be found in NGINX configuration\nfiles, this check is Not Applicable.\n\nIf the access.log and error.log files do not exist, this is a finding.",
        "fix": "Execute the following command on the NGINX web server to link logs\n  to stdout and stderr:\n  # ln -sf /dev/stdout <access_log_path>/access.log\n  # ln -sf /dev/stderr <access_log_path>/access.log\n\n  Work with the SIEM administrator to integrate with an organizations security\n  infrastructure."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000358-WSR-000163",
        "gid": "V-55971",
        "rid": "SV-70225r2_rule",
        "stig_id": "SRG-APP-000358-WSR-000163",
        "fix_id": "F-60849r1_fix",
        "cci": [
          "CCI-001851"
        ],
        "nist": [
          "AU-4 (1)",
          ""
        ]
      },
      "code": "control 'V-55971' do\n  title \"The NGINX web server must be configurable to integrate with an organizations\nsecurity infrastructure.\"\n  desc  \"A web server will typically utilize logging mechanisms for maintaining\na historical log of activity that occurs within a hosted application. This\ninformation can then be used for diagnostic purposes, forensics purposes, or\nother purposes relevant to ensuring the availability and integrity of the\nhosted application.\n\n    While it is important to log events identified as being critical and\nrelevant to security, it is equally important to notify the appropriate\npersonnel in a timely manner so they are able to respond to events as they\noccur.\n\n    Manual review of the web server logs may not occur in a timely manner, and\neach event logged is open to interpretation by a reviewer. By integrating the\nweb server into an overall or organization-wide log review, a larger picture of\nevents can be viewed, and analysis can be done in a timely and reliable manner.\n  \"\n\n  desc 'check', \"\n  Review the NGINX web server documentation and deployed configuration to determine\n  whether the web server is logging security-relevant events.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n  Check for the following:\n      # grep for 'access_log' and 'error_log' directives in the nginx.conf and\n      any separated include configuration file.\n\n  If the 'access_log' and 'error_log' directives cannot be found in NGINX configuration\n  files, this check is Not Applicable.\n\n  If the access.log and error.log files do not exist, this is a finding.\n  \"\n  desc 'fix', \"Execute the following command on the NGINX web server to link logs\n  to stdout and stderr:\n  # ln -sf /dev/stdout <access_log_path>/access.log\n  # ln -sf /dev/stderr <access_log_path>/access.log\n\n  Work with the SIEM administrator to integrate with an organizations security\n  infrastructure.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000358-WSR-000163'\n  tag \"gid\": 'V-55971'\n  tag \"rid\": 'SV-70225r2_rule'\n  tag \"stig_id\": 'SRG-APP-000358-WSR-000163'\n  tag \"fix_id\": 'F-60849r1_fix'\n  tag \"cci\": ['CCI-001851']\n  tag \"nist\": ['AU-4 (1)', '']\n\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      if http['access_log'].nil?\n        impact 0.0\n        describe 'This test is NA because the access_log directive has not been configured.' do\n          skip 'This test is NA because access_log directive has not been configured.'\n        end\n      else\n        http['access_log'].each do |access_log|\n          access_log.each do |access_value|\n            next unless access_value.include? 'access.log'\n\n            describe file(access_value) do\n              it 'The access log should exist.' do\n                expect(subject).to(exist)\n              end\n            end\n          end\n        end\n      end\n    end\n    if nginx_conf.params['error_log'].nil?\n      impact 0.0\n      describe 'This test is NA because the error_log directive has not been configured.' do\n        skip 'This test is NA because error_log directive has not been configured.'\n      end\n    else\n      nginx_conf.params['error_log'].each do |error_log|\n        error_log.each do |error_value|\n          next unless error_value.include? 'error.log'\n\n          describe file(error_value) do\n            it 'The error log should exist.' do\n              expect(subject).to(exist)\n            end\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55971.rb",
        "line": 1
      },
      "id": "V-55971"
    },
    {
      "title": "The web server must only accept client certificates issued by DoD PKI\nor DoD-approved PKI Certification Authorities (CAs).",
      "desc": "Non-DoD approved PKIs have not been evaluated to ensure that they have\nsecurity controls and identity vetting procedures in place which are sufficient\nfor DoD systems to rely on the identity asserted in the certificate. PKIs\nlacking sufficient security controls and identity vetting procedures risk being\ncompromised and issuing certificates that enable adversaries to impersonate\nlegitimate users.",
      "descriptions": {
        "default": "Non-DoD approved PKIs have not been evaluated to ensure that they have\nsecurity controls and identity vetting procedures in place which are sufficient\nfor DoD systems to rely on the identity asserted in the certificate. PKIs\nlacking sufficient security controls and identity vetting procedures risk being\ncompromised and issuing certificates that enable adversaries to impersonate\nlegitimate users.",
        "check": "Review the web server deployed configuration to determine if the web server\nwill accept client certificates issued by unapproved PKIs. The authoritative\nlist of DoD-approved PKIs is published at\nhttp://iase.disa.mil/pki-pke/interoperability.\n\nIf there are no websites configured or if NGINX is not configured to serve files,\nthis check is Not Applicable.\n\nCheck for the following:\n#grep 'ssl_client_certifcate' directive in the http and server context of the\nnginx.conf file and any separated include configuration file.\n\nIf the 'ssl_client_certifcate' directive cannot be found in NGINX configuration files,\nthis check is Not Applicable.\n\nExamine the contents of this file to determine if the trusted Cas are DoD approved.\nIf the trusted CA that is used to authenticate users to the website does not lead\nto an approved DoD CA, this is a finding.",
        "fix": "Configure the web server’s trust store to trust only DoD-approved PKIs\n  (e.g., DoD PKI, DoD ECA, and DoD-approved external partners)."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000427-WSR-000186",
        "gid": "V-56027",
        "rid": "SV-70281r2_rule",
        "stig_id": "SRG-APP-000427-WSR-000186",
        "fix_id": "F-60905r1_fix",
        "cci": [
          "CCI-002470"
        ],
        "nist": [
          "SC-23 (5)",
          ""
        ]
      },
      "code": "control 'V-56027' do\n  title \"The web server must only accept client certificates issued by DoD PKI\nor DoD-approved PKI Certification Authorities (CAs).\"\n  desc  \"Non-DoD approved PKIs have not been evaluated to ensure that they have\nsecurity controls and identity vetting procedures in place which are sufficient\nfor DoD systems to rely on the identity asserted in the certificate. PKIs\nlacking sufficient security controls and identity vetting procedures risk being\ncompromised and issuing certificates that enable adversaries to impersonate\nlegitimate users.\"\n\n  desc  'check', \"\n    Review the web server deployed configuration to determine if the web server\n  will accept client certificates issued by unapproved PKIs. The authoritative\n  list of DoD-approved PKIs is published at\n  http://iase.disa.mil/pki-pke/interoperability.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  Check for the following:\n  #grep 'ssl_client_certifcate' directive in the http and server context of the\n  nginx.conf file and any separated include configuration file.\n\n  If the 'ssl_client_certifcate' directive cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  Examine the contents of this file to determine if the trusted Cas are DoD approved.\n  If the trusted CA that is used to authenticate users to the website does not lead\n  to an approved DoD CA, this is a finding.\n  \"\n  desc 'fix', \"Configure the web server’s trust store to trust only DoD-approved PKIs\n  (e.g., DoD PKI, DoD ECA, and DoD-approved external partners).\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000427-WSR-000186'\n  tag \"gid\": 'V-56027'\n  tag \"rid\": 'SV-70281r2_rule'\n  tag \"stig_id\": 'SRG-APP-000427-WSR-000186'\n  tag \"fix_id\": 'F-60905r1_fix'\n  tag \"cci\": ['CCI-002470']\n  tag \"nist\": ['SC-23 (5)', '']\n\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.http.entries.each do |http|\n      describe http.params['ssl_client_certificate'] do\n        it { should_not be_nil }\n      end\n      if http.params['ssl_client_certificate'].nil?\n        impact 0.0\n        describe 'This test is NA because the ssl_client_certificate directive has not been configured.' do\n          skip 'This test is NA because the ssl_client_certificate directive has not been configured.'\n        end\n      else\n        http.params['ssl_client_certificate'].each do |cert|\n          describe x509_certificate(cert.join) do\n            it { should_not be_nil }\n            its('subject.C') { should cmp 'US' }\n            its('subject.O') { should cmp 'U.S. Government' }\n          end\n          describe x509_certificate(cert.join).subject.CN[0..2] do\n            it { should be_in input('dod_approved_pkis') }\n          end\n        end\n      end\n    end\n  end\n  if nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.each do |server|\n      next if server.params['ssl_client_certificate'].nil?\n\n      server.params['ssl_client_certificate'].each do |cert|\n        describe x509_certificate(cert.join) do\n          it { should_not be_nil }\n          its('subject.C') { should cmp 'US' }\n          its('subject.O') { should cmp 'U.S. Government' }\n        end\n        describe x509_certificate(cert.join).subject.CN[0..2] do\n          it { should be_in input('dod_approved_pkis') }\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-56027.rb",
        "line": 1
      },
      "id": "V-56027"
    },
    {
      "title": "The NGINX web server must enforce approved authorizations for logical access\nto hosted applications and resources in accordance with applicable access\ncontrol policies.",
      "desc": "To control access to sensitive information and hosted applications by\nentities that have been issued certificates by DoD-approved PKIs, the web\nserver must be properly configured to incorporate a means of authorization that\ndoes not simply rely on the possession of a valid certificate for access.\nAccess decisions must include a verification that the authenticated entity is\npermitted to access the information or application. Authorization decisions\nmust leverage a variety of methods, such as mapping the validated PKI\ncertificate to an account with an associated set of permissions on the system.\nIf the web server relied only on the possession of the certificate and did not\nmap to system roles and privileges, each user would have the same abilities and\nroles to make changes to the production system.",
      "descriptions": {
        "default": "To control access to sensitive information and hosted applications by\nentities that have been issued certificates by DoD-approved PKIs, the web\nserver must be properly configured to incorporate a means of authorization that\ndoes not simply rely on the possession of a valid certificate for access.\nAccess decisions must include a verification that the authenticated entity is\npermitted to access the information or application. Authorization decisions\nmust leverage a variety of methods, such as mapping the validated PKI\ncertificate to an account with an associated set of permissions on the system.\nIf the web server relied only on the possession of the certificate and did not\nmap to system roles and privileges, each user would have the same abilities and\nroles to make changes to the production system.",
        "check": "The NGINX web server must be configured to perform an authorization check to\nverify that the authenticated entity should be granted access to the requested\ncontent.\n\nIf NGINX is not configured to serve files, this check is Not Applicable.\n\nCheck for the following:\n  #grep the 'auth_request' directive in the location context of the nginx.conf\n  and any separated include configuration file.\n\nIf the 'auth_request' directive does not exist inside the location context,\nthis is a finding.",
        "fix": "Configure server to use the 'auth_request' directive in the\n  NGINX configuration file(s) to implement client authorization."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000033-WSR-000169",
        "gid": "V-55945",
        "rid": "SV-70199r2_rule",
        "stig_id": "SRG-APP-000033-WSR-000169",
        "fix_id": "F-60823r1_fix",
        "cci": [
          "CCI-000213"
        ],
        "nist": [
          "AC-3"
        ]
      },
      "code": "control 'V-55945' do\n  title \"The NGINX web server must enforce approved authorizations for logical access\nto hosted applications and resources in accordance with applicable access\ncontrol policies.\"\n  desc  \"To control access to sensitive information and hosted applications by\nentities that have been issued certificates by DoD-approved PKIs, the web\nserver must be properly configured to incorporate a means of authorization that\ndoes not simply rely on the possession of a valid certificate for access.\nAccess decisions must include a verification that the authenticated entity is\npermitted to access the information or application. Authorization decisions\nmust leverage a variety of methods, such as mapping the validated PKI\ncertificate to an account with an associated set of permissions on the system.\nIf the web server relied only on the possession of the certificate and did not\nmap to system roles and privileges, each user would have the same abilities and\nroles to make changes to the production system.\"\n\n  desc  'check', \"\n  The NGINX web server must be configured to perform an authorization check to\n  verify that the authenticated entity should be granted access to the requested\n  content.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n    #grep the 'auth_request' directive in the location context of the nginx.conf\n    and any separated include configuration file.\n\n  If the 'auth_request' directive does not exist inside the location context,\n  this is a finding.\n  \"\n  desc  'fix', \"Configure server to use the 'auth_request' directive in the\n  NGINX configuration file(s) to implement client authorization.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000033-WSR-000169'\n  tag \"gid\": 'V-55945'\n  tag \"rid\": 'SV-70199r2_rule'\n  tag \"stig_id\": 'SRG-APP-000033-WSR-000169'\n  tag \"fix_id\": 'F-60823r1_fix'\n  tag \"cci\": ['CCI-000213']\n  tag \"nist\": %w(AC-3)\n\n  # List of all auth_request uris in the configuration files\n  auth_uris = []\n\n  if nginx_conf.locations.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.locations.entries.each do |location|\n      auth_uris.push(location.params['auth_request']) unless location.params['auth_request'].nil?\n    end\n    describe 'The uris collected from the auth_request directives' do\n      it 'should not be an empty list.' do\n        expect(auth_uris).to_not(be_empty)\n      end\n    end\n    if auth_uris.empty?\n      describe 'This test is skipped because the auth_request directive has not been configured for locations.' do\n        skip 'This test is skipped because the auth_request directive has not been configured for locations.'\n      end\n    else\n      auth_uris.flatten!.uniq!\n      nginx_conf.locations.each do |location|\n        auth_uris.each do |uri|\n          next if location.params['_'].flatten.include?(uri)\n\n          describe 'Each location context' do\n            it 'should include an auth_request directive.' do\n              expect(location.params).to(include 'auth_request')\n            end\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55945.rb",
        "line": 1
      },
      "id": "V-55945"
    },
    {
      "title": "The NGINX web server must be built to fail to a known safe state if system\n  initialization fails, shutdown fails, or aborts fail.",
      "desc": "Determining a safe state for failure and weighing that against a\n  potential DoS for users depends on what type of application the web server is\n  hosting. For an application presenting publicly available information that is\n  not critical, a safe state for failure might be to shut down for any type of\n  failure; but for an application that presents critical and timely information,\n  a shutdown might not be the best state for all failures.\n\n    Performing a proper risk analysis of the hosted applications and\n  configuring the web server according to what actions to take for each failure\n  condition will provide a known fail safe state for the web server.",
      "descriptions": {
        "default": "Determining a safe state for failure and weighing that against a\n  potential DoS for users depends on what type of application the web server is\n  hosting. For an application presenting publicly available information that is\n  not critical, a safe state for failure might be to shut down for any type of\n  failure; but for an application that presents critical and timely information,\n  a shutdown might not be the best state for all failures.\n\n    Performing a proper risk analysis of the hosted applications and\n  configuring the web server according to what actions to take for each failure\n  condition will provide a known fail safe state for the web server.",
        "check": "Review the NGINX web server documentation, deployed configuration,\n  and risk analysis documentation to determine whether the web server will fail to known\n  states for system initialization, shutdown, or abort failures.\n\n  Interview the System Administrator for the NGINX web server.\n\n  Ask for documentation on the disaster recovery methods tested and planned for\n  the NGINX web server in the event of the necessity for rollback.\n\n  If documentation for a disaster recovery has not been established, this is a finding.",
        "fix": "Prepare documentation for disaster recovery methods for the NGINX\n  web server in the event of the necessity for rollback.\n\n  Document and test the disaster recovery methods designed."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000225-WSR-000140",
        "gid": "V-41811",
        "rid": "SV-54388r3_rule",
        "stig_id": "SRG-APP-000225-WSR-000140",
        "fix_id": "F-47270r3_fix",
        "cci": [
          "CCI-001190"
        ],
        "nist": [
          "SC-24"
        ]
      },
      "code": "control 'V-41811' do\n  title \"The NGINX web server must be built to fail to a known safe state if system\n  initialization fails, shutdown fails, or aborts fail.\"\n  desc \"Determining a safe state for failure and weighing that against a\n  potential DoS for users depends on what type of application the web server is\n  hosting. For an application presenting publicly available information that is\n  not critical, a safe state for failure might be to shut down for any type of\n  failure; but for an application that presents critical and timely information,\n  a shutdown might not be the best state for all failures.\n\n    Performing a proper risk analysis of the hosted applications and\n  configuring the web server according to what actions to take for each failure\n  condition will provide a known fail safe state for the web server.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation, deployed configuration,\n  and risk analysis documentation to determine whether the web server will fail to known\n  states for system initialization, shutdown, or abort failures.\n\n  Interview the System Administrator for the NGINX web server.\n\n  Ask for documentation on the disaster recovery methods tested and planned for\n  the NGINX web server in the event of the necessity for rollback.\n\n  If documentation for a disaster recovery has not been established, this is a finding.\n  \"\n  desc 'fix', \"Prepare documentation for disaster recovery methods for the NGINX\n  web server in the event of the necessity for rollback.\n\n  Document and test the disaster recovery methods designed.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000225-WSR-000140'\n  tag \"gid\": 'V-41811'\n  tag \"rid\": 'SV-54388r3_rule'\n  tag \"stig_id\": 'SRG-APP-000225-WSR-000140'\n  tag \"fix_id\": 'F-47270r3_fix'\n  tag \"cci\": ['CCI-001190']\n  tag \"nist\": %w(SC-24)\n\n  describe \"This test requires a Manual Review: Interview the SA and ask for documentation on the\n  disaster recovery for the NGINX web server in the event of the necessity for rollback.\" do\n    skip \"This test requires a Manual Review: Interview the SA and ask for documentation on the\n    disaster recovery for the NGINX web server in the event of the necessity for rollback.\"\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41811.rb",
        "line": 1
      },
      "id": "V-41811"
    },
    {
      "title": "The NGINX  web server must perform server-side session management.",
      "desc": "Session management is the practice of protecting the bulk of the user\n  authorization and identity information. Storing of this data can occur on the\n  client system or on the server.\n\n    When the session information is stored on the client, the session ID, along\n  with the user authorization and identity information, is sent along with each\n  client request and is stored in either a cookie, embedded in the uniform\n  resource locator (URL), or placed in a hidden field on the displayed form. Each\n  of these offers advantages and disadvantages. The biggest disadvantage to all\n  three is the hijacking of a session along with all of the user's credentials.\n\n    When the user authorization and identity information is stored on the\n  server in a protected and encrypted database, the communication between the\n  client and web server will only send the session identifier, and the server can\n  then retrieve user credentials for the session when needed. If, during\n  transmission, the session were to be hijacked, the user's credentials would not\n  be compromised.",
      "descriptions": {
        "default": "Session management is the practice of protecting the bulk of the user\n  authorization and identity information. Storing of this data can occur on the\n  client system or on the server.\n\n    When the session information is stored on the client, the session ID, along\n  with the user authorization and identity information, is sent along with each\n  client request and is stored in either a cookie, embedded in the uniform\n  resource locator (URL), or placed in a hidden field on the displayed form. Each\n  of these offers advantages and disadvantages. The biggest disadvantage to all\n  three is the hijacking of a session along with all of the user's credentials.\n\n    When the user authorization and identity information is stored on the\n  server in a protected and encrypted database, the communication between the\n  client and web server will only send the session identifier, and the server can\n  then retrieve user credentials for the session when needed. If, during\n  transmission, the session were to be hijacked, the user's credentials would not\n  be compromised.",
        "check": "Review the NGINX web server documentation and configuration to determine if\n  server-side session management is configured.\n\n  If it is determined that the web server is not required to perform session management,\n  this check is Not Applicable.\n\n  If it is not configured, this is a finding.",
        "fix": "Configure the NGINX web server to perform server-side session\n  management."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000001-WSR-000002",
        "gid": "V-40792",
        "rid": "SV-53023r3_rule",
        "stig_id": "SRG-APP-000001-WSR-000002",
        "fix_id": "F-45949r2_fix",
        "cci": [
          "CCI-000054"
        ],
        "nist": [
          "AC-10"
        ]
      },
      "code": "control 'V-40792' do\n  title 'The NGINX  web server must perform server-side session management.'\n  desc  \"Session management is the practice of protecting the bulk of the user\n  authorization and identity information. Storing of this data can occur on the\n  client system or on the server.\n\n    When the session information is stored on the client, the session ID, along\n  with the user authorization and identity information, is sent along with each\n  client request and is stored in either a cookie, embedded in the uniform\n  resource locator (URL), or placed in a hidden field on the displayed form. Each\n  of these offers advantages and disadvantages. The biggest disadvantage to all\n  three is the hijacking of a session along with all of the user's credentials.\n\n    When the user authorization and identity information is stored on the\n  server in a protected and encrypted database, the communication between the\n  client and web server will only send the session identifier, and the server can\n  then retrieve user credentials for the session when needed. If, during\n  transmission, the session were to be hijacked, the user's credentials would not\n  be compromised.\n  \"\n  desc 'check', \"Review the NGINX web server documentation and configuration to determine if\n  server-side session management is configured.\n\n  If it is determined that the web server is not required to perform session management,\n  this check is Not Applicable.\n\n  If it is not configured, this is a finding.\n  \"\n  desc 'fix', \"Configure the NGINX web server to perform server-side session\n  management.\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000001-WSR-000002'\n  tag \"gid\": 'V-40792'\n  tag \"rid\": 'SV-53023r3_rule'\n  tag \"stig_id\": 'SRG-APP-000001-WSR-000002'\n  tag \"fix_id\": 'F-45949r2_fix'\n  tag \"cci\": ['CCI-000054']\n  tag \"nist\": %w(AC-10)\n\n  if input('performs_session_management') == false\n    impact 0.0\n    describe 'This check is NA because session management is not required.' do\n      skip 'This check is NA because session management is not required.'\n    end\n  else\n    describe \"This test requires a Manual Review: Determine if server-side session management\n    is required. If it is required, verify that it is configured.\" do\n      skip \"This test requires a Manual Review: Determine if server-side session management\n      is required. If it is required, verify that it is configured.\"\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-40792.rb",
        "line": 1
      },
      "id": "V-40792"
    },
    {
      "title": "The account used to run the NGINX web server must not have a valid\n  login shell and password defined.",
      "desc": "During installation of the web server software, accounts are created\nfor the web server to operate properly. The accounts installed can have either\nno password installed or a default password, which will be known and documented\nby the vendor and the user community.\n\n    The first things an attacker will try when presented with a login screen\nare the default user identifiers with default passwords. Installed applications\nmay also install accounts with no password, making the login even easier. Once\nthe web server is installed, the passwords for any created accounts should be\nchanged and documented. The new passwords must meet the requirements for all\npasswords, i.e., upper/lower characters, numbers, special characters, time\nuntil change, reuse policy, etc.\n\n    Service accounts or system accounts that have no login capability do not\nneed to have passwords set or changed.",
      "descriptions": {
        "default": "During installation of the web server software, accounts are created\nfor the web server to operate properly. The accounts installed can have either\nno password installed or a default password, which will be known and documented\nby the vendor and the user community.\n\n    The first things an attacker will try when presented with a login screen\nare the default user identifiers with default passwords. Installed applications\nmay also install accounts with no password, making the login even easier. Once\nthe web server is installed, the passwords for any created accounts should be\nchanged and documented. The new passwords must meet the requirements for all\npasswords, i.e., upper/lower characters, numbers, special characters, time\nuntil change, reuse policy, etc.\n\n    Service accounts or system accounts that have no login capability do not\nneed to have passwords set or changed.",
        "check": "Review the NGINX web server documentation and deployment\n  configuration to determine what non-service/system accounts were installed\n  by the web server installation process.\n\n  Identify the account that is running the 'nginx' process:\n    # ps -ef | grep -i nginx | grep -v grep\n\n  root       675     1  0 Jun01 ?        00:00:00 nginx: master process /usr/sbin/nginx -c /etc/nginx/nginx.conf\n  nginx      677   675  0 Jun01 ?        00:00:00 nginx: worker process\n\n  If no service accounts are found, this check is Not Applicable.\n\n  Check to see if the accounts have a valid login shell:\n\n    # cut -d: -f1,7 /etc/passwd | grep -i nginx:/sbin/nologin\n    # cut -d: -f1,7 /etc/passwd | grep -i root:/sbin/nologin\n\n  If the service account has a valid login shell, verify that no password is\n  configured for the account:\n\n    # cut -d: -f1,2 /etc/shadow | grep -i root:!\n    # cut -d: -f1,2 /etc/shadow | grep -i nginx:!\n\n  If the account has a valid login shell and a password defined,\n  this is a finding.",
        "fix": "Update the /etc/passwd file to assign the accounts used to run the 'nginx'\nprocess an invalid login shell such as '/sbin/nologin'.\n\nLock the accounts used to run the 'nginx' process:\n\n# passwd -l\nLocking password for user\npasswd: Success"
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000516-WSR-000079",
        "gid": "V-55987",
        "rid": "SV-70241r2_rule",
        "stig_id": "SRG-APP-000516-WSR-000079",
        "fix_id": "F-60865r1_fix",
        "cci": [
          "CCI-000366"
        ],
        "nist": [
          "CM-6 b",
          ""
        ]
      },
      "code": "control 'V-55987' do\n  title \"The account used to run the NGINX web server must not have a valid\n  login shell and password defined.\"\n  desc  \"During installation of the web server software, accounts are created\nfor the web server to operate properly. The accounts installed can have either\nno password installed or a default password, which will be known and documented\nby the vendor and the user community.\n\n    The first things an attacker will try when presented with a login screen\nare the default user identifiers with default passwords. Installed applications\nmay also install accounts with no password, making the login even easier. Once\nthe web server is installed, the passwords for any created accounts should be\nchanged and documented. The new passwords must meet the requirements for all\npasswords, i.e., upper/lower characters, numbers, special characters, time\nuntil change, reuse policy, etc.\n\n    Service accounts or system accounts that have no login capability do not\nneed to have passwords set or changed.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and deployment\n  configuration to determine what non-service/system accounts were installed\n  by the web server installation process.\n\n  Identify the account that is running the 'nginx' process:\n    # ps -ef | grep -i nginx | grep -v grep\n\n  root       675     1  0 Jun01 ?        00:00:00 nginx: master process /usr/sbin/nginx -c /etc/nginx/nginx.conf\n  nginx      677   675  0 Jun01 ?        00:00:00 nginx: worker process\n\n  If no service accounts are found, this check is Not Applicable.\n\n  Check to see if the accounts have a valid login shell:\n\n    # cut -d: -f1,7 /etc/passwd | grep -i nginx:/sbin/nologin\n    # cut -d: -f1,7 /etc/passwd | grep -i root:/sbin/nologin\n\n  If the service account has a valid login shell, verify that no password is\n  configured for the account:\n\n    # cut -d: -f1,2 /etc/shadow | grep -i root:!\n    # cut -d: -f1,2 /etc/shadow | grep -i nginx:!\n\n  If the account has a valid login shell and a password defined,\n  this is a finding.\n  \"\n  desc 'fix', \"\n  Update the /etc/passwd file to assign the accounts used to run the 'nginx'\n  process an invalid login shell such as '/sbin/nologin'.\n\n  Lock the accounts used to run the 'nginx' process:\n\n  # passwd -l\n  Locking password for user\n  passwd: Success\n  \"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000516-WSR-000079'\n  tag \"gid\": 'V-55987'\n  tag \"rid\": 'SV-70241r2_rule'\n  tag \"stig_id\": 'SRG-APP-000516-WSR-000079'\n  tag \"fix_id\": 'F-60865r1_fix'\n  tag \"cci\": ['CCI-000366']\n  tag \"nist\": ['CM-6 b', '']\n\n  service_accounts = []\n\n  login_shells = file('/etc/shells').content.lines.collect(&:strip)\n\n  if command('ps').exist?\n    ps_output = command('ps -ef | grep -i nginx | grep -v grep').stdout.split(\"\\n\")\n\n    ps_output.each do |output|\n      account = command(\"echo '#{output}' | awk '{print $1}'\").stdout.split\n      service_accounts.push(account)\n    end\n  else\n    service_accounts << input('nginx_owner')\n  end\n\n  if service_accounts.empty? || service_accounts.nil?\n    impact 0.0\n    describe 'This test is NA because the no service accounts were found.' do\n      skip 'This test is NA because the service accounts were found.'\n    end\n  else\n    service_accounts.flatten.uniq\n    service_accounts.each do |account|\n      describe.one do\n        describe user(account.to_s) do\n          its('shell') { should_not be_in login_shells }\n        end\n        describe passwd do\n          its('users') { should_not include account.to_s }\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55987.rb",
        "line": 1
      },
      "id": "V-55987"
    },
    {
      "title": "The NGINX web server must have Multipurpose Internet Mail Extensions (MIME)\n  that invoke OS shell programs disabled.",
      "desc": "Controlling what a user of a hosted application can access is part of\n  the security posture of the web server. Any time a user can access more\n  functionality than is needed for the operation of the hosted application poses\n  a security issue. A user with too much access can view information that is not\n  needed for the user's job role, or the user could use the function in an\n  unintentional manner.\n\n    A MIME tells the web server what type of program various file types and\n  extensions are and what external utilities or programs are needed to execute\n  the file type.\n\n    A shell is a program that serves as the basic interface between the user\n  and the operating system, so hosted application users must not have access to\n  these programs. Shell programs may execute shell escapes and can then perform\n  unauthorized activities that could damage the security posture of the web\n  server.",
      "descriptions": {
        "default": "Controlling what a user of a hosted application can access is part of\n  the security posture of the web server. Any time a user can access more\n  functionality than is needed for the operation of the hosted application poses\n  a security issue. A user with too much access can view information that is not\n  needed for the user's job role, or the user could use the function in an\n  unintentional manner.\n\n    A MIME tells the web server what type of program various file types and\n  extensions are and what external utilities or programs are needed to execute\n  the file type.\n\n    A shell is a program that serves as the basic interface between the user\n  and the operating system, so hosted application users must not have access to\n  these programs. Shell programs may execute shell escapes and can then perform\n  unauthorized activities that could damage the security posture of the web\n  server.",
        "check": "Review the web server documentation and deployment configuration to\n  determine if the OS shell is accessible by any MIME types that are enabled.\n\n  Enter the following command to find the mime.types file:\n  # find / mime.types\n\n  Review the 'mime.types' file.\n\n  If there are any MIME types enabled for  .exe, .dll, .com, .bat, and .csh\n  programs, this is a finding.",
        "fix": "Edit the 'mime.types' file and disable all MIME types for .exe,\n  .dll, .com, .bat, and .csh programs."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000141-WSR-000081",
        "gid": "V-41699",
        "rid": "SV-54276r3_rule",
        "stig_id": "SRG-APP-000141-WSR-000081",
        "fix_id": "F-47158r2_fix",
        "cci": [
          "CCI-000381"
        ],
        "nist": [
          "CM-7 a",
          ""
        ]
      },
      "code": "control 'V-41699' do\n  title \"The NGINX web server must have Multipurpose Internet Mail Extensions (MIME)\n  that invoke OS shell programs disabled.\"\n  desc \"Controlling what a user of a hosted application can access is part of\n  the security posture of the web server. Any time a user can access more\n  functionality than is needed for the operation of the hosted application poses\n  a security issue. A user with too much access can view information that is not\n  needed for the user's job role, or the user could use the function in an\n  unintentional manner.\n\n    A MIME tells the web server what type of program various file types and\n  extensions are and what external utilities or programs are needed to execute\n  the file type.\n\n    A shell is a program that serves as the basic interface between the user\n  and the operating system, so hosted application users must not have access to\n  these programs. Shell programs may execute shell escapes and can then perform\n  unauthorized activities that could damage the security posture of the web\n  server.\n  \"\n\n  desc 'check', \"Review the web server documentation and deployment configuration to\n  determine if the OS shell is accessible by any MIME types that are enabled.\n\n  Enter the following command to find the mime.types file:\n  # find / mime.types\n\n  Review the 'mime.types' file.\n\n  If there are any MIME types enabled for  .exe, .dll, .com, .bat, and .csh\n  programs, this is a finding.\n  \"\n  desc  'fix', \"Edit the 'mime.types' file and disable all MIME types for .exe,\n  .dll, .com, .bat, and .csh programs.\n  \"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000141-WSR-000081'\n  tag \"gid\": 'V-41699'\n  tag \"rid\": 'SV-54276r3_rule'\n  tag \"stig_id\": 'SRG-APP-000141-WSR-000081'\n  tag \"fix_id\": 'F-47158r2_fix'\n  tag \"cci\": ['CCI-000381']\n  tag \"nist\": ['CM-7 a', '']\n\n  # Checks for enabled mime types against the disallowed list\n  if input('nginx_disallowed_mime_type').empty?\n    describe 'This check is skipped because the disallowed mime list should not be empty.' do\n      skip 'This check is skipped because the disallowed mime list should not be empty.'\n    end\n  else\n    input('nginx_disallowed_mime_type').each do |mime_type|\n      describe \"The MIME type: #{mime_type}\" do\n        it 'should not be enabled in the configuration' do\n          expect(command(\"grep -w #{mime_type} \" + input('mime_type_path')).stdout).to(eq '')\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41699.rb",
        "line": 1
      },
      "id": "V-41699"
    },
    {
      "title": "The NGINX web server must use encryption strength in accordance with the\n  categorization of data hosted by the web server when remote connections are\n  provided.",
      "desc": "The NGINX web server has several remote communications channels. Examples\n  are user requests via http/https, communication to a backend database, or\n  communication to authenticate users. The encryption used to communicate must\n  match the data that is being retrieved or presented.\n\n    Methods of communication are http for publicly displayed information, https\n  to encrypt when user data is being transmitted, VPN tunneling, or other\n  encryption methods to a database.",
      "descriptions": {
        "default": "The NGINX web server has several remote communications channels. Examples\n  are user requests via http/https, communication to a backend database, or\n  communication to authenticate users. The encryption used to communicate must\n  match the data that is being retrieved or presented.\n\n    Methods of communication are http for publicly displayed information, https\n  to encrypt when user data is being transmitted, VPN tunneling, or other\n  encryption methods to a database.",
        "check": "Review the NGINX web server documentation and configuration to determine the\n  communication methods that are being used.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n\n    # grep the 'ssl_prefer_server_cipher' directive in each server context of the\n    nginx.conf and any separated include configuration file.\n\n  Verify that the 'ssl_prefer_server_cipher' directive is set to 'on'.\n\n  If the directive is not set to 'on', this is a finding.\n\n    # grep the 'ssl_ciphers' directive in each server context of the nginx.conf and\n    any separated include configuration file.\n\n  Verify the encryption being used is in accordance with the categorization of data\n  being hosted when remote connections are provided.\n\n  If it is not, then this is a finding.\n\n  If the 'ssl_prefer_server_cipher' and 'ssl_ciphers' directives cannot be found in\n  NGINX configuration files, this check is Not Applicable.",
        "fix": "Include the 'ssl_prefer_server_cipher' directive in all server context\n  of the NGINX configuration file(s) and set the directive to 'on'.\n  Configure the nginx web server to use encryption strength equal to the categorization\n  of data hosted when remote connections are provided."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000014-WSR-000006",
        "gid": "V-40800",
        "rid": "SV-53037r3_rule",
        "stig_id": "SRG-APP-000014-WSR-000006",
        "fix_id": "F-45963r2_fix",
        "cci": [
          "CCI-000068"
        ],
        "nist": [
          "AC-17 (2)",
          ""
        ]
      },
      "code": "control 'V-40800' do\n  title \"The NGINX web server must use encryption strength in accordance with the\n  categorization of data hosted by the web server when remote connections are\n  provided.\"\n  desc \"The NGINX web server has several remote communications channels. Examples\n  are user requests via http/https, communication to a backend database, or\n  communication to authenticate users. The encryption used to communicate must\n  match the data that is being retrieved or presented.\n\n    Methods of communication are http for publicly displayed information, https\n  to encrypt when user data is being transmitted, VPN tunneling, or other\n  encryption methods to a database.\n  \"\n  desc 'check', \"Review the NGINX web server documentation and configuration to determine the\n  communication methods that are being used.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n\n    # grep the 'ssl_prefer_server_cipher' directive in each server context of the\n    nginx.conf and any separated include configuration file.\n\n  Verify that the 'ssl_prefer_server_cipher' directive is set to 'on'.\n\n  If the directive is not set to 'on', this is a finding.\n\n    # grep the 'ssl_ciphers' directive in each server context of the nginx.conf and\n    any separated include configuration file.\n\n  Verify the encryption being used is in accordance with the categorization of data\n  being hosted when remote connections are provided.\n\n  If it is not, then this is a finding.\n\n  If the 'ssl_prefer_server_cipher' and 'ssl_ciphers' directives cannot be found in\n  NGINX configuration files, this check is Not Applicable.\n  \"\n  desc 'fix', \"Include the 'ssl_prefer_server_cipher' directive in all server context\n  of the NGINX configuration file(s) and set the directive to 'on'.\n  Configure the nginx web server to use encryption strength equal to the categorization\n  of data hosted when remote connections are provided.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000014-WSR-000006'\n  tag \"gid\": 'V-40800'\n  tag \"rid\": 'SV-53037r3_rule'\n  tag \"stig_id\": 'SRG-APP-000014-WSR-000006'\n  tag \"fix_id\": 'F-45963r2_fix'\n  tag \"cci\": ['CCI-000068']\n  tag \"nist\": ['AC-17 (2)', '']\n\n  if nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.each do |server|\n      if server.params['ssl_prefer_server_ciphers'].nil?\n        impact 0.0\n        describe 'This test is NA because the ssl_prefer_server_ciphers directive has not been configured.' do\n          skip 'This test is NA because the ssl_prefer_server_ciphers directive has not been configured.'\n        end\n      else\n        server.params['ssl_prefer_server_ciphers'].each do |prefer_ciphers|\n          describe 'The ssl_prefer_server_cipher' do\n            it 'should be set to on.' do\n              expect(prefer_ciphers).to(cmp('on'))\n            end\n          end\n        end\n      end\n      if server.params['ssl_ciphers'].nil?\n        impact 0.0\n        describe 'This test is NA because the ssl_ciphers directive has not been configured.' do\n          skip 'This test is NA because the ssl_ciphers directive has not been configured.'\n        end\n      else\n        ciphers_found = []\n        server.params['ssl_ciphers'].each do |ciphers|\n          ciphers[0].to_s.split(\"\\:\").each do |cipher|\n            ciphers_found << cipher\n          end\n        end\n        ciphers_found.uniq!\n        ciphers_found.each do |cipher|\n          describe 'Each cipher' do\n            it 'found in configuration should be included in the list of ciphers approved to encrypt data' do\n              expect(cipher).to(be_in(input('approved_ssl_ciphers')))\n            end\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-40800.rb",
        "line": 1
      },
      "id": "V-40800"
    },
    {
      "title": "The NGINX web server must set an absolute timeout for sessions.",
      "desc": "Leaving sessions open indefinitely is a major security risk. An\nattacker can easily use an already authenticated session to access the hosted\napplication as the previously authenticated user. By closing sessions after an\nabsolute period of time, the user is forced to re-authenticate guaranteeing the\nsession is still in use. Enabling an absolute timeout for sessions closes\nsessions that are still active. Examples would be a runaway process accessing\nthe web server or an attacker using a hijacked session to slowly probe the web\nserver.",
      "descriptions": {
        "default": "Leaving sessions open indefinitely is a major security risk. An\nattacker can easily use an already authenticated session to access the hosted\napplication as the previously authenticated user. By closing sessions after an\nabsolute period of time, the user is forced to re-authenticate guaranteeing the\nsession is still in use. Enabling an absolute timeout for sessions closes\nsessions that are still active. Examples would be a runaway process accessing\nthe web server or an attacker using a hijacked session to slowly probe the web\nserver.",
        "rationale": "",
        "check": "Review the NGINX web server documentation and deployed configuration to verify\nthat the web server is configured to close sessions after an absolute period of\ntime.\n\nIf there are no websites configured or if NGINX is not configured to serve files,\nthis check is Not Applicable.\n\nTo view the timeout values enter the following commands:\n\n  # grep ''client_body_timeout'' on the nginx.conf file and any separate included configuration files\n\n  # grep ''client_header_timeout'' on the nginx.conf file and any separate included configuration files\n\n  # grep 'keepalive_timeout' in the nginx.conf and any separated include configuration file.\n\nIf the values of the 'client_body_timeout' and 'client_header_timeout' directives are not set to 10 seconds (10s) or less,  this is a finding.\n\nIf the value of  'keepalive_timeout' directive is not set to 5 (seconds) or less, this is a finding.",
        "fix": "Configure the NGINX web server to include the 'client_body_timeout', 'client_header_timeout', and 'keepalive_timeout' in the NGINX configuration file(s). Set the value of 'client_body_timeout' and 'client_header_timeout to be 10 seconds or less. Set the value of 'keep_alive_timeout' to be 5 seconds or less.\n\nExample:\n  client_body_timeout   10s;\n  client_header_timeout 10s;\n  keepalive_timout 5s 5s;"
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000295-WSR-000012",
        "gid": "V-55951",
        "rid": "SV-70205r2_rule",
        "stig_id": "SRG-APP-000295-WSR-000012",
        "fix_id": "F-60829r1_fix",
        "cci": [
          "CCI-002361"
        ],
        "nist": [
          "AC-12"
        ]
      },
      "code": "control 'V-55951' do\n  title 'The NGINX web server must set an absolute timeout for sessions.'\n  desc  \"Leaving sessions open indefinitely is a major security risk. An\nattacker can easily use an already authenticated session to access the hosted\napplication as the previously authenticated user. By closing sessions after an\nabsolute period of time, the user is forced to re-authenticate guaranteeing the\nsession is still in use. Enabling an absolute timeout for sessions closes\nsessions that are still active. Examples would be a runaway process accessing\nthe web server or an attacker using a hijacked session to slowly probe the web\nserver.\"\n  desc  'rationale', ''\n  desc  'check', \"\n  Review the NGINX web server documentation and deployed configuration to verify\n  that the web server is configured to close sessions after an absolute period of\n  time.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  To view the timeout values enter the following commands:\n\n    # grep ''client_body_timeout'' on the nginx.conf file and any separate included configuration files\n\n    # grep ''client_header_timeout'' on the nginx.conf file and any separate included configuration files\n\n    # grep 'keepalive_timeout' in the nginx.conf and any separated include configuration file.\n\n  If the values of the 'client_body_timeout' and 'client_header_timeout' directives are not set to 10 seconds (10s) or less,  this is a finding.\n\n  If the value of  'keepalive_timeout' directive is not set to 5 (seconds) or less, this is a finding.\n  \"\n  desc 'fix', \"\n  Configure the NGINX web server to include the 'client_body_timeout', 'client_header_timeout', and 'keepalive_timeout' in the NGINX configuration file(s). Set the value of 'client_body_timeout' and 'client_header_timeout to be 10 seconds or less. Set the value of 'keep_alive_timeout' to be 5 seconds or less.\n\n  Example:\n    client_body_timeout   10s;\n    client_header_timeout 10s;\n    keepalive_timout 5s 5s;\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000295-WSR-000012'\n  tag \"gid\": 'V-55951'\n  tag \"rid\": 'SV-70205r2_rule'\n  tag \"stig_id\": 'SRG-APP-000295-WSR-000012'\n  tag \"fix_id\": 'F-60829r1_fix'\n  tag \"cci\": ['CCI-002361']\n  tag \"nist\": %w(AC-12)\n\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      describe 'The http context client_header_timeout value' do\n        it 'should exist and should be set to 10 (seconds) or less.' do\n          expect(http).to(include 'client_header_timeout')\n          expect(http['client_header_timeout'].join.to_i).to(be <= 10)\n        end\n      end\n      describe 'The http context client_body_timeout value' do\n        it 'should exist and should be set to 10 (seconds) or less.' do\n          expect(http).to(include 'client_body_timeout')\n          expect(http['client_body_timeout'].join.to_i).to(be <= 10)\n        end\n      end\n      describe 'The http context keep-alive value' do\n        it 'should exist and should be set to 5 (seconds) or less.' do\n          expect(http).to(include 'keepalive_timeout')\n          http['keepalive_timeout'].each do |http_alive|\n            expect(http_alive[0].to_i).to(be <= 5)\n            expect(http_alive[1].to_i).to(be <= 5)\n          end\n        end\n      end\n    end\n  end\n\n  if nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.each do |server|\n      describe 'The server context client_header_timeout value' do\n        it 'should be set to 10 (seconds) or less, if found.' do\n          unless server.params['client_header_timeout'].nil?\n            expect(server.params['client_header_timeout'].join.to_i).to(be <= 10)\n          end\n        end\n      end\n      describe 'The server context client_body_timeout value' do\n        it 'should be set to 10 (seconds) or less, if found' do\n          unless server.params['client_body_timeout'].nil?\n            expect(server.params['client_body_timeout'].join.to_i).to(be <= 10)\n          end\n        end\n      end\n      describe 'The server context keep-alive value' do\n        it 'should be set to 5 (seconds) or less, if found.' do\n          unless server.params['keepalive_timeout'].nil?\n            server.params['keepalive_timeout'].each do |server_alive|\n              expect(server_alive[0].to_i).to(be <= 5)\n              expect(server_alive[1].to_i).to(be <= 5)\n            end\n          end\n        end\n      end\n    end\n  end\n\n  if nginx_conf.locations.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.locations.each do |location|\n      describe 'The location context keep-alive value' do\n        it 'should be set to 5 (seconds) or less, if found.' do\n          unless location.params['keepalive_timeout'].nil?\n            location.params['keepalive_timeout'].each do |location_alive|\n              expect(location_alive[0].to_i).to(be <= 5)\n              expect(location_alive[1].to_i).to(be <= 5)\n            end\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55951.rb",
        "line": 1
      },
      "id": "V-55951"
    },
    {
      "title": "The NGINX web server must augment re-creation to a stable and known\n  baseline.",
      "desc": "Making certain that the web server has not been updated by an\n  unauthorized user is always a concern. Adding patches, functions, and modules\n  that are untested and not part of the baseline opens the possibility for\n  security risks. The web server must offer, and not hinder, a method that allows\n  for the quick and easy reinstallation of a verified and patched baseline to\n  guarantee the production web server is up-to-date and has not been modified to\n  add functionality or expose security risks.\n\n    When the web server does not offer a method to roll back to a clean\n  baseline, external methods, such as a baseline snapshot or virtualizing the web\n  server, can be used.",
      "descriptions": {
        "default": "Making certain that the web server has not been updated by an\n  unauthorized user is always a concern. Adding patches, functions, and modules\n  that are untested and not part of the baseline opens the possibility for\n  security risks. The web server must offer, and not hinder, a method that allows\n  for the quick and easy reinstallation of a verified and patched baseline to\n  guarantee the production web server is up-to-date and has not been modified to\n  add functionality or expose security risks.\n\n    When the web server does not offer a method to roll back to a clean\n  baseline, external methods, such as a baseline snapshot or virtualizing the web\n  server, can be used.",
        "check": "Review the NGINX web server documentation and deployed configuration to determine\nif the web server offers the capability to reinstall from a known state.\n\nInterview the System Administrator for the NGINX web server.\n\nAsk for documentation on the disaster recovery methods tested and planned for the\nNGINX web server in the event of the necessity for rollback.\n\nIf documentation for a disaster recovery has not been established, this is a finding.",
        "fix": "Prepare documentation for disaster recovery methods for the NGINX web server\n  in the event of the necessity for rollback.\n\n  Document and test the disaster recovery methods designed."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000225-WSR-000074",
        "gid": "V-56029",
        "rid": "SV-70283r2_rule",
        "stig_id": "SRG-APP-000225-WSR-000074",
        "fix_id": "F-60907r1_fix",
        "cci": [
          "CCI-001190"
        ],
        "nist": [
          "SC-24"
        ]
      },
      "code": "control 'V-56029' do\n  title \"The NGINX web server must augment re-creation to a stable and known\n  baseline.\"\n  desc \"Making certain that the web server has not been updated by an\n  unauthorized user is always a concern. Adding patches, functions, and modules\n  that are untested and not part of the baseline opens the possibility for\n  security risks. The web server must offer, and not hinder, a method that allows\n  for the quick and easy reinstallation of a verified and patched baseline to\n  guarantee the production web server is up-to-date and has not been modified to\n  add functionality or expose security risks.\n\n    When the web server does not offer a method to roll back to a clean\n  baseline, external methods, such as a baseline snapshot or virtualizing the web\n  server, can be used.\n  \"\n\n  desc 'check', \"\n  Review the NGINX web server documentation and deployed configuration to determine\n  if the web server offers the capability to reinstall from a known state.\n\n  Interview the System Administrator for the NGINX web server.\n\n  Ask for documentation on the disaster recovery methods tested and planned for the\n  NGINX web server in the event of the necessity for rollback.\n\n  If documentation for a disaster recovery has not been established, this is a finding.\n  \"\n  desc 'fix', \"Prepare documentation for disaster recovery methods for the NGINX web server\n  in the event of the necessity for rollback.\n\n  Document and test the disaster recovery methods designed.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000225-WSR-000074'\n  tag \"gid\": 'V-56029'\n  tag \"rid\": 'SV-70283r2_rule'\n  tag \"stig_id\": 'SRG-APP-000225-WSR-000074'\n  tag \"fix_id\": 'F-60907r1_fix'\n  tag \"cci\": ['CCI-001190']\n  tag \"nist\": %w(SC-24)\n\n  describe \"This test requires a Manual Review: Interview the SA and ask for documentation on the\n  disaster recovery methods for the NGINX web server in the event of the necessity for rollback.\" do\n    skip \"This test requires a Manual Review: Interview the SA and ask for documentation on the\n    disaster recovery methods for the NGINX web server in the event of the necessity for rollback.\"\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-56029.rb",
        "line": 1
      },
      "id": "V-56029"
    },
    {
      "title": "The NGINX web server must use cryptography to protect the integrity of\n  remote sessions.",
      "desc": "Data exchanged between the user and the web server can range from\n  static display data to credentials used to log into the hosted application.\n  Even when data appears to be static, the non-displayed logic in a web page may\n  expose business logic or trusted system relationships. The integrity of all the\n  data being exchanged between the user and web server must always be trusted. To\n  protect the integrity and trust, encryption methods should be used to protect\n  the complete communication session.",
      "descriptions": {
        "default": "Data exchanged between the user and the web server can range from\n  static display data to credentials used to log into the hosted application.\n  Even when data appears to be static, the non-displayed logic in a web page may\n  expose business logic or trusted system relationships. The integrity of all the\n  data being exchanged between the user and web server must always be trusted. To\n  protect the integrity and trust, encryption methods should be used to protect\n  the complete communication session.",
        "check": "Review the NGINX web server documentation and configuration to\n  make certain that the NGINX web server is configured to use cryptography to protect\n  the integrity of remote access sessions.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  Check for the following:\n    #grep the 'ssl_protocols' directive in the server context of the nginx.conf\n    and any separated include configuration file.\n\n  If the 'ssl_protocols' directive cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  If the 'ssl_protocols' directive is not set to the approved TLS version, this is a finding.",
        "fix": "Add the 'ssl_protocols' directive to the NGINX configuration file(s)\n  and configure it to use the approved TLS protocols to utilize encryption during\n  remote access sessions.\n\n  Example:\n  server {\n          ssl_protocols TLSv1.2;\n  }"
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000015-WSR-000014",
        "gid": "V-40819",
        "rid": "SV-53068r3_rule",
        "stig_id": "SRG-APP-000015-WSR-000014",
        "fix_id": "F-45994r2_fix",
        "cci": [
          "CCI-001453"
        ],
        "nist": [
          "AC-17 (2)",
          ""
        ]
      },
      "code": "control 'V-40819' do\n  title \"The NGINX web server must use cryptography to protect the integrity of\n  remote sessions.\"\n  desc \"Data exchanged between the user and the web server can range from\n  static display data to credentials used to log into the hosted application.\n  Even when data appears to be static, the non-displayed logic in a web page may\n  expose business logic or trusted system relationships. The integrity of all the\n  data being exchanged between the user and web server must always be trusted. To\n  protect the integrity and trust, encryption methods should be used to protect\n  the complete communication session.\"\n  desc 'check', \"Review the NGINX web server documentation and configuration to\n  make certain that the NGINX web server is configured to use cryptography to protect\n  the integrity of remote access sessions.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  Check for the following:\n    #grep the 'ssl_protocols' directive in the server context of the nginx.conf\n    and any separated include configuration file.\n\n  If the 'ssl_protocols' directive cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  If the 'ssl_protocols' directive is not set to the approved TLS version, this is a finding.\n  \"\n  desc 'fix', \"Add the 'ssl_protocols' directive to the NGINX configuration file(s)\n  and configure it to use the approved TLS protocols to utilize encryption during\n  remote access sessions.\n\n  Example:\n  server {\n          ssl_protocols TLSv1.2;\n  }\n\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000015-WSR-000014'\n  tag \"gid\": 'V-40819'\n  tag \"rid\": 'SV-53068r3_rule'\n  tag \"stig_id\": 'SRG-APP-000015-WSR-000014'\n  tag \"fix_id\": 'F-45994r2_fix'\n  tag \"cci\": ['CCI-001453']\n  tag \"nist\": ['AC-17 (2)', '']\n\n  if nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.each do |server|\n      if server.params['ssl_protocols'].nil?\n        impact 0.0\n        describe 'This test is NA because the ssl_protocols directive has not been configured.' do\n          skip 'This test is NA because the ssl_protocols directive has not been configured.'\n        end\n      else\n        server.params['ssl_protocols'].each do |protocol|\n          describe 'Each protocol' do\n            it 'should be included in the list of protocols approved to encrypt data' do\n              expect(protocol).to(be_in(input('approved_ssl_protocols')))\n            end\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-40819.rb",
        "line": 1
      },
      "id": "V-40819"
    },
    {
      "title": "The NGINX web server application, libraries, and configuration files must\nonly be accessible to privileged users.",
      "desc": "A web server can be modified through parameter modification, patch\ninstallation, upgrades to the web server or modules, and security parameter\nchanges. With each of these changes, there is the potential for an adverse\neffect such as a DoS, web server instability, or hosted application instability.\n\n    To limit changes to the web server and limit exposure to any adverse\neffects from the changes, files such as the web server application files,\nlibraries, and configuration files must have permissions and ownership set\nproperly to only allow privileged users access.",
      "descriptions": {
        "default": "A web server can be modified through parameter modification, patch\ninstallation, upgrades to the web server or modules, and security parameter\nchanges. With each of these changes, there is the potential for an adverse\neffect such as a DoS, web server instability, or hosted application instability.\n\n    To limit changes to the web server and limit exposure to any adverse\neffects from the changes, files such as the web server application files,\nlibraries, and configuration files must have permissions and ownership set\nproperly to only allow privileged users access.",
        "check": "Review the NGINX web server documentation and configuration\n  to determine if the web server provides unique account roles specifically for\n  the purposes of segmenting the responsibilities for managing the web server.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  If the 'root' directive cannot be found in NGINX configuration files, this check\n  is Not Applicable.\n\n  This check verifies that the SA or Web Manager controlled account owns the key\n  web server files. These same files, which control the configuration of the web\n  server, and thus its behavior, must also be accessible by the account that runs\n  the web service process.\n\n  If it exists, the following file need to be owned by a privileged account:\n    - nginx.conf and its included configuration files\n    - Application directories\n\n  Use the following commands:\n    #  find / -name nginx.conf to find the file.\n    #  grep 'include' on the nginx.conf file to identify included configuration files.\n\n  Change to the directories that contain the nginx.conf and included configuration files.\n  Use the following command:\n    #   ls -l on these files to determine ownership of the file\n\n  Use the following commands:\n    #  grep 'root' on the nginx.conf file and any separate included configuration files\n    to identify all the document root directories.\n    # ls -l on all document root directories found to determine the ownership of directories\n\n  -The Web Manager or the SA should own all the system files and directories.\n  -The configurable directories can be owned by the WebManager or equivalent user.\n      -Permissions on these files should be 660 or more restrictive.\n\n  If root or an authorized user does not own the web system files and directories, and the\n  permission are not correct, this is a finding.",
        "fix": "Restrict access to the web servers access control files and application\n  directories to only the System Administrator, Web Manager, or the Web Manager designees.\n\n  Determine where the key server files are located by running the following command (per file):\n\n    # find / -name <'key server file'>\n\n  Run the following commands to set permissions:\n\n    # cd <'key server file location'>/\n    # chown <'authorized user'>:<'authorized group'>  <'key server file'>\n    # chmod 660 <'key server file'>\n\n  Determine where the application directories are located by running the following command:\n\n    # grep 'root' on the nginx.conf file and any separate included configuration files\n\n  Run the following command to set permissions:\n    # chown <'authorized user'>:<'authorized group'>  <'application directory'>"
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000380-WSR-000072",
        "gid": "V-55981",
        "rid": "SV-70235r2_rule",
        "stig_id": "SRG-APP-000380-WSR-000072",
        "fix_id": "F-60859r2_fix",
        "cci": [
          "CCI-001813"
        ],
        "nist": [
          "CM-5 (1)",
          ""
        ]
      },
      "code": "control 'V-55981' do\n  title \"The NGINX web server application, libraries, and configuration files must\nonly be accessible to privileged users.\"\n  desc  \"A web server can be modified through parameter modification, patch\ninstallation, upgrades to the web server or modules, and security parameter\nchanges. With each of these changes, there is the potential for an adverse\neffect such as a DoS, web server instability, or hosted application instability.\n\n    To limit changes to the web server and limit exposure to any adverse\neffects from the changes, files such as the web server application files,\nlibraries, and configuration files must have permissions and ownership set\nproperly to only allow privileged users access.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and configuration\n  to determine if the web server provides unique account roles specifically for\n  the purposes of segmenting the responsibilities for managing the web server.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  If the 'root' directive cannot be found in NGINX configuration files, this check\n  is Not Applicable.\n\n  This check verifies that the SA or Web Manager controlled account owns the key\n  web server files. These same files, which control the configuration of the web\n  server, and thus its behavior, must also be accessible by the account that runs\n  the web service process.\n\n  If it exists, the following file need to be owned by a privileged account:\n    - nginx.conf and its included configuration files\n    - Application directories\n\n  Use the following commands:\n    #  find / -name nginx.conf to find the file.\n    #  grep 'include' on the nginx.conf file to identify included configuration files.\n\n  Change to the directories that contain the nginx.conf and included configuration files.\n  Use the following command:\n    #   ls -l on these files to determine ownership of the file\n\n  Use the following commands:\n    #  grep 'root' on the nginx.conf file and any separate included configuration files\n    to identify all the document root directories.\n    # ls -l on all document root directories found to determine the ownership of directories\n\n  -The Web Manager or the SA should own all the system files and directories.\n  -The configurable directories can be owned by the WebManager or equivalent user.\n      -Permissions on these files should be 660 or more restrictive.\n\n  If root or an authorized user does not own the web system files and directories, and the\n  permission are not correct, this is a finding.\n  \"\n  desc 'fix', \"Restrict access to the web servers access control files and application\n  directories to only the System Administrator, Web Manager, or the Web Manager designees.\n\n  Determine where the key server files are located by running the following command (per file):\n\n    # find / -name <'key server file'>\n\n  Run the following commands to set permissions:\n\n    # cd <'key server file location'>/\n    # chown <'authorized user'>:<'authorized group'>  <'key server file'>\n    # chmod 660 <'key server file'>\n\n  Determine where the application directories are located by running the following command:\n\n    # grep 'root' on the nginx.conf file and any separate included configuration files\n\n  Run the following command to set permissions:\n    # chown <'authorized user'>:<'authorized group'>  <'application directory'>\n  \"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000380-WSR-000072'\n  tag \"gid\": 'V-55981'\n  tag \"rid\": 'SV-70235r2_rule'\n  tag \"stig_id\": 'SRG-APP-000380-WSR-000072'\n  tag \"fix_id\": 'F-60859r2_fix'\n  tag \"cci\": ['CCI-001813']\n  tag \"nist\": ['CM-5 (1)', '']\n\n  if input('access_control_files').empty?\n    describe 'This check is skipped because no configuration files have been specified.' do\n      skip 'This check is skipped because no configuration files have been specified.'\n    end\n  else\n    input('access_control_files').each do |file|\n      file_path = command(\"find / -name #{file}\").stdout.chomp\n\n      if file_path.empty?\n        describe 'Skip Message' do\n          skip \"Skipped: Access control file #{file} not found\"\n        end\n      end\n\n      file_path.split.each do |file|\n        describe file(file) do\n          its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n          its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n          it { should_not be_more_permissive_than('0660') }\n        end\n      end\n    end\n\n    nginx_conf.contents.each_key do |file|\n      describe file(file) do\n        its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n        its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n        it { should_not be_more_permissive_than('0660') }\n      end\n    end\n\n    if nginx_conf.contents.keys.empty?\n      describe 'Skip Message' do\n        skip 'Skipped: no conf files included.'\n      end\n    end\n\n    webserver_roots = []\n    if nginx_conf.params['http'].nil?\n      impact 0.0\n      describe 'This check is NA because no websites have been configured.' do\n        skip 'This check is NA because no websites have been configured.'\n      end\n    else\n      nginx_conf.http.entries.each do |http|\n        webserver_roots.push(http.params['root']) unless http.params['root'].nil?\n      end\n    end\n\n    if nginx_conf.servers.nil?\n      impact 0.0\n      describe 'This check is NA because NGINX has not been configured to serve files.' do\n        skip 'This check is NA because NGINX has not been configured to serve files.'\n      end\n    else\n      nginx_conf.servers.entries.each do |server|\n        webserver_roots.push(server.params['root']) unless server.params['root'].nil?\n      end\n    end\n\n    if nginx_conf.locations.nil?\n      impact 0.0\n      describe 'This check is NA because NGINX has not been configured to serve files.' do\n        skip 'This check is NA because NGINX has not been configured to serve files.'\n      end\n    else\n      nginx_conf.locations.entries.each do |location|\n        webserver_roots.push(location.params['root']) unless location.params['root'].nil?\n      end\n    end\n    if webserver_roots.empty?\n      impact 0.0\n      describe 'This check is NA because no root directories have been set.' do\n        skip 'This test is NA because no root directories have been set.'\n      end\n    else\n      uniq_webserver_roots = webserver_roots.flatten.uniq\n      uniq_webserver_roots.each do |directory|\n        describe file(directory) do\n          its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n          its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n          it { should be_sticky }\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55981.rb",
        "line": 1
      },
      "id": "V-55981"
    },
    {
      "title": "The NGINX web server must generate log records that can be mapped to\nCoordinated Universal Time (UTC) or Greenwich Mean Time (GMT).",
      "desc": "If time stamps are not consistently applied and there is no common\ntime reference, it is difficult to perform forensic analysis across multiple\ndevices and log records.\n\n    Time stamps generated by the web server include date and time. Time is\ncommonly expressed in Coordinated Universal Time (UTC), a modern continuation\nof Greenwich Mean Time (GMT), or local time with an offset from UTC.",
      "descriptions": {
        "default": "If time stamps are not consistently applied and there is no common\ntime reference, it is difficult to perform forensic analysis across multiple\ndevices and log records.\n\n    Time stamps generated by the web server include date and time. Time is\ncommonly expressed in Coordinated Universal Time (UTC), a modern continuation\nof Greenwich Mean Time (GMT), or local time with an offset from UTC.",
        "check": "Review the NGINX web server documentation and configuration to determine the time\nstamp format for log data.\n\nCheck for the following:\n    # grep for all 'env' directives in the main context of the nginx.conf.\n\nIf the 'env' directive cannot be found in NGINX configuration files, this check is\nNot Applicable.\n\nIf neither 'env TZ=UTC' or 'env TZ=GMT' exists, this is a finding.",
        "fix": "Configure the 'TZ' environment variable in the nginx.conf to store\n  log data time stamps in a format that is mappted to UTC or GMT time.\n\n  Example configuration:\n  'env TZ=UTC;'\n  or\n  'env TZ=GMT;'"
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000374-WSR-000172",
        "gid": "V-55979",
        "rid": "SV-70233r2_rule",
        "stig_id": "SRG-APP-000374-WSR-000172",
        "fix_id": "F-60857r1_fix",
        "cci": [
          "CCI-001890"
        ],
        "nist": [
          "AU-8 b",
          ""
        ]
      },
      "code": "control 'V-55979' do\n  title \"The NGINX web server must generate log records that can be mapped to\nCoordinated Universal Time (UTC) or Greenwich Mean Time (GMT).\"\n  desc  \"If time stamps are not consistently applied and there is no common\ntime reference, it is difficult to perform forensic analysis across multiple\ndevices and log records.\n\n    Time stamps generated by the web server include date and time. Time is\ncommonly expressed in Coordinated Universal Time (UTC), a modern continuation\nof Greenwich Mean Time (GMT), or local time with an offset from UTC.\n  \"\n\n  desc 'check', \"\n  Review the NGINX web server documentation and configuration to determine the time\n  stamp format for log data.\n\n  Check for the following:\n      # grep for all 'env' directives in the main context of the nginx.conf.\n\n  If the 'env' directive cannot be found in NGINX configuration files, this check is\n  Not Applicable.\n\n  If neither 'env TZ=UTC' or 'env TZ=GMT' exists, this is a finding.\n  \"\n  desc 'fix', \"Configure the 'TZ' environment variable in the nginx.conf to store\n  log data time stamps in a format that is mappted to UTC or GMT time.\n\n  Example configuration:\n  'env TZ=UTC;'\n  or\n  'env TZ=GMT;'\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000374-WSR-000172'\n  tag \"gid\": 'V-55979'\n  tag \"rid\": 'SV-70233r2_rule'\n  tag \"stig_id\": 'SRG-APP-000374-WSR-000172'\n  tag \"fix_id\": 'F-60857r1_fix'\n  tag \"cci\": ['CCI-001890']\n  tag \"nist\": ['AU-8 b', '']\n\n  if nginx_conf.params['env'].nil?\n    impact 0.0\n    describe 'This check is NA because the env directive has not been configured.' do\n      skip 'This check is NA because the env directive has not been configured.'\n    end\n  else\n    describe.one do\n      describe nginx_conf.params['env'].join do\n        it { should cmp 'TZ=UTC' }\n      end\n      describe nginx_conf.params['env'].join do\n        it { should cmp 'TZ=GMT' }\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55979.rb",
        "line": 1
      },
      "id": "V-55979"
    },
    {
      "title": "The NGINX web server must produce log records containing sufficient\n  information to establish what type of events occurred.",
      "desc": "Web server logging capability is critical for accurate forensic\n  analysis. Without sufficient and accurate information, a correct replay of the\n  events cannot be determined.\n\n    Ascertaining the correct type of event that occurred is important during\n  forensic analysis. The correct determination of the event and when it occurred\n  is important in relation to other events that happened at that same time.\n\n    Without sufficient information establishing what type of log event\n  occurred, investigation into the cause of event is severely hindered. Log\n  record content that may be necessary to satisfy the requirement of this control\n  includes, but is not limited to, time stamps, source and destination IP\n  addresses, user/process identifiers, event descriptions, application-specific\n  events, success/fail indications, file names involved, access control, or flow\n  control rules invoked.",
      "descriptions": {
        "default": "Web server logging capability is critical for accurate forensic\n  analysis. Without sufficient and accurate information, a correct replay of the\n  events cannot be determined.\n\n    Ascertaining the correct type of event that occurred is important during\n  forensic analysis. The correct determination of the event and when it occurred\n  is important in relation to other events that happened at that same time.\n\n    Without sufficient information establishing what type of log event\n  occurred, investigation into the cause of event is severely hindered. Log\n  record content that may be necessary to satisfy the requirement of this control\n  includes, but is not limited to, time stamps, source and destination IP\n  addresses, user/process identifiers, event descriptions, application-specific\n  events, success/fail indications, file names involved, access control, or flow\n  control rules invoked.",
        "check": "Review the NGINX web server documentation and deployed configuration to determine\nif the NGINX web server contains sufficient information to establish what type of\nevent occurred.\n\nIf there are no websites configured for NGINX, this check is Not Applicable.\n\nCheck for the following:\n  # grep the 'log_format' directive in the http context of the nginx.conf.\n\nThe logs will not include sufficient information if the 'log_format' directive does not exist.\n\nIf the the 'log_format' directive does not exist, this is a finding.\n\nExample configuration:\nlog_format  main  '$remote_addr - $remote_user [$time_local] $request'\n'$status $body_bytes_sent $http_referer'\n'$http_user_agent $http_x_forwarded_for';",
        "fix": "Configure the 'log_format' directive in the nginx.conf file to look like the following:\n\nlog_format  main  '$remote_addr - $remote_user [$time_local] $request'\n'$status $body_bytes_sent $http_referer'\n'$http_user_agent $http_x_forwarded_for';\n\nNOTE: Your log format may be using different variables based on the determination of\nwhat information is sufficient in order to establish what type of events occured."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000095-WSR-000056",
        "gid": "V-41612",
        "rid": "SV-54189r3_rule",
        "stig_id": "SRG-APP-000095-WSR-000056",
        "fix_id": "F-47071r2_fix",
        "cci": [
          "CCI-000130"
        ],
        "nist": [
          "AU-3"
        ]
      },
      "code": "control 'V-41612' do\n  title \"The NGINX web server must produce log records containing sufficient\n  information to establish what type of events occurred.\"\n  desc \"Web server logging capability is critical for accurate forensic\n  analysis. Without sufficient and accurate information, a correct replay of the\n  events cannot be determined.\n\n    Ascertaining the correct type of event that occurred is important during\n  forensic analysis. The correct determination of the event and when it occurred\n  is important in relation to other events that happened at that same time.\n\n    Without sufficient information establishing what type of log event\n  occurred, investigation into the cause of event is severely hindered. Log\n  record content that may be necessary to satisfy the requirement of this control\n  includes, but is not limited to, time stamps, source and destination IP\n  addresses, user/process identifiers, event descriptions, application-specific\n  events, success/fail indications, file names involved, access control, or flow\n  control rules invoked.\n  \"\n\n  desc 'check', \"\n  Review the NGINX web server documentation and deployed configuration to determine\n  if the NGINX web server contains sufficient information to establish what type of\n  event occurred.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n  Check for the following:\n    # grep the 'log_format' directive in the http context of the nginx.conf.\n\n  The logs will not include sufficient information if the 'log_format' directive does not exist.\n\n  If the the 'log_format' directive does not exist, this is a finding.\n\n  Example configuration:\n  log_format  main  '$remote_addr - $remote_user [$time_local] \"'$request'\"'\n  '$status $body_bytes_sent \"'$http_referer'\"'\n  '\"'$http_user_agent'' ''$http_x_forwarded_for'\"';\n  \"\n  desc 'fix', \"\n  Configure the 'log_format' directive in the nginx.conf file to look like the following:\n\n  log_format  main  '$remote_addr - $remote_user [$time_local] \"'$request'\"'\n  '$status $body_bytes_sent \"'$http_referer'\"'\n  '\"'$http_user_agent'' ''$http_x_forwarded_for'\"';\n\n  NOTE: Your log format may be using different variables based on the determination of\n  what information is sufficient in order to establish what type of events occured.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000095-WSR-000056'\n  tag \"gid\": 'V-41612'\n  tag \"rid\": 'SV-54189r3_rule'\n  tag \"stig_id\": 'SRG-APP-000095-WSR-000056'\n  tag \"fix_id\": 'F-47071r2_fix'\n  tag \"cci\": ['CCI-000130']\n  tag \"nist\": %w(AU-3)\n\n  # Verify that the log_format directive exists\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      describe 'Each http context' do\n        it 'should include a log_format directive for logging sufficient information.' do\n          expect(http).to(include 'log_format')\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41612.rb",
        "line": 1
      },
      "id": "V-41612"
    },
    {
      "title": "The NGINX web server must be tuned to handle the operational requirements of\nthe hosted application.",
      "desc": "A Denial of Service (DoS) can occur when the web server is so\noverwhelmed that it can no longer respond to additional requests. A web server\nnot properly tuned may become overwhelmed and cause a DoS condition even with\nexpected traffic from users. To avoid a DoS, the web server must be tuned to\nhandle the expected traffic for the hosted applications.",
      "descriptions": {
        "default": "A Denial of Service (DoS) can occur when the web server is so\noverwhelmed that it can no longer respond to additional requests. A web server\nnot properly tuned may become overwhelmed and cause a DoS condition even with\nexpected traffic from users. To avoid a DoS, the web server must be tuned to\nhandle the expected traffic for the hosted applications.",
        "check": "Review the NGINX web server documentation and deployed configuration\n  to determine what parameters are set to tune the web server.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  To view the timeout values enter the following commands:\n    # grep ''client_body_timeout'' on the nginx.conf file and any separate included\n    configuration files\n    # grep ''client_header_timeout'' on the nginx.conf file and any separate included\n    configuration files\n\n  If the values of each are not set to 10 seconds (10s) or less, this is a finding.'",
        "fix": "Configure the NGINX web server to include the 'client_body_timeout' and\n  'client_header_timeout' directives in the NGINX configuration file(s).\n  Set the value of 'client_body_timeout' and 'client_header_timeout to be\n  10 seconds or less to mitigate the effects of several types of denial of\n  service attacks:\n\n  client_body_timeout   10s;\n  client_header_timeout 10s;"
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000435-WSR-000148",
        "gid": "V-55997",
        "rid": "SV-70251r2_rule",
        "stig_id": "SRG-APP-000435-WSR-000148",
        "fix_id": "F-60875r2_fix",
        "cci": [
          "CCI-002385"
        ],
        "nist": [
          "SC-5"
        ]
      },
      "code": "control 'V-55997' do\n  title \"The NGINX web server must be tuned to handle the operational requirements of\nthe hosted application.\"\n  desc  \"A Denial of Service (DoS) can occur when the web server is so\noverwhelmed that it can no longer respond to additional requests. A web server\nnot properly tuned may become overwhelmed and cause a DoS condition even with\nexpected traffic from users. To avoid a DoS, the web server must be tuned to\nhandle the expected traffic for the hosted applications.\"\n\n  desc  'check', \"Review the NGINX web server documentation and deployed configuration\n  to determine what parameters are set to tune the web server.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  To view the timeout values enter the following commands:\n    # grep ''client_body_timeout'' on the nginx.conf file and any separate included\n    configuration files\n    # grep ''client_header_timeout'' on the nginx.conf file and any separate included\n    configuration files\n\n  If the values of each are not set to 10 seconds (10s) or less, this is a finding.'\n  \"\n  desc 'fix', \"Configure the NGINX web server to include the 'client_body_timeout' and\n  'client_header_timeout' directives in the NGINX configuration file(s).\n  Set the value of 'client_body_timeout' and 'client_header_timeout to be\n  10 seconds or less to mitigate the effects of several types of denial of\n  service attacks:\n\n  client_body_timeout   10s;\n  client_header_timeout 10s;\n  \"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000435-WSR-000148'\n  tag \"gid\": 'V-55997'\n  tag \"rid\": 'SV-70251r2_rule'\n  tag \"stig_id\": 'SRG-APP-000435-WSR-000148'\n  tag \"fix_id\": 'F-60875r2_fix'\n  tag \"cci\": ['CCI-002385']\n  tag \"nist\": %w(SC-5)\n\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      describe 'The http context client_header_timeout value' do\n        it 'should exist and should be set to 10 (seconds) or less.' do\n          expect(http).to(include 'client_header_timeout')\n          expect(http['client_header_timeout'].join.to_i).to(be <= 10)\n        end\n      end\n      describe 'The http context client_body_timeout value' do\n        it 'should exist and should be set to 10 (seconds) or less.' do\n          expect(http).to(include 'client_body_timeout')\n          expect(http['client_body_timeout'].join.to_i).to(be <= 10)\n        end\n      end\n    end\n  end\n\n  if nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.each do |server|\n      describe 'The server context client_header_timeout value' do\n        it 'should be set to 10 (seconds) or less, if found.' do\n          unless server.params['client_header_timeout'].nil?\n            expect(server.params['client_header_timeout'].join.to_i).to(be <= 10)\n          end\n        end\n      end\n      describe 'The server context client_body_timeout value' do\n        it 'should be set to 10 (seconds) or less, if found' do\n          unless server.params['client_body_timeout'].nil?\n            expect(server.params['client_body_timeout'].join.to_i).to(be <= 10)\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55997.rb",
        "line": 1
      },
      "id": "V-55997"
    },
    {
      "title": "Cookies exchanged between the web server and the client, such as\nsession cookies, must have cookie properties set to prohibit client-side\nscripts from reading the cookie data.",
      "desc": "A cookie can be read by client-side scripts easily if cookie\nproperties are not set properly. By allowing cookies to be read by the\nclient-side scripts, information such as session identifiers could be\ncompromised and used by an attacker who intercepts the cookie. Setting cookie\nproperties (i.e. HttpOnly property) to disallow client-side scripts from\nreading cookies better protects the information inside the cookie.",
      "descriptions": {
        "default": "A cookie can be read by client-side scripts easily if cookie\nproperties are not set properly. By allowing cookies to be read by the\nclient-side scripts, information such as session identifiers could be\ncompromised and used by an attacker who intercepts the cookie. Setting cookie\nproperties (i.e. HttpOnly property) to disallow client-side scripts from\nreading cookies better protects the information inside the cookie.",
        "check": "Review the NGINX web server documentation and deployed\n  configuration to determine how to disable client-side scripts from reading\n  cookies.\n\n  If it is determined that the web server is not required to perform session\n  management, this check is Not Applicable.\n\n  If NGINX is not configured to serve files or if the required directive(s)\n  cannot be found in the NGINX configuration files, this check is Not Applicable.\n\n  Check for the following:\n    # grep the 'proxy_cookie_path' directive in the location context of the\n    nginx.conf and any separated include configuration file.\n\n  If the 'proxy_cookie_path' directive exists and is not set to the 'HTTPOnly'\n  property, this is a finding.",
        "fix": "If the 'proxy_cookie_path' directive exists in the NGINX configuration file(s),\nconfigure it to include the 'HTTPOnly' property.\n\nExample:\nproxy_cookie_path / '/; HTTPOnly; Secure'"
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000439-WSR-000154",
        "gid": "V-56007",
        "rid": "SV-70261r2_rule",
        "stig_id": "SRG-APP-000439-WSR-000154",
        "fix_id": "F-60885r1_fix",
        "cci": [
          "CCI-002418"
        ],
        "nist": [
          "SC-8"
        ]
      },
      "code": "control 'V-56007' do\n  title \"Cookies exchanged between the web server and the client, such as\nsession cookies, must have cookie properties set to prohibit client-side\nscripts from reading the cookie data.\"\n  desc  \"A cookie can be read by client-side scripts easily if cookie\nproperties are not set properly. By allowing cookies to be read by the\nclient-side scripts, information such as session identifiers could be\ncompromised and used by an attacker who intercepts the cookie. Setting cookie\nproperties (i.e. HttpOnly property) to disallow client-side scripts from\nreading cookies better protects the information inside the cookie.\"\n\n  desc  'check', \"Review the NGINX web server documentation and deployed\n  configuration to determine how to disable client-side scripts from reading\n  cookies.\n\n  If it is determined that the web server is not required to perform session\n  management, this check is Not Applicable.\n\n  If NGINX is not configured to serve files or if the required directive(s)\n  cannot be found in the NGINX configuration files, this check is Not Applicable.\n\n  Check for the following:\n    # grep the 'proxy_cookie_path' directive in the location context of the\n    nginx.conf and any separated include configuration file.\n\n  If the 'proxy_cookie_path' directive exists and is not set to the 'HTTPOnly'\n  property, this is a finding.\n  \"\n  desc 'fix', \"\n  If the 'proxy_cookie_path' directive exists in the NGINX configuration file(s),\n  configure it to include the 'HTTPOnly' property.\n\n  Example:\n  proxy_cookie_path / '/; HTTPOnly; Secure'\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000439-WSR-000154'\n  tag \"gid\": 'V-56007'\n  tag \"rid\": 'SV-70261r2_rule'\n  tag \"stig_id\": 'SRG-APP-000439-WSR-000154'\n  tag \"fix_id\": 'F-60885r1_fix'\n  tag \"cci\": ['CCI-002418']\n  tag \"nist\": %w(SC-8)\n\n  if input('performs_session_management') == false\n    impact 0.0\n    describe 'This check is NA because session management is not required.' do\n      skip 'This check is NA because session management is not required.'\n    end\n  elsif nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.locations.each do |location|\n      if location.params['proxy_cookie_path'].nil?\n        impact 0.0\n        describe 'This check is NA because the proxy_cookie_path directive is not configured.' do\n          skip 'This check is NA because the proxy_cookie_path directive is not configured.'\n        end\n      else\n        describe \"The 'proxy_cookie_path'\" do\n          it 'should be configured to HTTPOnly and Secure' do\n            expect(location.params['proxy_cookie_path'].join).to(include '/; HTTPOnly; Secure')\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-56007.rb",
        "line": 1
      },
      "id": "V-56007"
    },
    {
      "title": "NGINX web server session IDs must be sent to the client using SSL/TLS.",
      "desc": "The HTTP protocol is a stateless protocol. To maintain a session, a\nsession identifier is used. The session identifier is a piece of data that is\nused to identify a session and a user. If the session identifier is compromised\nby an attacker, the session can be hijacked. By encrypting the session\nidentifier, the identifier becomes more difficult for an attacker to hijack,\ndecrypt, and use before the session has expired.",
      "descriptions": {
        "default": "The HTTP protocol is a stateless protocol. To maintain a session, a\nsession identifier is used. The session identifier is a piece of data that is\nused to identify a session and a user. If the session identifier is compromised\nby an attacker, the session can be hijacked. By encrypting the session\nidentifier, the identifier becomes more difficult for an attacker to hijack,\ndecrypt, and use before the session has expired.",
        "check": "Review the NGINX web server documentation and deployed\n  configuration to determine whether the session identifier is being sent to\n  he client encrypted.\n\n  If it is determined that the web server is not required to perform session\n  management, this check is Not Applicable.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check if SSL is enabled on the server:\n    #grep the 'listen' directive in the server context of the nginx.conf and\n    any separated include configuration file.\n\n  If the 'listen' directive is not configured to use ssl, this is a finding.\n\n  Check for if 'ssl_protocols' is configured:\n    #grep the 'ssl_protocols' directive in the server context of the nginx.conf\n    and any separated include configuration file.\n\n  If the 'ssl_protocols' directive is not set to the approved TLS version, this is a finding.\n\n  If the 'listen' and 'ssl_protocols' directives cannot be found in NGINX configuration files,\n  this check is Not Applicable.",
        "fix": "Configure the 'listen' directive to the NGINX configuration\n  file(s) to enable the use of SSL to ensure the session IDs are encrypted.\n\n  Add the 'ssl_protocols' directive to the NGINX configuration file(s) and\n  configure it to use the approved TLS protocols to ensure the session IDs\n  are encrypted.\n\n  Example:\n    server {\n            listen 443 ssl;\n            ssl_protocols TLSv1.2;\n    }"
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000439-WSR-000152",
        "gid": "V-56003",
        "rid": "SV-70257r2_rule",
        "stig_id": "SRG-APP-000439-WSR-000152",
        "fix_id": "F-60881r1_fix",
        "cci": [
          "CCI-002418"
        ],
        "nist": [
          "SC-8"
        ]
      },
      "code": "control 'V-56003' do\n  title 'NGINX web server session IDs must be sent to the client using SSL/TLS.'\n  desc  \"The HTTP protocol is a stateless protocol. To maintain a session, a\nsession identifier is used. The session identifier is a piece of data that is\nused to identify a session and a user. If the session identifier is compromised\nby an attacker, the session can be hijacked. By encrypting the session\nidentifier, the identifier becomes more difficult for an attacker to hijack,\ndecrypt, and use before the session has expired.\"\n\n  desc  'check', \"Review the NGINX web server documentation and deployed\n  configuration to determine whether the session identifier is being sent to\n  he client encrypted.\n\n  If it is determined that the web server is not required to perform session\n  management, this check is Not Applicable.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check if SSL is enabled on the server:\n    #grep the 'listen' directive in the server context of the nginx.conf and\n    any separated include configuration file.\n\n  If the 'listen' directive is not configured to use ssl, this is a finding.\n\n  Check for if 'ssl_protocols' is configured:\n    #grep the 'ssl_protocols' directive in the server context of the nginx.conf\n    and any separated include configuration file.\n\n  If the 'ssl_protocols' directive is not set to the approved TLS version, this is a finding.\n\n  If the 'listen' and 'ssl_protocols' directives cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n  \"\n  desc 'fix', \"Configure the 'listen' directive to the NGINX configuration\n  file(s) to enable the use of SSL to ensure the session IDs are encrypted.\n\n  Add the 'ssl_protocols' directive to the NGINX configuration file(s) and\n  configure it to use the approved TLS protocols to ensure the session IDs\n  are encrypted.\n\n  Example:\n    server {\n            listen 443 ssl;\n            ssl_protocols TLSv1.2;\n    }\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000439-WSR-000152'\n  tag \"gid\": 'V-56003'\n  tag \"rid\": 'SV-70257r2_rule'\n  tag \"stig_id\": 'SRG-APP-000439-WSR-000152'\n  tag \"fix_id\": 'F-60881r1_fix'\n  tag \"cci\": ['CCI-002418']\n  tag \"nist\": %w(SC-8)\n\n  if input('performs_session_management') == false\n    impact 0.0\n    describe 'This check is NA because session management is not required.' do\n      skip 'This check is NA because session management is not required.'\n    end\n  elsif nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.each do |server|\n      describe 'The listen directive' do\n        if server.params['listen'].nil?\n          impact 0.0\n          describe 'This test is NA because the listen directive has not been configured.' do\n            skip 'This test is NA because the listen directive has not been configured.'\n          end\n        else\n          it 'should be configured with SSL enabled.' do\n            expect(server.params['listen'].to_s).to(include 'ssl')\n          end\n        end\n      end\n      if server.params['ssl_protocols'].nil?\n        impact 0.0\n        describe 'This test is NA because the ssl_protocols directive has not been configured.' do\n          skip 'This test is NA because the ssl_protocols directive has not been configured.'\n        end\n      else\n        server.params['ssl_protocols'].each do |protocol|\n          describe 'Each protocol' do\n            it 'should be included in the list of protocols approved to encrypt data' do\n              expect(protocol).to(be_in(input('approved_ssl_protocols')))\n            end\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-56003.rb",
        "line": 1
      },
      "id": "V-56003"
    },
    {
      "title": "Only authenticated system administrators or the designated PKI Sponsor\n  for the NGINX web server must have access to the web servers private key.",
      "desc": "The web server's private key is used to prove the identity of the\n  server to clients and securely exchange the shared secret key used to encrypt\n  communications between the web server and clients.\n\n    By gaining access to the private key, an attacker can pretend to be an\n  authorized server and decrypt the SSL traffic between a client and the web\n  server.",
      "descriptions": {
        "default": "The web server's private key is used to prove the identity of the\n  server to clients and securely exchange the shared secret key used to encrypt\n  communications between the web server and clients.\n\n    By gaining access to the private key, an attacker can pretend to be an\n  authorized server and decrypt the SSL traffic between a client and the web\n  server.",
        "check": "If the NGINX web server does not have a private key, this\n  check is Not Applicable.\n\n  Review the web server documentation and deployed configuration to determine\n  whether only authenticated system administrators and the designated PKI Sponsor\n  for the web server can access the web server private key.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n    # grep the 'ssl_certificate' and 'ssl_certificate_key' directives in the server\n    context of the nginx.conf and any separated include configuration file.\n\n    #   ls -l on these files to determine ownership of the file\n\n     -The SA or Designated PKI Sponsor should be the owner of the web server private key\n     - Permissions on these files should be 400\n\n  If the private key is accessible by unauthenticated or unauthorized users, this is a finding.",
        "fix": "Configure the NGINX web server to ensure only authenticated and authorized\n  users can access the web server's private key.\n\n  Run the following commands:\n\n    # cd <'private key path'>/\n    # chown <'authorized user'>:<'authorized group'> <'private key file'>\n    # chmod 400  <'private key file'>"
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000176-WSR-000096",
        "gid": "V-41731",
        "rid": "SV-54308r3_rule",
        "stig_id": "SRG-APP-000176-WSR-000096",
        "fix_id": "F-47190r2_fix",
        "cci": [
          "CCI-000186"
        ],
        "nist": [
          "IA-5 (2) (b)",
          ""
        ]
      },
      "code": "control 'V-41731' do\n  title \"Only authenticated system administrators or the designated PKI Sponsor\n  for the NGINX web server must have access to the web servers private key.\"\n  desc \"The web server's private key is used to prove the identity of the\n  server to clients and securely exchange the shared secret key used to encrypt\n  communications between the web server and clients.\n\n    By gaining access to the private key, an attacker can pretend to be an\n  authorized server and decrypt the SSL traffic between a client and the web\n  server.\n  \"\n\n  desc  'check', \"If the NGINX web server does not have a private key, this\n  check is Not Applicable.\n\n  Review the web server documentation and deployed configuration to determine\n  whether only authenticated system administrators and the designated PKI Sponsor\n  for the web server can access the web server private key.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n    # grep the 'ssl_certificate' and 'ssl_certificate_key' directives in the server\n    context of the nginx.conf and any separated include configuration file.\n\n    #   ls -l on these files to determine ownership of the file\n\n     -The SA or Designated PKI Sponsor should be the owner of the web server private key\n     - Permissions on these files should be 400\n\n  If the private key is accessible by unauthenticated or unauthorized users, this is a finding.\n  \"\n  desc  'fix', \"Configure the NGINX web server to ensure only authenticated and authorized\n  users can access the web server's private key.\n\n  Run the following commands:\n\n    # cd <'private key path'>/\n    # chown <'authorized user'>:<'authorized group'> <'private key file'>\n    # chmod 400  <'private key file'>\n  \"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000176-WSR-000096'\n  tag \"gid\": 'V-41731'\n  tag \"rid\": 'SV-54308r3_rule'\n  tag \"stig_id\": 'SRG-APP-000176-WSR-000096'\n  tag \"fix_id\": 'F-47190r2_fix'\n  tag \"cci\": ['CCI-000186']\n  tag \"nist\": ['IA-5 (2) (b)', '']\n\n  if nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.each do |server|\n      if server.params['ssl_certificate'].nil?\n        impact 0.0\n        describe 'This test is NA because the ssl_certificate directive has not been configured.' do\n          skip 'This test is NA because the ssl_certificate directive has not been configured.'\n        end\n      else\n        server.params['ssl_certificate'].each do |certificate|\n          certificate_string = certificate.to_s\n          describe file(certificate.join) do\n            its('owner') { should be_in input('sys_admin') }\n            its('group') { should be_in input('sys_admin_group') }\n            its('mode') { should cmp '0400' }\n          end\n        end\n      end\n      if server.params['ssl_certificate_key'].nil?\n        impact 0.0\n        describe 'This test is NA because the ssl_certificate_key directive has not been configured.' do\n          skip 'This test is NA because the ssl_certificate_key directive has not been configured.'\n        end\n      else\n        server.params['ssl_certificate_key'].each do |certificate_key|\n          describe file(certificate_key.join) do\n            its('owner') { should be_in input('sys_admin') }\n            its('group') { should be_in input('sys_admin_group') }\n            its('mode') { should cmp '0400' }\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41731.rb",
        "line": 1
      },
      "id": "V-41731"
    },
    {
      "title": "The NGINX web server must use a logging mechanism that is configured to\nalert the ISSO and SA in the event of a processing failure.",
      "desc": "Reviewing log data allows an investigator to recreate the path of an\nattacker and to capture forensic data for later use. Log data is also essential\nto system administrators in their daily administrative duties on the hosted\nsystem or within the hosted applications.\n\n    If the logging system begins to fail, events will not be recorded.\nOrganizations shall define logging failure events, at which time the\napplication or the logging mechanism the application utilizes will provide a\nwarning to the ISSO and SA at a minimum.",
      "descriptions": {
        "default": "Reviewing log data allows an investigator to recreate the path of an\nattacker and to capture forensic data for later use. Log data is also essential\nto system administrators in their daily administrative duties on the hosted\nsystem or within the hosted applications.\n\n    If the logging system begins to fail, events will not be recorded.\nOrganizations shall define logging failure events, at which time the\napplication or the logging mechanism the application utilizes will provide a\nwarning to the ISSO and SA at a minimum.",
        "check": "Review the NGINX web server documentation and deployment\n  configuration settings to determine if the web server logging system provides an\n  alert to the ISSO and the SA at a minimum when a processing failure occurs.\n\n  Work with the SIEM administrator to determine if an alert is configured when audit\n  data is no longer received as expected.\n\n  If there is no alert configured, this is a finding.",
        "fix": "Work with the SIEM administrator to configure an alert when no audit\n  data is received from NGINX based on the defined schedule of connections"
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000108-WSR-000166",
        "gid": "V-55973",
        "rid": "SV-70227r2_rule",
        "stig_id": "SRG-APP-000108-WSR-000166",
        "fix_id": "F-60851r2_fix",
        "cci": [
          "CCI-000139"
        ],
        "nist": [
          "AU-5 a",
          ""
        ]
      },
      "code": "control 'V-55973' do\n  title \"The NGINX web server must use a logging mechanism that is configured to\nalert the ISSO and SA in the event of a processing failure.\"\n  desc  \"Reviewing log data allows an investigator to recreate the path of an\nattacker and to capture forensic data for later use. Log data is also essential\nto system administrators in their daily administrative duties on the hosted\nsystem or within the hosted applications.\n\n    If the logging system begins to fail, events will not be recorded.\nOrganizations shall define logging failure events, at which time the\napplication or the logging mechanism the application utilizes will provide a\nwarning to the ISSO and SA at a minimum.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and deployment\n  configuration settings to determine if the web server logging system provides an\n  alert to the ISSO and the SA at a minimum when a processing failure occurs.\n\n  Work with the SIEM administrator to determine if an alert is configured when audit\n  data is no longer received as expected.\n\n  If there is no alert configured, this is a finding.\n  \"\n  desc 'fix', \"Work with the SIEM administrator to configure an alert when no audit\n  data is received from NGINX based on the defined schedule of connections\n  \"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000108-WSR-000166'\n  tag \"gid\": 'V-55973'\n  tag \"rid\": 'SV-70227r2_rule'\n  tag \"stig_id\": 'SRG-APP-000108-WSR-000166'\n  tag \"fix_id\": 'F-60851r2_fix'\n  tag \"cci\": ['CCI-000139']\n  tag \"nist\": ['AU-5 a', '']\n\n  describe \"This test requires a Manual Review: Work with the SIEM administrator to determine\n  if an alert is configured when audit data is no longer received as expected.\" do\n    skip \"This test requires a Manual Review: Work with the SIEM administrator to determine\n    if an alert is configured when audit data is no longer received as expected.\"\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55973.rb",
        "line": 1
      },
      "id": "V-55973"
    },
    {
      "title": "The NGINX web server must provide a clustering capability.",
      "desc": "The web server may host applications that display information that\n  cannot be disrupted, such as information that is time-critical or\n  life-threatening. In these cases, a web server that shuts down or ceases to be\n  accessible when there is a failure is not acceptable. In these types of cases,\n  clustering of web servers is used.\n\n      Clustering of multiple web servers is a common approach to providing\n  fail-safe application availability. To assure application availability, the web\n  server must provide clustering or some form of failover functionality.",
      "descriptions": {
        "default": "The web server may host applications that display information that\n  cannot be disrupted, such as information that is time-critical or\n  life-threatening. In these cases, a web server that shuts down or ceases to be\n  accessible when there is a failure is not acceptable. In these types of cases,\n  clustering of web servers is used.\n\n      Clustering of multiple web servers is a common approach to providing\n  fail-safe application availability. To assure application availability, the web\n  server must provide clustering or some form of failover functionality.",
        "check": "Review the NGINX web server documentation, deployed configuration,\n  and risk analysis documentation to verify that the web server is configured to provide\n  clustering functionality, if the web server is a high-availability web server.\n\n  If the NGINX web server is not a high-availability web server, this finding is\n  Not Applicable.\n\n  If the web server is not configured to provide clustering or some form of failover\n  functionality and the web server is a high-availability server, this is a finding.",
        "fix": "Configure the web server to provide application failover, or participate\n  in a web cluster that provides failover for high-availability web servers."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000225-WSR-000141",
        "gid": "V-41812",
        "rid": "SV-54389r3_rule",
        "stig_id": "SRG-APP-000225-WSR-000141",
        "fix_id": "F-47271r2_fix",
        "cci": [
          "CCI-001190"
        ],
        "nist": [
          "SC-24"
        ]
      },
      "code": "control 'V-41812' do\n  title 'The NGINX web server must provide a clustering capability.'\n  desc  \"The web server may host applications that display information that\n  cannot be disrupted, such as information that is time-critical or\n  life-threatening. In these cases, a web server that shuts down or ceases to be\n  accessible when there is a failure is not acceptable. In these types of cases,\n  clustering of web servers is used.\n\n      Clustering of multiple web servers is a common approach to providing\n  fail-safe application availability. To assure application availability, the web\n  server must provide clustering or some form of failover functionality.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation, deployed configuration,\n  and risk analysis documentation to verify that the web server is configured to provide\n  clustering functionality, if the web server is a high-availability web server.\n\n  If the NGINX web server is not a high-availability web server, this finding is\n  Not Applicable.\n\n  If the web server is not configured to provide clustering or some form of failover\n  functionality and the web server is a high-availability server, this is a finding.\n  \"\n  desc 'fix', \"Configure the web server to provide application failover, or participate\n  in a web cluster that provides failover for high-availability web servers.\n  \"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000225-WSR-000141'\n  tag \"gid\": 'V-41812'\n  tag \"rid\": 'SV-54389r3_rule'\n  tag \"stig_id\": 'SRG-APP-000225-WSR-000141'\n  tag \"fix_id\": 'F-47271r2_fix'\n  tag \"cci\": ['CCI-001190']\n  tag \"nist\": %w(SC-24)\n\n  if input('high_availability') == false\n    impact 0.0\n    describe 'This check is NA because NGINX is not a high-availability web server.' do\n      skip 'This check is NA because NGINX is not a high-availability web server.'\n    end\n  elsif input('is_cluster_master') == false\n    describe nginx do\n      its('modules') { should_not include 'ngx_stream_zone_sync_module' }\n    end\n  else\n    describe nginx do\n      its('modules') { should include 'ngx_stream_zone_sync_module' }\n    end\n    describe package('nginx-sync') do\n      it { should be_installed }\n    end\n    describe parse_config_file('/etc/nginx-sync.conf') do\n      its('NODES') { should_not be nil }\n      its('CONFPATHS') { should_not be nil }\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41812.rb",
        "line": 1
      },
      "id": "V-41812"
    },
    {
      "title": "NGINX web server accounts accessing the directory tree, the shell, or other\noperating system functions and utilities must only be administrative accounts.",
      "desc": "As a rule, accounts on a web server are to be kept to a minimum. Only\nadministrators, web managers, developers, auditors, and web authors require\naccounts on the machine hosting the web server. The resources to which these\naccounts have access must also be closely monitored and controlled. Only the\nsystem administrator needs access to all the system's capabilities, while the\nweb administrator and associated staff require access and control of the web\ncontent and web server configuration files.",
      "descriptions": {
        "default": "As a rule, accounts on a web server are to be kept to a minimum. Only\nadministrators, web managers, developers, auditors, and web authors require\naccounts on the machine hosting the web server. The resources to which these\naccounts have access must also be closely monitored and controlled. Only the\nsystem administrator needs access to all the system's capabilities, while the\nweb administrator and associated staff require access and control of the web\ncontent and web server configuration files.",
        "check": "Review the NGINX web server documentation and configuration to\n  determine what web server accounts are available on the hosting server.\n\n  Obtain a list of the user accounts for the system, noting the priviledges for\n  each account.\n\n  Verify with the system administrator or the ISSO that all privileged accounts are\n  mission essential and documented.\n\n  Verify with the system administrator or the ISSO that all non-administrator access\n  to shell scripts and operating system functions are mission essential and documented.\n\n  If there are no valid login shells, this check is Not Applicable.\n\n  If undocumented privileged accounts are found, this is a finding.\n\n  If undocumented access to shell scripts or operating system functions is found,\n  this is a finding.",
        "fix": "Ensure non-administrators are not allowed access to thedirectory tree,\n  the shell, or other operating system functions and utilities."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000211-WSR-000030",
        "gid": "V-55995",
        "rid": "SV-70249r2_rule",
        "stig_id": "SRG-APP-000211-WSR-000030",
        "fix_id": "F-60873r1_fix",
        "cci": [
          "CCI-001082"
        ],
        "nist": [
          "SC-2"
        ]
      },
      "code": "control 'V-55995' do\n  title \"NGINX web server accounts accessing the directory tree, the shell, or other\noperating system functions and utilities must only be administrative accounts.\"\n  desc  \"As a rule, accounts on a web server are to be kept to a minimum. Only\nadministrators, web managers, developers, auditors, and web authors require\naccounts on the machine hosting the web server. The resources to which these\naccounts have access must also be closely monitored and controlled. Only the\nsystem administrator needs access to all the system's capabilities, while the\nweb administrator and associated staff require access and control of the web\ncontent and web server configuration files.\"\n\n  desc  'check', \"Review the NGINX web server documentation and configuration to\n  determine what web server accounts are available on the hosting server.\n\n  Obtain a list of the user accounts for the system, noting the priviledges for\n  each account.\n\n  Verify with the system administrator or the ISSO that all privileged accounts are\n  mission essential and documented.\n\n  Verify with the system administrator or the ISSO that all non-administrator access\n  to shell scripts and operating system functions are mission essential and documented.\n\n  If there are no valid login shells, this check is Not Applicable.\n\n  If undocumented privileged accounts are found, this is a finding.\n\n  If undocumented access to shell scripts or operating system functions is found,\n  this is a finding.\n  \"\n  desc 'fix', \"Ensure non-administrators are not allowed access to thedirectory tree,\n  the shell, or other operating system functions and utilities.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000211-WSR-000030'\n  tag \"gid\": 'V-55995'\n  tag \"rid\": 'SV-70249r2_rule'\n  tag \"stig_id\": 'SRG-APP-000211-WSR-000030'\n  tag \"fix_id\": 'F-60873r1_fix'\n  tag \"cci\": ['CCI-001082']\n  tag \"nist\": %w(SC-2)\n\n  valid_login_shells = command(\"grep '^[^#]' /etc/shells\").stdout.split(\"\\n\")\n\n  if valid_login_shells.empty?\n    impact 0.0\n    describe 'This check is NA because the there are no valid login shells.' do\n      skip 'This check is NA because the there are no valid login shells.'\n    end\n  else\n    valid_login_shells.each do |shell|\n      describe 'Unauthorized users' do\n        it 'should not have shell access.' do\n          expect(users.shells(/#{shell}/).usernames).to(be_in(input('sys_admin').clone << input('nginx_owner')))\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55995.rb",
        "line": 1
      },
      "id": "V-55995"
    },
    {
      "title": "The NGINX web server must implement required cryptographic protections using\n  cryptographic modules complying with applicable federal laws, Executive Orders,\n  directives, policies, regulations, standards, and guidance when encrypting data\n  that must be compartmentalized.",
      "desc": "Cryptography is only as strong as the encryption modules/algorithms\n  employed to encrypt the data.\n\n    Use of weak or untested encryption algorithms undermines the purposes of\n  utilizing encryption to protect data.\n\n    NSA has developed Type 1 algorithms for protecting classified information.\n  The Committee on National Security Systems (CNSS) National Information\n  Assurance Glossary (CNSS Instruction No. 4009) defines Type 1 products as:\n\n    \"Cryptographic equipment, assembly or component classified or certified by\n  NSA for encrypting and decrypting classified and sensitive national security\n  information when appropriately keyed. Developed using established NSA business\n  processes and containing NSA-approved algorithms are used to protect systems\n  requiring the most stringent protection mechanisms.\"\n\n    Although persons may have a security clearance, they may not have a\n  \"need-to-know\" and are required to be separated from the information in\n  question. The web server must employ NSA-approved cryptography to protect\n  classified information from those individuals who have no \"need-to-know\" or\n  when encryption of compartmentalized data is required by data classification.",
      "descriptions": {
        "default": "Cryptography is only as strong as the encryption modules/algorithms\n  employed to encrypt the data.\n\n    Use of weak or untested encryption algorithms undermines the purposes of\n  utilizing encryption to protect data.\n\n    NSA has developed Type 1 algorithms for protecting classified information.\n  The Committee on National Security Systems (CNSS) National Information\n  Assurance Glossary (CNSS Instruction No. 4009) defines Type 1 products as:\n\n    \"Cryptographic equipment, assembly or component classified or certified by\n  NSA for encrypting and decrypting classified and sensitive national security\n  information when appropriately keyed. Developed using established NSA business\n  processes and containing NSA-approved algorithms are used to protect systems\n  requiring the most stringent protection mechanisms.\"\n\n    Although persons may have a security clearance, they may not have a\n  \"need-to-know\" and are required to be separated from the information in\n  question. The web server must employ NSA-approved cryptography to protect\n  classified information from those individuals who have no \"need-to-know\" or\n  when encryption of compartmentalized data is required by data classification.",
        "check": "Review policy documents to identify data that is compartmentalized\n  (i.e.classified, sensitive, need-to-know, etc.) and requires cryptographic\n  protection.\n\n  Review the NGINX web server documentation and deployed configuration to\n  identify the encryption modules utilized to protect the compartmentalized\n  data.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the followng:\n    # grep the 'ssl_prefer_server_cipher' directive in each server context of\n    the nginx.conf and any separated include configuration file.\n\n  Verify that the 'ssl_prefer_server_cipher' is set to 'on'.\n  If the directive is not set to 'on', this is a finding.\n\n    # grep the 'ssl_ciphers' directive in each server context of the nginx.conf\n    and any separated include configuration file.\n\n  If the 'ssl_ciphers' directive is configured to include any ciphers that are\n  not compliant with the data, this is a finding.\n\n  If the 'ssl_prefer_server_cipher' and 'ssl_ciphers' directives cannot be found in\n  NGINX configuration files, this check is Not Applicable.",
        "fix": "Include the 'ssl_prefer_server_cipher' directive in all server\n  context of the NGINX configuration file(s) and set the directive to 'on'.\n  The 'ssl_ciphers' directive should include the required ciphers to protect the\n  compartmentalized data."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000416-WSR-000118",
        "gid": "V-56017",
        "rid": "SV-70271r2_rule",
        "stig_id": "SRG-APP-000416-WSR-000118",
        "fix_id": "F-60895r1_fix",
        "cci": [
          "CCI-002450"
        ],
        "nist": [
          "SC-13"
        ]
      },
      "code": "control 'V-56017' do\n  title \"The NGINX web server must implement required cryptographic protections using\n  cryptographic modules complying with applicable federal laws, Executive Orders,\n  directives, policies, regulations, standards, and guidance when encrypting data\n  that must be compartmentalized.\"\n  desc \"Cryptography is only as strong as the encryption modules/algorithms\n  employed to encrypt the data.\n\n    Use of weak or untested encryption algorithms undermines the purposes of\n  utilizing encryption to protect data.\n\n    NSA has developed Type 1 algorithms for protecting classified information.\n  The Committee on National Security Systems (CNSS) National Information\n  Assurance Glossary (CNSS Instruction No. 4009) defines Type 1 products as:\n\n    \\\"Cryptographic equipment, assembly or component classified or certified by\n  NSA for encrypting and decrypting classified and sensitive national security\n  information when appropriately keyed. Developed using established NSA business\n  processes and containing NSA-approved algorithms are used to protect systems\n  requiring the most stringent protection mechanisms.\\\"\n\n    Although persons may have a security clearance, they may not have a\n  \\\"need-to-know\\\" and are required to be separated from the information in\n  question. The web server must employ NSA-approved cryptography to protect\n  classified information from those individuals who have no \\\"need-to-know\\\" or\n  when encryption of compartmentalized data is required by data classification.\n  \"\n\n  desc 'check', \"Review policy documents to identify data that is compartmentalized\n  (i.e.classified, sensitive, need-to-know, etc.) and requires cryptographic\n  protection.\n\n  Review the NGINX web server documentation and deployed configuration to\n  identify the encryption modules utilized to protect the compartmentalized\n  data.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the followng:\n    # grep the 'ssl_prefer_server_cipher' directive in each server context of\n    the nginx.conf and any separated include configuration file.\n\n  Verify that the 'ssl_prefer_server_cipher' is set to 'on'.\n  If the directive is not set to 'on', this is a finding.\n\n    # grep the 'ssl_ciphers' directive in each server context of the nginx.conf\n    and any separated include configuration file.\n\n  If the 'ssl_ciphers' directive is configured to include any ciphers that are\n  not compliant with the data, this is a finding.\n\n  If the 'ssl_prefer_server_cipher' and 'ssl_ciphers' directives cannot be found in\n  NGINX configuration files, this check is Not Applicable.\n  \"\n  desc 'fix', \"Include the 'ssl_prefer_server_cipher' directive in all server\n  context of the NGINX configuration file(s) and set the directive to 'on'.\n  The 'ssl_ciphers' directive should include the required ciphers to protect the\n  compartmentalized data.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000416-WSR-000118'\n  tag \"gid\": 'V-56017'\n  tag \"rid\": 'SV-70271r2_rule'\n  tag \"stig_id\": 'SRG-APP-000416-WSR-000118'\n  tag \"fix_id\": 'F-60895r1_fix'\n  tag \"cci\": ['CCI-002450']\n  tag \"nist\": %w(SC-13)\n\n  if nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.each do |server|\n      if server.params['ssl_prefer_server_ciphers'].nil?\n        impact 0.0\n        describe 'This test is NA because the ssl_prefer_server_ciphers directive has not been configured.' do\n          skip 'This test is NA because the ssl_prefer_server_ciphers directive has not been configured.'\n        end\n      else\n        server.params['ssl_prefer_server_ciphers'].each do |prefer_ciphers|\n          describe 'The ssl_prefer_server_cipher' do\n            it 'should be set to on.' do\n              expect(prefer_ciphers).to(cmp('on'))\n            end\n          end\n        end\n      end\n      if server.params['ssl_ciphers'].nil?\n        impact 0.0\n        describe 'This test is NA because the ssl_ciphers directive has not been configured.' do\n          skip 'This test is NA because the ssl_ciphers directive has not been configured.'\n        end\n      else\n        ciphers_found = []\n        server.params['ssl_ciphers'].each do |ciphers|\n          ciphers[0].to_s.split(\"\\:\").each do |cipher|\n            ciphers_found << cipher\n          end\n        end\n        ciphers_found.uniq!\n        ciphers_found.each do |cipher|\n          describe 'Each cipher' do\n            it 'found in configuration should be included in the list of ciphers approved to encrypt data' do\n              expect(cipher).to(be_in(input('approved_ssl_ciphers')))\n            end\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-56017.rb",
        "line": 1
      },
      "id": "V-56017"
    },
    {
      "title": "The NGINX web server must display a default hosted application web page, not\n  a directory listing, when a requested web page cannot be found.",
      "desc": "The goal is to completely control the web user's experience in\n  navigating any portion of the web document root directories. Ensuring all web\n  content directories have at least the equivalent of an index.html file is a\n  significant factor to accomplish this end.\n\n    Enumeration techniques, such as URL parameter manipulation, rely upon being\n  able to obtain information about the web server's directory structure by\n  locating directories without default pages. In the scenario, the web server\n  will display to the user a listing of the files in the directory being\n  accessed. By having a default hosted application web page, the anonymous web\n  user will not obtain directory browsing information or an error message that\n  reveals the server type and version.",
      "descriptions": {
        "default": "The goal is to completely control the web user's experience in\n  navigating any portion of the web document root directories. Ensuring all web\n  content directories have at least the equivalent of an index.html file is a\n  significant factor to accomplish this end.\n\n    Enumeration techniques, such as URL parameter manipulation, rely upon being\n  able to obtain information about the web server's directory structure by\n  locating directories without default pages. In the scenario, the web server\n  will display to the user a listing of the files in the directory being\n  accessed. By having a default hosted application web page, the anonymous web\n  user will not obtain directory browsing information or an error message that\n  reveals the server type and version.",
        "check": "Review the NGINX web server documentation and deployed configuration to locate\nall the web document directories.\n\nIf there are no websites configured or if NGINX is not configured to serve files,\nthis check is Not Applicable.\n\nCheck for the following:\n\n  # grep for 'root' directive in each http, server, and location context of the\n  nginx.conf and any separated include configuration file.\n\nIf the 'root' directive cannot be found in NGINX configuration files, this check\nis Not Applicable.\n\nVerify that each web document directory contains a default hosted application web\npage that can be used by the web server in the event a web page cannot be found:\n\n  # Execute the 'ls' command on each directory defined in the root directive and\n  check if index.html is present for each directory.\n\nIf a document directory does not contain a default web page (index.html),\nthis is a finding.",
        "fix": "Add index.html file to all NGINX web document directories."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000266-WSR-000142",
        "gid": "V-56035",
        "rid": "SV-70289r2_rule",
        "stig_id": "SRG-APP-000266-WSR-000142",
        "fix_id": "F-60913r1_fix",
        "cci": [
          "CCI-001312"
        ],
        "nist": [
          "SI-11 a",
          ""
        ]
      },
      "code": "control 'V-56035' do\n  title \"The NGINX web server must display a default hosted application web page, not\n  a directory listing, when a requested web page cannot be found.\"\n  desc \"The goal is to completely control the web user's experience in\n  navigating any portion of the web document root directories. Ensuring all web\n  content directories have at least the equivalent of an index.html file is a\n  significant factor to accomplish this end.\n\n    Enumeration techniques, such as URL parameter manipulation, rely upon being\n  able to obtain information about the web server's directory structure by\n  locating directories without default pages. In the scenario, the web server\n  will display to the user a listing of the files in the directory being\n  accessed. By having a default hosted application web page, the anonymous web\n  user will not obtain directory browsing information or an error message that\n  reveals the server type and version.\n  \"\n\n  desc 'check', \"\n  Review the NGINX web server documentation and deployed configuration to locate\n  all the web document directories.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  Check for the following:\n\n    # grep for 'root' directive in each http, server, and location context of the\n    nginx.conf and any separated include configuration file.\n\n  If the 'root' directive cannot be found in NGINX configuration files, this check\n  is Not Applicable.\n\n  Verify that each web document directory contains a default hosted application web\n  page that can be used by the web server in the event a web page cannot be found:\n\n    # Execute the 'ls' command on each directory defined in the root directive and\n    check if index.html is present for each directory.\n\n  If a document directory does not contain a default web page (index.html),\n  this is a finding.\n  \"\n  desc 'fix', 'Add index.html file to all NGINX web document directories.'\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000266-WSR-000142'\n  tag \"gid\": 'V-56035'\n  tag \"rid\": 'SV-70289r2_rule'\n  tag \"stig_id\": 'SRG-APP-000266-WSR-000142'\n  tag \"fix_id\": 'F-60913r1_fix'\n  tag \"cci\": ['CCI-001312']\n  tag \"nist\": ['SI-11 a', '']\n\n  webserver_roots = []\n\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.http.entries.each do |http|\n      webserver_roots.push(http.params['root']) unless http.params['root'].nil?\n    end\n  end\n\n  if nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.entries.each do |server|\n      webserver_roots.push(server.params['root']) unless server.params['root'].nil?\n    end\n  end\n\n  if nginx_conf.locations.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.locations.entries.each do |location|\n      webserver_roots.push(location.params['root']) unless location.params['root'].nil?\n    end\n  end\n\n  if webserver_roots.empty?\n    impact 0.0\n    describe 'This check is NA because no root directories have been set.' do\n      skip 'This test is NA because no root directories have been set.'\n    end\n  else\n    webserver_roots.flatten!.uniq!\n    webserver_roots.each do |root|\n      root_files = command(\"ls #{root}\").stdout.split(\"\\n\")\n      describe \"The root directory #{root}\" do\n        it 'should include the default index.html file.' do\n          expect(root_files).to(include 'index.html')\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-56035.rb",
        "line": 1
      },
      "id": "V-56035"
    },
    {
      "title": "Users and scripts running on behalf of users must be contained to the\n  document root or home directory tree of the NGINX web server.",
      "desc": "A web server is designed to deliver content and execute scripts or\n  applications on the request of a client or user.  Containing user requests to\n  files in the directory tree of the hosted web application and limiting the\n  execution of scripts and applications guarantees that the user is not accessing\n  information protected outside the application's realm.\n\n    The web server must also prohibit users from jumping outside the hosted\n  application directory tree through access to the user's home directory,\n  symbolic links or shortcuts, or through search paths for missing files.",
      "descriptions": {
        "default": "A web server is designed to deliver content and execute scripts or\n  applications on the request of a client or user.  Containing user requests to\n  files in the directory tree of the hosted web application and limiting the\n  execution of scripts and applications guarantees that the user is not accessing\n  information protected outside the application's realm.\n\n    The web server must also prohibit users from jumping outside the hosted\n  application directory tree through access to the user's home directory,\n  symbolic links or shortcuts, or through search paths for missing files.",
        "check": "Review the NGINX web server documentation and configuration\n  to determine where the document root or home directory for each application\n  hosted by the web server is located.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n    # grep for a 'deny' directive in the root directoy location context of the\n    nginx.conf and any separated include configuration file.\n\n  Verify that there is a 'deny all' set in each root directory location context\n  to deny access by default. If a 'deny all' is not set in each location,\n  this is a finding.",
        "fix": "Add a 'deny all' in each location context in the NGINX configuration\n  file(s) to contain users and scripts to each hosted application's domain.\n\n  Example configuration:\n\n  'location / {\n                  deny all;\n  }'"
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000141-WSR-000087",
        "gid": "V-41704",
        "rid": "SV-54281r3_rule",
        "stig_id": "SRG-APP-000141-WSR-000087",
        "fix_id": "F-47163r2_fix",
        "cci": [
          "CCI-000381"
        ],
        "nist": [
          "CM-7 a",
          ""
        ]
      },
      "code": "control 'V-41704' do\n  title \"Users and scripts running on behalf of users must be contained to the\n  document root or home directory tree of the NGINX web server.\"\n  desc \"A web server is designed to deliver content and execute scripts or\n  applications on the request of a client or user.  Containing user requests to\n  files in the directory tree of the hosted web application and limiting the\n  execution of scripts and applications guarantees that the user is not accessing\n  information protected outside the application's realm.\n\n    The web server must also prohibit users from jumping outside the hosted\n  application directory tree through access to the user's home directory,\n  symbolic links or shortcuts, or through search paths for missing files.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and configuration\n  to determine where the document root or home directory for each application\n  hosted by the web server is located.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n    # grep for a 'deny' directive in the root directoy location context of the\n    nginx.conf and any separated include configuration file.\n\n  Verify that there is a 'deny all' set in each root directory location context\n  to deny access by default. If a 'deny all' is not set in each location,\n  this is a finding.\"\n\n  desc 'fix', \"Add a 'deny all' in each location context in the NGINX configuration\n  file(s) to contain users and scripts to each hosted application's domain.\n\n  Example configuration:\n\n  'location / {\n                  deny all;\n  }'\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000141-WSR-000087'\n  tag \"gid\": 'V-41704'\n  tag \"rid\": 'SV-54281r3_rule'\n  tag \"stig_id\": 'SRG-APP-000141-WSR-000087'\n  tag \"fix_id\": 'F-47163r2_fix'\n  tag \"cci\": ['CCI-000381']\n  tag \"nist\": ['CM-7 a', '']\n\n  if nginx_conf.locations.empty?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.locations.each do |location|\n      deny_values = []\n      deny_values.push(location.params['deny']) unless location.params['deny'].nil?\n      describe 'Each location context' do\n        it 'should include an deny all directive.' do\n          expect(deny_values.to_s).to(include 'all')\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41704.rb",
        "line": 1
      },
      "id": "V-41704"
    },
    {
      "title": "The NGINX web server must restrict inbound connections from nonsecure zones.",
      "desc": "Remote access to the web server is any access that communicates\nthrough an external, non-organization-controlled network. Remote access can be\nused to access hosted applications or to perform management functions.\n\n    A web server can be accessed remotely and must be capable of restricting\naccess from what the DoD defines as nonsecure zones. Nonsecure zones are\ndefined as any IP, subnet, or region that is defined as a threat to the\norganization. The nonsecure zones must be defined for public web servers\nlogically located in a DMZ, as well as private web servers with perimeter\nprotection devices. By restricting access from nonsecure zones, through\ninternal web server access list, the web server can stop or slow denial of\nservice (DoS) attacks on the web server.",
      "descriptions": {
        "default": "Remote access to the web server is any access that communicates\nthrough an external, non-organization-controlled network. Remote access can be\nused to access hosted applications or to perform management functions.\n\n    A web server can be accessed remotely and must be capable of restricting\naccess from what the DoD defines as nonsecure zones. Nonsecure zones are\ndefined as any IP, subnet, or region that is defined as a threat to the\norganization. The nonsecure zones must be defined for public web servers\nlogically located in a DMZ, as well as private web servers with perimeter\nprotection devices. By restricting access from nonsecure zones, through\ninternal web server access list, the web server can stop or slow denial of\nservice (DoS) attacks on the web server.",
        "check": "Review the NGINX web server configuration to verify that the web server is\nrestricting access from nonsecure zones.\n\nIf the an enterprise tools is enforcing the organization's requirements for remote\nconnections, this control must be reviewed manually.\n\nCheck for the following:\n    # grep for a 'deny' directive in the location context of the nginx.conf\n    and any separated include configuration file.\n\nVerify that there is a 'deny all' set in each location context to deny all IP\naddresses by default and only allow addresses in secure zones. If a 'deny all'\nis not set in each location, this is a finding.",
        "fix": "Add a 'deny all' in each location context in the NGINX configuration\n  file(s) to deny access to all IP addresses by default, including addresses in\n  nonsecure zones.\n\n  Then add 'allow' directive(s) in each location context in the NGINX configuration file(s)\n  and configure it to only allow addresses in secure zones."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000315-WSR-000004",
        "gid": "V-55961",
        "rid": "SV-70215r2_rule",
        "stig_id": "SRG-APP-000315-WSR-000004",
        "fix_id": "F-60839r1_fix",
        "cci": [
          "CCI-002314"
        ],
        "nist": [
          "AC-17 (1)",
          ""
        ]
      },
      "code": "control 'V-55961' do\n  title 'The NGINX web server must restrict inbound connections from nonsecure zones.'\n  desc  \"Remote access to the web server is any access that communicates\nthrough an external, non-organization-controlled network. Remote access can be\nused to access hosted applications or to perform management functions.\n\n    A web server can be accessed remotely and must be capable of restricting\naccess from what the DoD defines as nonsecure zones. Nonsecure zones are\ndefined as any IP, subnet, or region that is defined as a threat to the\norganization. The nonsecure zones must be defined for public web servers\nlogically located in a DMZ, as well as private web servers with perimeter\nprotection devices. By restricting access from nonsecure zones, through\ninternal web server access list, the web server can stop or slow denial of\nservice (DoS) attacks on the web server.\n  \"\n\n  desc 'check', \"\n  Review the NGINX web server configuration to verify that the web server is\n  restricting access from nonsecure zones.\n\n  If the an enterprise tools is enforcing the organization's requirements for remote\n  connections, this control must be reviewed manually.\n\n  Check for the following:\n      # grep for a 'deny' directive in the location context of the nginx.conf\n      and any separated include configuration file.\n\n  Verify that there is a 'deny all' set in each location context to deny all IP\n  addresses by default and only allow addresses in secure zones. If a 'deny all'\n  is not set in each location, this is a finding.\n  \"\n  desc 'fix', \"Add a 'deny all' in each location context in the NGINX configuration\n  file(s) to deny access to all IP addresses by default, including addresses in\n  nonsecure zones.\n\n  Then add 'allow' directive(s) in each location context in the NGINX configuration file(s)\n  and configure it to only allow addresses in secure zones.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000315-WSR-000004'\n  tag \"gid\": 'V-55961'\n  tag \"rid\": 'SV-70215r2_rule'\n  tag \"stig_id\": 'SRG-APP-000315-WSR-000004'\n  tag \"fix_id\": 'F-60839r1_fix'\n  tag \"cci\": ['CCI-002314']\n  tag \"nist\": ['AC-17 (1)', '']\n\n  if input('uses_enterprise_tool') == 'true'\n    describe \"This test requires a Manual Review: Determine if the enterprise tool is enforcing\n    the organization's requirements for remote connections.\" do\n      skip \"This test requires a Manual Review: Determine if the enterprise tool is enforcing\n      the organization's requirements for remote connections.\"\n    end\n  elsif nginx_conf.locations.empty?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.locations.each do |location|\n      deny_values = []\n      deny_values.push(location.params['deny']) unless location.params['deny'].nil?\n      describe 'Each location context' do\n        it 'should include an deny all directive.' do\n          expect(deny_values.to_s).to(include 'all')\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55961.rb",
        "line": 1
      },
      "id": "V-55961"
    },
    {
      "title": "The NGINX web server must generate unique session identifiers that cannot be\n  reliably reproduced.",
      "desc": "Communication between a client and the web server is done using the\n  HTTP protocol, but HTTP is a stateless protocol. In order to maintain a\n  connection or session, a web server will generate a session identifier (ID) for\n  each client session when the session is initiated. The session ID allows the\n  web server to track a user session and, in many cases, the user, if the user\n  previously logged into a hosted application.\n\n      By being able to guess session IDs, an attacker can easily perform a\n  man-in-the-middle attack. To truly generate random session identifiers that\n  cannot be reproduced, the web server session ID generator, when used twice with\n  the same input criteria, must generate an unrelated random ID.\n\n    The session ID generator also needs to be a FIPS 140-2 approved generator.",
      "descriptions": {
        "default": "Communication between a client and the web server is done using the\n  HTTP protocol, but HTTP is a stateless protocol. In order to maintain a\n  connection or session, a web server will generate a session identifier (ID) for\n  each client session when the session is initiated. The session ID allows the\n  web server to track a user session and, in many cases, the user, if the user\n  previously logged into a hosted application.\n\n      By being able to guess session IDs, an attacker can easily perform a\n  man-in-the-middle attack. To truly generate random session identifiers that\n  cannot be reproduced, the web server session ID generator, when used twice with\n  the same input criteria, must generate an unrelated random ID.\n\n    The session ID generator also needs to be a FIPS 140-2 approved generator.",
        "check": "Review the NGINX web server documentation and deployed configuration\n  to verify that random and unique session identifiers are generated.\n\n  If it is determined that the web server is not required to perform session management,\n  this check is Not Applicable.\n\n  NGINX web server versions after 1.11.0 have the $request_id embedded variable by default.\n  This variable is a unique request identifier generated from 16 random bytes, in hexadecimal.\n\n  Execute the following command to get the current version of NGINX running:\n    # nginx -v\n\n  If the current version of NGINX running is 1.11.0 or earlier, this is a finding.",
        "fix": "Upgrade to the lastest stable version of NGINX web server to use the '$request_id'\n  embedded variable for generating an unique identifier that cannot be reliably reproduced."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000224-WSR-000136",
        "satisfies": [
          "SRG-APP-000224-WSR-000137",
          "SRG-APP-000224-WSR-000138",
          "SRG-APP-000224-WSR-000139",
          "SRG-APP-000223-WSR-000145",
          "SRG-APP-000224-WSR-000135"
        ],
        "gid": "V-41807",
        "rid": "SV-54384r3_rule",
        "stig_id": "SRG-APP-000224-WSR-000136",
        "fix_id": "F-47266r2_fix",
        "cci": [
          "CCI-001188",
          "CCI-001664"
        ],
        "nist": [
          "SC-23 (3)",
          ""
        ]
      },
      "code": "control 'V-41807' do\n  title \"The NGINX web server must generate unique session identifiers that cannot be\n  reliably reproduced.\"\n  desc \"Communication between a client and the web server is done using the\n  HTTP protocol, but HTTP is a stateless protocol. In order to maintain a\n  connection or session, a web server will generate a session identifier (ID) for\n  each client session when the session is initiated. The session ID allows the\n  web server to track a user session and, in many cases, the user, if the user\n  previously logged into a hosted application.\n\n      By being able to guess session IDs, an attacker can easily perform a\n  man-in-the-middle attack. To truly generate random session identifiers that\n  cannot be reproduced, the web server session ID generator, when used twice with\n  the same input criteria, must generate an unrelated random ID.\n\n    The session ID generator also needs to be a FIPS 140-2 approved generator.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and deployed configuration\n  to verify that random and unique session identifiers are generated.\n\n  If it is determined that the web server is not required to perform session management,\n  this check is Not Applicable.\n\n  NGINX web server versions after 1.11.0 have the $request_id embedded variable by default.\n  This variable is a unique request identifier generated from 16 random bytes, in hexadecimal.\n\n  Execute the following command to get the current version of NGINX running:\n    # nginx -v\n\n  If the current version of NGINX running is 1.11.0 or earlier, this is a finding.\n  \"\n  desc 'fix', \"Upgrade to the lastest stable version of NGINX web server to use the '$request_id'\n  embedded variable for generating an unique identifier that cannot be reliably reproduced.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000224-WSR-000136'\n  tag \"satisfies\": %w(SRG-APP-000224-WSR-000137 SRG-APP-000224-WSR-000138 SRG-APP-000224-WSR-000139\n                      SRG-APP-000223-WSR-000145 SRG-APP-000224-WSR-000135)\n  tag \"gid\": 'V-41807'\n  tag \"rid\": 'SV-54384r3_rule'\n  tag \"stig_id\": 'SRG-APP-000224-WSR-000136'\n  tag \"fix_id\": 'F-47266r2_fix'\n  tag \"cci\": %w(CCI-001188 CCI-001664)\n  tag \"nist\": ['SC-23 (3)', '']\n\n  if input('performs_session_management') == false\n    impact 0.0\n    describe 'This check is NA because session management is not required.' do\n      skip 'This check is NA because session management is not required.'\n    end\n  else\n    describe nginx do\n      its('version') { should cmp > '1.11.0' }\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41807.rb",
        "line": 1
      },
      "id": "V-41807"
    },
    {
      "title": "The NGINX web server must initiate session logging upon start up.",
      "desc": "An attacker can compromise a web server during the startup process. If\n  logging is not initiated until all the web server processes are started, key\n  information may be missed and not available during a forensic investigation. To\n  assure all logable events are captured, the web server must begin logging once\n  the first web server process is initiated.",
      "descriptions": {
        "default": "An attacker can compromise a web server during the startup process. If\n  logging is not initiated until all the web server processes are started, key\n  information may be missed and not available during a forensic investigation. To\n  assure all logable events are captured, the web server must begin logging once\n  the first web server process is initiated.",
        "check": "Review the NGINX web server documentation and deployed configuration to determine\n  if the NGINX web server captures log data as soon as the NGINX web server is started.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  Check for the following:\n      # grep for 'access_log' and 'error_log' directives in the nginx.conf and any separated\n      include configuration file.\n\n  Execute the following commands:\n      # file <path to access_log>/access.log\n      # file <path to error_log>/error.log\n\n  If the 'access_log' and 'error_log' directives cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  If the access.log and error.log files do not exist, this is a finding.",
        "fix": "Enable loggin on the NGINX web server by configuring the 'access_log' and 'error_log' directives in the NGINX configuration\n  file(s) to generate log records for system startup."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000092-WSR-000055",
        "gid": "V-41611",
        "rid": "SV-54188r3_rule",
        "stig_id": "SRG-APP-000092-WSR-000055",
        "fix_id": "F-47070r2_fix",
        "cci": [
          "CCI-001464"
        ],
        "nist": [
          "AU-14 (1)",
          ""
        ]
      },
      "code": "control 'V-41611' do\n  title 'The NGINX web server must initiate session logging upon start up.'\n  desc  \"An attacker can compromise a web server during the startup process. If\n  logging is not initiated until all the web server processes are started, key\n  information may be missed and not available during a forensic investigation. To\n  assure all logable events are captured, the web server must begin logging once\n  the first web server process is initiated.\"\n\n  desc 'check', \"Review the NGINX web server documentation and deployed configuration to determine\n  if the NGINX web server captures log data as soon as the NGINX web server is started.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  Check for the following:\n      # grep for 'access_log' and 'error_log' directives in the nginx.conf and any separated\n      include configuration file.\n\n  Execute the following commands:\n      # file <path to access_log>/access.log\n      # file <path to error_log>/error.log\n\n  If the 'access_log' and 'error_log' directives cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  If the access.log and error.log files do not exist, this is a finding.\n  \"\n  desc 'fix', \"Enable loggin on the NGINX web server by configuring the 'access_log' and 'error_log' directives in the NGINX configuration\n  file(s) to generate log records for system startup.\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000092-WSR-000055'\n  tag \"gid\": 'V-41611'\n  tag \"rid\": 'SV-54188r3_rule'\n  tag \"stig_id\": 'SRG-APP-000092-WSR-000055'\n  tag \"fix_id\": 'F-47070r2_fix'\n  tag \"cci\": ['CCI-001464']\n  tag \"nist\": ['AU-14 (1)', '']\n\n  # Verify that access_log and error_log is enabled\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      if http['access_log'].nil?\n        impact 0.0\n        describe 'This test is NA because the access_log directive has not been configured.' do\n          skip 'This test is NA because access_log directive has not been configured.'\n        end\n      else\n        http['access_log'].each do |access_log|\n          access_log.each do |access_value|\n            next unless access_value.include? 'access.log'\n\n            describe file(access_value) do\n              it 'The access log should exist.' do\n                expect(subject).to(exist)\n              end\n            end\n          end\n        end\n      end\n    end\n    if nginx_conf.params['error_log'].nil?\n      impact 0.0\n      describe 'This test is NA because the error_log directive has not been configured.' do\n        skip 'This test is NA because error_log directive has not been configured.'\n      end\n    else\n      nginx_conf.params['error_log'].each do |error_log|\n        error_log.each do |error_value|\n          next unless error_value.include? 'error.log'\n\n          describe file(error_value) do\n            it 'The error log should exist.' do\n              expect(subject).to(exist)\n            end\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41611.rb",
        "line": 1
      },
      "id": "V-41611"
    },
    {
      "title": "Cookies exchanged between the NGINX web server and the client, such as\n  session cookies, must have cookie properties set to force the encryption of\n  cookies.",
      "desc": "Cookies can be sent to a client using TLS/SSL to encrypt the cookies,\n  but TLS/SSL is not used by every hosted application since the data being\n  displayed does not require the encryption of the transmission. To safeguard\n  against cookies, especially session cookies, being sent in plaintext, a cookie\n  can be encrypted before transmission. To force a cookie to be encrypted before\n  transmission, the cookie Secure property can be set.",
      "descriptions": {
        "default": "Cookies can be sent to a client using TLS/SSL to encrypt the cookies,\n  but TLS/SSL is not used by every hosted application since the data being\n  displayed does not require the encryption of the transmission. To safeguard\n  against cookies, especially session cookies, being sent in plaintext, a cookie\n  can be encrypted before transmission. To force a cookie to be encrypted before\n  transmission, the cookie Secure property can be set.",
        "check": "Review the NGINX web server documentation and deployed configuration\n  to verify that cookies are encrypted before transmission.\n\n  If it is determined that the web server is not required to perform session\n  management, this check is Not Applicable.\n\n  If NGINX is not configured to serve files or if the required directive(s)\n  cannot be found in the NGINX configuration files, this check is Not Applicable.\n\n  Check for the following:\n    # grep the 'proxy_cookie_path' directive in the location context of the\n    nginx.conf and any separated include configuration file.\n\n  If the 'proxy_cookie_path' directive exists and is not set to 'Secure',\n  this is a finding.",
        "fix": "If the 'proxy_cookie_path' directive exists in the NGINX\n  configuration file(s), configure it to include the 'Secure' property.\n\n  Example:\n  proxy_cookie_path / '/; HTTPOnly; Secure';"
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000439-WSR-000155",
        "gid": "V-56009",
        "rid": "SV-70263r2_rule",
        "stig_id": "SRG-APP-000439-WSR-000155",
        "fix_id": "F-60887r1_fix",
        "cci": [
          "CCI-002418"
        ],
        "nist": [
          "SC-8"
        ]
      },
      "code": "control 'V-56009' do\n  title \"Cookies exchanged between the NGINX web server and the client, such as\n  session cookies, must have cookie properties set to force the encryption of\n  cookies.\"\n  desc \"Cookies can be sent to a client using TLS/SSL to encrypt the cookies,\n  but TLS/SSL is not used by every hosted application since the data being\n  displayed does not require the encryption of the transmission. To safeguard\n  against cookies, especially session cookies, being sent in plaintext, a cookie\n  can be encrypted before transmission. To force a cookie to be encrypted before\n  transmission, the cookie Secure property can be set.\"\n\n  desc 'check', \"Review the NGINX web server documentation and deployed configuration\n  to verify that cookies are encrypted before transmission.\n\n  If it is determined that the web server is not required to perform session\n  management, this check is Not Applicable.\n\n  If NGINX is not configured to serve files or if the required directive(s)\n  cannot be found in the NGINX configuration files, this check is Not Applicable.\n\n  Check for the following:\n    # grep the 'proxy_cookie_path' directive in the location context of the\n    nginx.conf and any separated include configuration file.\n\n  If the 'proxy_cookie_path' directive exists and is not set to 'Secure',\n  this is a finding.\n  \"\n  desc 'fix', \"If the 'proxy_cookie_path' directive exists in the NGINX\n  configuration file(s), configure it to include the 'Secure' property.\n\n  Example:\n  proxy_cookie_path / '/; HTTPOnly; Secure';\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000439-WSR-000155'\n  tag \"gid\": 'V-56009'\n  tag \"rid\": 'SV-70263r2_rule'\n  tag \"stig_id\": 'SRG-APP-000439-WSR-000155'\n  tag \"fix_id\": 'F-60887r1_fix'\n  tag \"cci\": ['CCI-002418']\n  tag \"nist\": %w(SC-8)\n\n  if input('performs_session_management') == false\n    impact 0.0\n    describe 'This check is NA because session management is not required.' do\n      skip 'This check is NA because session management is not required.'\n    end\n  elsif nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.locations.each do |location|\n      if location.params['proxy_cookie_path'].nil?\n        impact 0.0\n        describe 'This check is NA because the proxy_cookie_path directive is not configured.' do\n          skip 'This check is NA because the proxy_cookie_path directive is not configured.'\n        end\n      else\n        describe \"The 'proxy_cookie_path'\" do\n          it 'should be configured to HTTPOnly and Secure' do\n            expect(location.params['proxy_cookie_path'].join).to(include '/; HTTPOnly; Secure')\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-56009.rb",
        "line": 1
      },
      "id": "V-56009"
    },
    {
      "title": "A web server must maintain the confidentiality of controlled\n  information during transmission through the use of an approved TLS version.",
      "desc": "Transport Layer Security (TLS) is a required transmission protocol for\n  a web server hosting controlled information. The use of TLS provides\n  confidentiality of data in transit between the web server and client. FIPS\n  140-2 approved TLS versions must be enabled and non-FIPS-approved SSL versions\n  must be disabled.\n\n  NIST SP 800-52 defines the approved TLS versions for government\n  applications.",
      "descriptions": {
        "default": "Transport Layer Security (TLS) is a required transmission protocol for\n  a web server hosting controlled information. The use of TLS provides\n  confidentiality of data in transit between the web server and client. FIPS\n  140-2 approved TLS versions must be enabled and non-FIPS-approved SSL versions\n  must be disabled.\n\n  NIST SP 800-52 defines the approved TLS versions for government\n  applications.",
        "check": "Review the NGINX web server documentation and deployed configuration\n  to determine which version of TLS is being used.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n    #grep the 'ssl_protocols' directive in the server context of the nginx.conf and any\n    separated include configuration file.\n\n  If the 'ssl_protocols' directive cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  If the 'ssl_protocols' directive not set to the approved TLS version, this is a finding.",
        "fix": "Add the 'ssl_protocols' directive to the NGINX configuration file(s) and\n  configure it to use only the approved TLS protocols.\n\n  Example:\n    server {\n            ssl_protocols TLSv1.2;\n    }"
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000439-WSR-000156",
        "gid": "V-56011",
        "rid": "SV-70265r2_rule",
        "stig_id": "SRG-APP-000439-WSR-000156",
        "fix_id": "F-60889r1_fix",
        "cci": [
          "CCI-002418"
        ],
        "nist": [
          "SC-8"
        ]
      },
      "code": "control 'V-56011' do\n  title \"A web server must maintain the confidentiality of controlled\n  information during transmission through the use of an approved TLS version.\"\n  desc  \"Transport Layer Security (TLS) is a required transmission protocol for\n  a web server hosting controlled information. The use of TLS provides\n  confidentiality of data in transit between the web server and client. FIPS\n  140-2 approved TLS versions must be enabled and non-FIPS-approved SSL versions\n  must be disabled.\n\n  NIST SP 800-52 defines the approved TLS versions for government\n  applications.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and deployed configuration\n  to determine which version of TLS is being used.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n    #grep the 'ssl_protocols' directive in the server context of the nginx.conf and any\n    separated include configuration file.\n\n  If the 'ssl_protocols' directive cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  If the 'ssl_protocols' directive not set to the approved TLS version, this is a finding.\n  \"\n  desc 'fix', \"Add the 'ssl_protocols' directive to the NGINX configuration file(s) and\n  configure it to use only the approved TLS protocols.\n\n  Example:\n    server {\n            ssl_protocols TLSv1.2;\n    }\n  \"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000439-WSR-000156'\n  tag \"gid\": 'V-56011'\n  tag \"rid\": 'SV-70265r2_rule'\n  tag \"stig_id\": 'SRG-APP-000439-WSR-000156'\n  tag \"fix_id\": 'F-60889r1_fix'\n  tag \"cci\": ['CCI-002418']\n  tag \"nist\": %w(SC-8)\n\n  if nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.each do |server|\n      if server.params['ssl_protocols'].nil?\n        impact 0.0\n        describe 'This test is NA because the ssl_protocols directive has not been configured.' do\n          skip 'This test is NA because the ssl_protocols directive has not been configured.'\n        end\n      else\n        server.params['ssl_protocols'].each do |protocol|\n          describe 'Each protocol' do\n            it 'should be included in the list of protocols approved to encrypt data' do\n              expect(protocol).to(be_in(input('approved_ssl_protocols')))\n            end\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-56011.rb",
        "line": 1
      },
      "id": "V-56011"
    },
    {
      "title": "The NGINX web server must provide install options to exclude the\n  installation of documentation, sample code, example applications, and\n  tutorials.",
      "desc": "Web server documentation, sample code, example applications, and\n  tutorials may be an exploitable threat to a web server because this type of\n  code has not been evaluated and approved. A production web server must only\n  contain components that are operationally necessary (e.g., compiled code,\n  scripts, web-content, etc.).\n\n    Any documentation, sample code, example applications, and tutorials must be\n  removed from a production web server. To make certain that the documentation\n  and code are not installed or uninstalled completely; the web server must offer\n  an option as part of the installation process to exclude these packages or to\n  uninstall the packages if necessary.",
      "descriptions": {
        "default": "Web server documentation, sample code, example applications, and\n  tutorials may be an exploitable threat to a web server because this type of\n  code has not been evaluated and approved. A production web server must only\n  contain components that are operationally necessary (e.g., compiled code,\n  scripts, web-content, etc.).\n\n    Any documentation, sample code, example applications, and tutorials must be\n  removed from a production web server. To make certain that the documentation\n  and code are not installed or uninstalled completely; the web server must offer\n  an option as part of the installation process to exclude these packages or to\n  uninstall the packages if necessary.",
        "check": "Review the NGINX web server documentation and deployment configuration to\ndetermine if the web server contains documentation, sample code, example\napplications, or tutorials.\n\nIf the site requires the use of a particular piece of software, verify that\nthe Information System Security Officer (ISSO) maintains documentation\nidentifying this software as necessary for operations. The software must\nbe operated at the vendor’s current patch level and must be a supported\nvendor release.\n\nIf programs or utilities that meet the above criteria are installed on the\nweb server and appropriate documentation and signatures are in evidence,\nthis is not a finding.\n\nDetermine whether the web server is configured with unnecessary software.\nThis may change with the software versions, but the following are some\nexamples of what to look for (This should not be the definitive list of\nsample files, but only an example of the common samples that are provided\nwith the associated web server. This list will be updated as additional\ninformation is discovered.):\n\n  #  ls -Ll /usr/share/man/man8/nginx.8.gz\n\nDetermine whether processes other than those that support the web server\nare loaded and/or run on the web server.\n\nExamples of software that should not be on the web server are all web\ndevelopment tools, office suites (unless the web server is a private\nweb development server), compilers, and other utilities that are not\npart of the web server suite or the basic operating system.\n\nCheck the directory structure of the server and verify that additional,\nunintended, or unneeded applications are not loaded on the system.",
        "fix": "Remove any unnecessary applications per ISSO documentation."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000141-WSR-000077",
        "gid": "V-41695",
        "rid": "SV-54272r3_rule",
        "stig_id": "SRG-APP-000141-WSR-000077",
        "fix_id": "F-47154r2_fix",
        "cci": [
          "CCI-000381"
        ],
        "nist": [
          "CM-7 a",
          ""
        ]
      },
      "code": "control 'V-41695' do\n  title \"The NGINX web server must provide install options to exclude the\n  installation of documentation, sample code, example applications, and\n  tutorials.\"\n  desc \"Web server documentation, sample code, example applications, and\n  tutorials may be an exploitable threat to a web server because this type of\n  code has not been evaluated and approved. A production web server must only\n  contain components that are operationally necessary (e.g., compiled code,\n  scripts, web-content, etc.).\n\n    Any documentation, sample code, example applications, and tutorials must be\n  removed from a production web server. To make certain that the documentation\n  and code are not installed or uninstalled completely; the web server must offer\n  an option as part of the installation process to exclude these packages or to\n  uninstall the packages if necessary.\n  \"\n\n  desc 'check', \"\n  Review the NGINX web server documentation and deployment configuration to\n  determine if the web server contains documentation, sample code, example\n  applications, or tutorials.\n\n  If the site requires the use of a particular piece of software, verify that\n  the Information System Security Officer (ISSO) maintains documentation\n  identifying this software as necessary for operations. The software must\n  be operated at the vendor’s current patch level and must be a supported\n  vendor release.\n\n  If programs or utilities that meet the above criteria are installed on the\n  web server and appropriate documentation and signatures are in evidence,\n  this is not a finding.\n\n  Determine whether the web server is configured with unnecessary software.\n  This may change with the software versions, but the following are some\n  examples of what to look for (This should not be the definitive list of\n  sample files, but only an example of the common samples that are provided\n  with the associated web server. This list will be updated as additional\n  information is discovered.):\n\n    #  ls -Ll /usr/share/man/man8/nginx.8.gz\n\n  Determine whether processes other than those that support the web server\n  are loaded and/or run on the web server.\n\n  Examples of software that should not be on the web server are all web\n  development tools, office suites (unless the web server is a private\n  web development server), compilers, and other utilities that are not\n  part of the web server suite or the basic operating system.\n\n  Check the directory structure of the server and verify that additional,\n  unintended, or unneeded applications are not loaded on the system.\n\n  \"\n  desc 'fix', 'Remove any unnecessary applications per ISSO documentation.'\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000141-WSR-000077'\n  tag \"gid\": 'V-41695'\n  tag \"rid\": 'SV-54272r3_rule'\n  tag \"stig_id\": 'SRG-APP-000141-WSR-000077'\n  tag \"fix_id\": 'F-47154r2_fix'\n  tag \"cci\": ['CCI-000381']\n  tag \"nist\": ['CM-7 a', '']\n\n  if input('nginx_disallowed_file_list').empty?\n    describe 'This check is skipped because the disallowed files list should not be empty.' do\n      skip 'This check is skipped because the disallowed files list should not be empty.'\n    end\n  else\n    input('nginx_disallowed_file_list').each do |file|\n      describe file(file) do\n        it { should_not exist }\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41695.rb",
        "line": 1
      },
      "id": "V-41695"
    },
    {
      "title": "The web server must remove all export ciphers to protect the\nconfidentiality and integrity of transmitted information.",
      "desc": "During the initial setup of a Transport Layer Security (TLS)\nconnection to the web server, the client sends a list of supported cipher\nsuites in order of preference.  The web server will reply with the cipher suite\nit will use for communication from the client list.  If an attacker can\nintercept the submission of cipher suites to the web server and place, as the\npreferred cipher suite, a weak export suite, the encryption used for the\nsession becomes easy for the attacker to break, often within minutes to hours.",
      "descriptions": {
        "default": "During the initial setup of a Transport Layer Security (TLS)\nconnection to the web server, the client sends a list of supported cipher\nsuites in order of preference.  The web server will reply with the cipher suite\nit will use for communication from the client list.  If an attacker can\nintercept the submission of cipher suites to the web server and place, as the\npreferred cipher suite, a weak export suite, the encryption used for the\nsession becomes easy for the attacker to break, often within minutes to hours.",
        "check": "Review the web server documentation and deployed configuration to determine\nif export ciphers are removed.\n\nIf NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n\n  # grep the 'ssl_prefer_server_cipher' directive in each server context of\n  the nginx.conf and any separated include configuration file.\n\nVerify that the 'ssl_prefer_server_cipher' directive is set to 'on'.\nIf the directive is not set to 'on', this is a finding.\n\n  # grep the 'ssl_ciphers' directive in each server context of the nginx.conf\n  and any separated include configuration file.\n\nIf the 'ssl_ciphers' directive is configured to include any export ciphers,\nthis is a finding.\n\nIf the 'ssl_prefer_server_cipher' and 'ssl_ciphers' directives cannot be found\nin NGINX configuration files, this check is Not Applicable.",
        "fix": "Include the 'ssl_prefer_server_cipher' directive in all server\n  context of the NGINX configuration file(s) and set the directive to 'on'.\n  The 'ssl_ciphers' directive should not include any export ciphers."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000439-WSR-000188 ",
        "gid": "V-61353",
        "rid": "SV-75835r1_rule",
        "stig_id": "SRG-APP-000439-WSR-000188",
        "fix_id": "F-67255r1_fix",
        "cci": [
          "CCI-002418"
        ],
        "nist": [
          "SC-8"
        ]
      },
      "code": "control 'V-61353' do\n  title \"The web server must remove all export ciphers to protect the\nconfidentiality and integrity of transmitted information.\"\n  desc  \"During the initial setup of a Transport Layer Security (TLS)\nconnection to the web server, the client sends a list of supported cipher\nsuites in order of preference.  The web server will reply with the cipher suite\nit will use for communication from the client list.  If an attacker can\nintercept the submission of cipher suites to the web server and place, as the\npreferred cipher suite, a weak export suite, the encryption used for the\nsession becomes easy for the attacker to break, often within minutes to hours.\"\n\n  desc  'check', \"\n  Review the web server documentation and deployed configuration to determine\n  if export ciphers are removed.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n    Check for the following:\n\n    # grep the 'ssl_prefer_server_cipher' directive in each server context of\n    the nginx.conf and any separated include configuration file.\n\n  Verify that the 'ssl_prefer_server_cipher' directive is set to 'on'.\n  If the directive is not set to 'on', this is a finding.\n\n    # grep the 'ssl_ciphers' directive in each server context of the nginx.conf\n    and any separated include configuration file.\n\n  If the 'ssl_ciphers' directive is configured to include any export ciphers,\n  this is a finding.\n\n  If the 'ssl_prefer_server_cipher' and 'ssl_ciphers' directives cannot be found\n  in NGINX configuration files, this check is Not Applicable.\n\n  \"\n  desc 'fix', \"Include the 'ssl_prefer_server_cipher' directive in all server\n  context of the NGINX configuration file(s) and set the directive to 'on'.\n  The 'ssl_ciphers' directive should not include any export ciphers. \"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000439-WSR-000188 '\n  tag \"gid\": 'V-61353'\n  tag \"rid\": 'SV-75835r1_rule'\n  tag \"stig_id\": 'SRG-APP-000439-WSR-000188'\n  tag \"fix_id\": 'F-67255r1_fix'\n  tag \"cci\": ['CCI-002418']\n  tag \"nist\": %w(SC-8)\n\n  if nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.each do |server|\n      if server.params['ssl_prefer_server_ciphers'].nil?\n        impact 0.0\n        describe 'This test is NA because the ssl_prefer_server_ciphers directive has not been configured.' do\n          skip 'This test is NA because the ssl_prefer_server_ciphers directive has not been configured.'\n        end\n      else\n        server.params['ssl_prefer_server_ciphers'].each do |prefer_ciphers|\n          describe 'The ssl_prefer_server_cipher' do\n            it 'should be set to on.' do\n              expect(prefer_ciphers).to(cmp('on'))\n            end\n          end\n        end\n      end\n      if server.params['ssl_ciphers'].nil?\n        impact 0.0\n        describe 'This test is NA because the ssl_ciphers directive has not been configured.' do\n          skip 'This test is NA because the ssl_ciphers directive has not been configured.'\n        end\n      else\n        ciphers_found = []\n        server.params['ssl_ciphers'].each do |ciphers|\n          ciphers[0].to_s.split(\"\\:\").each do |cipher|\n            ciphers_found << cipher\n          end\n        end\n        ciphers_found.uniq!\n        ciphers_found.each do |cipher|\n          describe 'Each cipher' do\n            it 'found in configuration should be included in the list of ciphers approved to encrypt data' do\n              expect(cipher).to(be_in(input('approved_ssl_ciphers')))\n            end\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-61353.rb",
        "line": 1
      },
      "id": "V-61353"
    },
    {
      "title": "The log information from the NGINX web server must be protected from\n  unauthorized modification.",
      "desc": "Log data is essential in the investigation of events. The accuracy of\n  the information is always pertinent. Information that is not accurate does not\n  help in the revealing of potential security risks and may hinder the early\n  discovery of a system compromise. One of the first steps an attacker will\n  undertake is the modification or deletion of log records to cover his tracks\n  and prolong discovery.\n\n    The web server must protect the log data from unauthorized modification.\n  This can be done by the web server if the web server is also doing the logging\n  function. The web server may also use an external log system. In either case,\n  the logs must be protected from modification by non-privileged users.",
      "descriptions": {
        "default": "Log data is essential in the investigation of events. The accuracy of\n  the information is always pertinent. Information that is not accurate does not\n  help in the revealing of potential security risks and may hinder the early\n  discovery of a system compromise. One of the first steps an attacker will\n  undertake is the modification or deletion of log records to cover his tracks\n  and prolong discovery.\n\n    The web server must protect the log data from unauthorized modification.\n  This can be done by the web server if the web server is also doing the logging\n  function. The web server may also use an external log system. In either case,\n  the logs must be protected from modification by non-privileged users.",
        "check": "Review the NGINX web server documentation and deployed configuration settings to\ndetermine if the web server logging features protect log information from\nunauthorized modification.\n\nCheck for the following:\n    # grep for 'access_log' and 'error_log' directives in the nginx.conf and any separated include configuration file.\n\nExecute the following commands:\n    # ls -alH <nginx log directory>\n    # ls -alH <path to access_log>/access.log\n    # ls -alH <path to error_log>/error.log\n\nNote the owner and group permissions on these files. Only system administrators\nand service accounts running the server should have permissions to the directory and files.\n  - The SA or service account should own the directory and files\n  - Permissions on the directory should be 750 or more restrictive\n  - Permissions on these files should be 640 or more restrictive\n\nIf any users other than those authorized have permission to modify log files, this is a finding.",
        "fix": "To protect the integrity of the data that is being captured in the\n  log files, ensure that only the members of the Auditors group, Administrators,\n  and the user assigned to run the web server software is granted permissions to\n  modify the log files."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000119-WSR-000069",
        "gid": "V-41671",
        "rid": "SV-54248r3_rule",
        "stig_id": "SRG-APP-000119-WSR-000069",
        "fix_id": "F-47130r3_fix",
        "cci": [
          "CCI-000163"
        ],
        "nist": [
          "AU-9"
        ]
      },
      "code": "control 'V-41671' do\n  title \"The log information from the NGINX web server must be protected from\n  unauthorized modification.\"\n  desc \"Log data is essential in the investigation of events. The accuracy of\n  the information is always pertinent. Information that is not accurate does not\n  help in the revealing of potential security risks and may hinder the early\n  discovery of a system compromise. One of the first steps an attacker will\n  undertake is the modification or deletion of log records to cover his tracks\n  and prolong discovery.\n\n    The web server must protect the log data from unauthorized modification.\n  This can be done by the web server if the web server is also doing the logging\n  function. The web server may also use an external log system. In either case,\n  the logs must be protected from modification by non-privileged users.\n  \"\n\n  desc 'check', \"\n  Review the NGINX web server documentation and deployed configuration settings to\n  determine if the web server logging features protect log information from\n  unauthorized modification.\n\n  Check for the following:\n      # grep for 'access_log' and 'error_log' directives in the nginx.conf and any separated include configuration file.\n\n  Execute the following commands:\n      # ls -alH <nginx log directory>\n      # ls -alH <path to access_log>/access.log\n      # ls -alH <path to error_log>/error.log\n\n  Note the owner and group permissions on these files. Only system administrators\n  and service accounts running the server should have permissions to the directory and files.\n    - The SA or service account should own the directory and files\n    - Permissions on the directory should be 750 or more restrictive\n    - Permissions on these files should be 640 or more restrictive\n\n  If any users other than those authorized have permission to modify log files, this is a finding.\n  \"\n  desc 'fix', \"To protect the integrity of the data that is being captured in the\n  log files, ensure that only the members of the Auditors group, Administrators,\n  and the user assigned to run the web server software is granted permissions to\n  modify the log files.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000119-WSR-000069'\n  tag \"gid\": 'V-41671'\n  tag \"rid\": 'SV-54248r3_rule'\n  tag \"stig_id\": 'SRG-APP-000119-WSR-000069'\n  tag \"fix_id\": 'F-47130r3_fix'\n  tag \"cci\": ['CCI-000163']\n  tag \"nist\": %w(AU-9)\n\n  # nginx log directory should have 750 permissions\n  describe file(input('nginx_log_path')) do\n    its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n    its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n    it { should_not be_more_permissive_than('0750') }\n  end\n\n  # log file in docker are symlinks\n  if virtualization.system.eql?('docker')\n    # nginx access log file should have 660 permissions\n    describe file(input('access_log_path')) do\n      its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n      its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n    end\n\n    # nginx error log file should have 660 permissions\n    describe file(input('error_log_path')) do\n      its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n      its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n    end\n  else\n    # nginx access log file should have 660 permissions\n    describe file(input('access_log_path')) do\n      its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n      its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n      it { should_not be_more_permissive_than('0640') }\n    end\n\n    # nginx error log file should have 660 permissions\n    describe file(input('error_log_path')) do\n      its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n      its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n      it { should_not be_more_permissive_than('0640') }\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41671.rb",
        "line": 1
      },
      "id": "V-41671"
    },
    {
      "title": "The NGINX web server must be configured to use a specified IP address and\n  port.",
      "desc": "The web server must be configured to listen on a specified IP address\n  and port.  Without specifying an IP address and port for the web server to\n  utilize, the web server will listen on all IP addresses available to the\n  hosting server.  If the web server has multiple IP addresses, i.e., a\n  management IP address, the web server will also accept connections on the\n  management IP address.\n\n    Accessing the hosted application through an IP address normally used for\n  non-application functions opens the possibility of user access to resources,\n  utilities, files, ports, and protocols that are protected on the desired\n  application IP address.",
      "descriptions": {
        "default": "The web server must be configured to listen on a specified IP address\n  and port.  Without specifying an IP address and port for the web server to\n  utilize, the web server will listen on all IP addresses available to the\n  hosting server.  If the web server has multiple IP addresses, i.e., a\n  management IP address, the web server will also accept connections on the\n  management IP address.\n\n    Accessing the hosted application through an IP address normally used for\n  non-application functions opens the possibility of user access to resources,\n  utilities, files, ports, and protocols that are protected on the desired\n  application IP address.",
        "check": "Review the NGINX web server documentation and deployment\n  configuration to determine whether the web server is configured to listen\n  on a specified IP address and port.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n    # grep the 'listen' directive in the server context of the nginx.conf and any\n    separated include configuration file.\n\n  If the 'listen' directive cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  Verify that any enabled 'listen' directives specify both an IP address and\n  port number.\n\n  If the 'listen' directive is found with only an IP address or only a port number\n  specified, this is finding.\n\n  If the IP address is all zeros (i.e., 0.0.0.0:80 or [::ffff:0.0.0.0]:80),\n  this is a finding.",
        "fix": "Configure the 'listen' directive in the server context of the NGINX\n  configuration file(s) to listen on a specific IP address and port."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000142-WSR-000089",
        "gid": "V-41706",
        "rid": "SV-54283r3_rule",
        "stig_id": "SRG-APP-000142-WSR-000089",
        "fix_id": "F-47165r2_fix",
        "cci": [
          "CCI-000382"
        ],
        "nist": [
          "CM-7 b",
          ""
        ]
      },
      "code": "control 'V-41706' do\n  title \"The NGINX web server must be configured to use a specified IP address and\n  port.\"\n  desc \"The web server must be configured to listen on a specified IP address\n  and port.  Without specifying an IP address and port for the web server to\n  utilize, the web server will listen on all IP addresses available to the\n  hosting server.  If the web server has multiple IP addresses, i.e., a\n  management IP address, the web server will also accept connections on the\n  management IP address.\n\n    Accessing the hosted application through an IP address normally used for\n  non-application functions opens the possibility of user access to resources,\n  utilities, files, ports, and protocols that are protected on the desired\n  application IP address.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and deployment\n  configuration to determine whether the web server is configured to listen\n  on a specified IP address and port.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n    # grep the 'listen' directive in the server context of the nginx.conf and any\n    separated include configuration file.\n\n  If the 'listen' directive cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  Verify that any enabled 'listen' directives specify both an IP address and\n  port number.\n\n  If the 'listen' directive is found with only an IP address or only a port number\n  specified, this is finding.\n\n  If the IP address is all zeros (i.e., 0.0.0.0:80 or [::ffff:0.0.0.0]:80),\n  this is a finding.\n  \"\n  desc 'fix', \"Configure the 'listen' directive in the server context of the NGINX\n  configuration file(s) to listen on a specific IP address and port.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000142-WSR-000089'\n  tag \"gid\": 'V-41706'\n  tag \"rid\": 'SV-54283r3_rule'\n  tag \"stig_id\": 'SRG-APP-000142-WSR-000089'\n  tag \"fix_id\": 'F-47165r2_fix'\n  tag \"cci\": ['CCI-000382']\n  tag \"nist\": ['CM-7 b', '']\n\n  if nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.each do |server|\n      describe 'The listen directive' do\n        if server.params['listen'].nil?\n          impact 0.0\n          describe 'This test is NA because the listen directive has not been configured.' do\n            skip 'This test is NA because the listen directive has not been configured.'\n          end\n        else\n          server.params['listen'].each do |listen|\n            it 'should include both the IP and port number.' do\n              expect(listen.join).to(match(/[0-9]+(?:\\.[0-9]+){3}|[a-zA-Z]:[0-9]+/))\n            end\n            it 'should not be 0.0.0.0:80 or [::ffff:0.0.0.0]:80.' do\n              expect(listen.join.split(':').first).not_to(cmp('0.0.0.0'))\n              expect(listen.join.split(':').first).not_to(cmp('[::ffff:0.0.0.0]'))\n            end\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41706.rb",
        "line": 1
      },
      "id": "V-41706"
    },
    {
      "title": "The NGINX web server must use the internal system clock to generate time\n  stamps for log records.",
      "desc": "Without an internal clock used as the reference for the time stored on\n  each event to provide a trusted common reference for the time, forensic\n  analysis would be impeded. Determining the correct time a particular event\n  occurred on the web server is critical when conducting forensic analysis and\n  investigating system events.\n\n    If the internal clock is not used, the web server may not be able to\n  provide time stamps for log messages. The web server can use the capability of\n  an operating system or purpose-built module for this purpose.\n\n    Time stamps generated by the web server shall include both date and time.\n  The time may be expressed in Coordinated Universal Time (UTC), a modern\n  continuation of Greenwich Mean Time (GMT), or local time with an offset from\n  UTC.",
      "descriptions": {
        "default": "Without an internal clock used as the reference for the time stored on\n  each event to provide a trusted common reference for the time, forensic\n  analysis would be impeded. Determining the correct time a particular event\n  occurred on the web server is critical when conducting forensic analysis and\n  investigating system events.\n\n    If the internal clock is not used, the web server may not be able to\n  provide time stamps for log messages. The web server can use the capability of\n  an operating system or purpose-built module for this purpose.\n\n    Time stamps generated by the web server shall include both date and time.\n  The time may be expressed in Coordinated Universal Time (UTC), a modern\n  continuation of Greenwich Mean Time (GMT), or local time with an offset from\n  UTC.",
        "check": "Review the NGINX web server documentation and deployment\n  configuration to determine if the internal system clock is used for date and\n  time stamps. If this is not feasible, an alternative workaround is to take an\n  action that generates an entry in the log and then immediately query the operating system\n  for the current time. A reasonable match between the two times will suffice as\n  evidence that the system is using the internal clock for date and time stamps.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n  Check for the following:\n      # grep for a 'log_format' directive in the http context of the nginx.conf.\n\n  If the 'log_format' directive is not configured to contain the '$time_local'\n  variable, this is a finding.",
        "fix": "Configure the 'log_format' directive in the nginx.conf to use the '$time_local'\nvariable to use internal system clocks to generate date and time stamps for\nlog records."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000116-WSR-000066",
        "gid": "V-41668",
        "rid": "SV-54245r3_rule",
        "stig_id": "SRG-APP-000116-WSR-000066",
        "fix_id": "F-47127r2_fix",
        "cci": [
          "CCI-000159"
        ],
        "nist": [
          "AU-8 a",
          ""
        ]
      },
      "code": "control 'V-41668' do\n  title \"The NGINX web server must use the internal system clock to generate time\n  stamps for log records.\"\n  desc \"Without an internal clock used as the reference for the time stored on\n  each event to provide a trusted common reference for the time, forensic\n  analysis would be impeded. Determining the correct time a particular event\n  occurred on the web server is critical when conducting forensic analysis and\n  investigating system events.\n\n    If the internal clock is not used, the web server may not be able to\n  provide time stamps for log messages. The web server can use the capability of\n  an operating system or purpose-built module for this purpose.\n\n    Time stamps generated by the web server shall include both date and time.\n  The time may be expressed in Coordinated Universal Time (UTC), a modern\n  continuation of Greenwich Mean Time (GMT), or local time with an offset from\n  UTC.\n  \"\n  desc 'check', \"Review the NGINX web server documentation and deployment\n  configuration to determine if the internal system clock is used for date and\n  time stamps. If this is not feasible, an alternative workaround is to take an\n  action that generates an entry in the log and then immediately query the operating system\n  for the current time. A reasonable match between the two times will suffice as\n  evidence that the system is using the internal clock for date and time stamps.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n  Check for the following:\n      # grep for a 'log_format' directive in the http context of the nginx.conf.\n\n  If the 'log_format' directive is not configured to contain the '$time_local'\n  variable, this is a finding.\n  \"\n  desc 'fix', \"\n  Configure the 'log_format' directive in the nginx.conf to use the '$time_local'\n  variable to use internal system clocks to generate date and time stamps for\n  log records.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000116-WSR-000066'\n  tag \"gid\": 'V-41668'\n  tag \"rid\": 'SV-54245r3_rule'\n  tag \"stig_id\": 'SRG-APP-000116-WSR-000066'\n  tag \"fix_id\": 'F-47127r2_fix'\n  tag \"cci\": ['CCI-000159']\n  tag \"nist\": ['AU-8 a', '']\n\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      http['log_format'].each do |log_format|\n        describe 'time_local' do\n          it 'should be part of every log format in http.' do\n            expect(log_format.to_s).to(match(/.*?\\$time_local.*?/))\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41668.rb",
        "line": 1
      },
      "id": "V-41668"
    },
    {
      "title": "The log data and records from the NGINX web server must be backed up onto a\n  different system or media.",
      "desc": "Protection of log data includes assuring log data is not accidentally\n  lost or deleted. Backing up log records to an unrelated system or onto separate\n  media than the system the web server is actually running on helps to assure\n  that, in the event of a catastrophic system failure, the log records will be\n  retained.",
      "descriptions": {
        "default": "Protection of log data includes assuring log data is not accidentally\n  lost or deleted. Backing up log records to an unrelated system or onto separate\n  media than the system the web server is actually running on helps to assure\n  that, in the event of a catastrophic system failure, the log records will be\n  retained.",
        "check": "Review the NGINX web server documentation and deployed configuration to determine\nif the web server log records are backed up onto an unrelated system or media\nthan the system being logged.\n\nInterview the Information System Security Officer, System Administrator, Web Manager,\nWebmaster, or developers as necessary to determine whether a tested and verifiable\nbackup strategy has been implemented for web server software and all web server\ndata files.\n\nProposed questions:\n- Who maintains the backup and recovery procedures?\n- Do you have a copy of the backup and recovery procedures?\n- Where is the off-site backup location?\n- Is the contingency plan documented?\n- When was the last time the contingency plan was tested?\n- Are the test dates and results documented?\n\nIf there is not a backup and recovery process for the web server, this is a finding.",
        "fix": "Document the NGINX web server backup procedures."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000125-WSR-000071",
        "gid": "V-41674",
        "rid": "SV-54251r3_rule",
        "stig_id": "SRG-APP-000125-WSR-000071",
        "fix_id": "F-47133r3_fix",
        "cci": [
          "CCI-001348"
        ],
        "nist": [
          "AU-9 (2)",
          ""
        ]
      },
      "code": "control 'V-41674' do\n  title \"The log data and records from the NGINX web server must be backed up onto a\n  different system or media.\"\n  desc \"Protection of log data includes assuring log data is not accidentally\n  lost or deleted. Backing up log records to an unrelated system or onto separate\n  media than the system the web server is actually running on helps to assure\n  that, in the event of a catastrophic system failure, the log records will be\n  retained.\"\n\n  desc 'check', \"\n  Review the NGINX web server documentation and deployed configuration to determine\n  if the web server log records are backed up onto an unrelated system or media\n  than the system being logged.\n\n  Interview the Information System Security Officer, System Administrator, Web Manager,\n  Webmaster, or developers as necessary to determine whether a tested and verifiable\n  backup strategy has been implemented for web server software and all web server\n  data files.\n\n  Proposed questions:\n  - Who maintains the backup and recovery procedures?\n  - Do you have a copy of the backup and recovery procedures?\n  - Where is the off-site backup location?\n  - Is the contingency plan documented?\n  - When was the last time the contingency plan was tested?\n  - Are the test dates and results documented?\n\n  If there is not a backup and recovery process for the web server, this is a finding.\n  \"\n  desc 'fix', 'Document the NGINX web server backup procedures.'\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000125-WSR-000071'\n  tag \"gid\": 'V-41674'\n  tag \"rid\": 'SV-54251r3_rule'\n  tag \"stig_id\": 'SRG-APP-000125-WSR-000071'\n  tag \"fix_id\": 'F-47133r3_fix'\n  tag \"cci\": ['CCI-001348']\n  tag \"nist\": ['AU-9 (2)', '']\n\n  describe \"This test requires a Manual Review: Interview the ISSO, SA, WM, Webmaster, or developers to\n  determine whether a tested and verifiable backup strategy has been implemented for web server software\n  and all web server data files.\" do\n    skip \"This test requires a Manual Review: Interview the ISSO,SA, WM, Webmaster, or developers to\n    determine whether a tested and verifiable backup strategy has been implemented for web server software\n    and all web server data files.\"\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41674.rb",
        "line": 1
      },
      "id": "V-41674"
    },
    {
      "title": "The NGINX web server must use cryptographic modules that meet the\n  requirements of applicable federal laws, Executive Orders, directives,\n  policies, regulations, standards, and guidance for such authentication.",
      "desc": "Encryption is only as good as the encryption modules utilized.\n  Unapproved cryptographic module algorithms cannot be verified and cannot be\n  relied upon to provide confidentiality or integrity, and DoD data may be\n  compromised due to weak algorithms.\n\n    FIPS 140-2 is the current standard for validating cryptographic modules and\n  NSA Type-X (where X=1, 2, 3, 4) products are NSA-certified, hardware-based\n  encryption modules.\n\n    The web server must provide FIPS-compliant encryption modules when\n  authenticating users and processes.",
      "descriptions": {
        "default": "Encryption is only as good as the encryption modules utilized.\n  Unapproved cryptographic module algorithms cannot be verified and cannot be\n  relied upon to provide confidentiality or integrity, and DoD data may be\n  compromised due to weak algorithms.\n\n    FIPS 140-2 is the current standard for validating cryptographic modules and\n  NSA Type-X (where X=1, 2, 3, 4) products are NSA-certified, hardware-based\n  encryption modules.\n\n    The web server must provide FIPS-compliant encryption modules when\n  authenticating users and processes.",
        "check": "Review NGINX web server documentation and deployed configuration to determine\nwhether the encryption modules utilized for authentication are FIPS 140-2\ncompliant.  Reference the following NIST site to identify validated encryption\nmodules: http://csrc.nist.gov/groups/STM/cmvp/documents/140-1/140val-all.htm\n\nIf NGINX is not configured to serve files, this check is Not Applicable.\n\nCheck for the following:\n  #grep the 'ssl_protocols' directive in the server context of the nginx.conf\n  and any separated include configuration file.\n\nIf the 'ssl_protocols' directive cannot be found in NGINX configuration files,\nthis check is Not Applicable.\n\nIf the 'ssl_protocols' directive is not set to the FIPS comliant TLS versions,\nthis is a finding.",
        "fix": "Add the 'ssl_protocols' directive to the NGINX configuration file(s)\n  and configure it to use the FIPS compliant TLS protocols.\n  Example:\n  server {\n          ssl_protocols TLSv1.2;\n  }"
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000179-WSR-000111",
        "gid": "V-41746",
        "rid": "SV-54323r3_rule",
        "stig_id": "SRG-APP-000179-WSR-000111",
        "fix_id": "F-47205r2_fix",
        "cci": [
          "CCI-000803"
        ],
        "nist": [
          "IA-7"
        ]
      },
      "code": "control 'V-41746' do\n  title \"The NGINX web server must use cryptographic modules that meet the\n  requirements of applicable federal laws, Executive Orders, directives,\n  policies, regulations, standards, and guidance for such authentication.\"\n  desc \"Encryption is only as good as the encryption modules utilized.\n  Unapproved cryptographic module algorithms cannot be verified and cannot be\n  relied upon to provide confidentiality or integrity, and DoD data may be\n  compromised due to weak algorithms.\n\n    FIPS 140-2 is the current standard for validating cryptographic modules and\n  NSA Type-X (where X=1, 2, 3, 4) products are NSA-certified, hardware-based\n  encryption modules.\n\n    The web server must provide FIPS-compliant encryption modules when\n  authenticating users and processes.\n  \"\n\n  desc 'check', \"\n  Review NGINX web server documentation and deployed configuration to determine\n  whether the encryption modules utilized for authentication are FIPS 140-2\n  compliant.  Reference the following NIST site to identify validated encryption\n  modules: http://csrc.nist.gov/groups/STM/cmvp/documents/140-1/140val-all.htm\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n    #grep the 'ssl_protocols' directive in the server context of the nginx.conf\n    and any separated include configuration file.\n\n  If the 'ssl_protocols' directive cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  If the 'ssl_protocols' directive is not set to the FIPS comliant TLS versions,\n  this is a finding.\n  \"\n  desc 'fix', \"Add the 'ssl_protocols' directive to the NGINX configuration file(s)\n  and configure it to use the FIPS compliant TLS protocols.\n  Example:\n  server {\n          ssl_protocols TLSv1.2;\n  }\n  \"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000179-WSR-000111'\n  tag \"gid\": 'V-41746'\n  tag \"rid\": 'SV-54323r3_rule'\n  tag \"stig_id\": 'SRG-APP-000179-WSR-000111'\n  tag \"fix_id\": 'F-47205r2_fix'\n  tag \"cci\": ['CCI-000803']\n  tag \"nist\": %w(IA-7)\n\n  if nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.each do |server|\n      if server.params['ssl_protocols'].nil?\n        impact 0.0\n        describe 'This test is NA because the ssl_protocols directive has not been configured.' do\n          skip 'This test is NA because the ssl_protocols directive has not been configured.'\n        end\n      else\n        server.params['ssl_protocols'].each do |protocol|\n          describe 'Each protocol' do\n            it 'should be included in the list of protocols approved to encrypt data' do\n              expect(protocol).to(be_in(input('approved_ssl_protocols')))\n            end\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41746.rb",
        "line": 1
      },
      "id": "V-41746"
    },
    {
      "title": "The NGINX web server must generate, at a minimum, log records for system\n  startup and shutdown, system access, and system authentication events.",
      "desc": "Log records can be generated from various components within the web\n  server (e.g., httpd, plug-ins to external backends, etc.). From a web server\n  perspective, certain specific web server functionalities may be logged as well.\n  The web server must allow the definition of what events are to be logged. As\n  conditions change, the number and types of events to be logged may change, and\n  the web server must be able to facilitate these changes.\n\n    The minimum list of logged events should be those pertaining to system\n  startup and shutdown, system access, and system authentication events. If these\n  events are not logged at a minimum, any type of forensic investigation would be\n  missing pertinent information needed to replay what occurred.",
      "descriptions": {
        "default": "Log records can be generated from various components within the web\n  server (e.g., httpd, plug-ins to external backends, etc.). From a web server\n  perspective, certain specific web server functionalities may be logged as well.\n  The web server must allow the definition of what events are to be logged. As\n  conditions change, the number and types of events to be logged may change, and\n  the web server must be able to facilitate these changes.\n\n    The minimum list of logged events should be those pertaining to system\n  startup and shutdown, system access, and system authentication events. If these\n  events are not logged at a minimum, any type of forensic investigation would be\n  missing pertinent information needed to replay what occurred.",
        "check": "Review the NGINX web server documentation and the deployed system configuration to determine\nif, at a minimum, system startup and shutdown, system access, and system authentication events are logged.\n\nIf there are no websites configured for NGINX, this check is Not Applicable.\n\nCheck for the following:\n# grep the 'log_format' directive in the http context of the nginx.conf.\n\nThe logs will not include the minimum logable events if the 'log_format' directive does not exist.\n\nIf the the 'log_format' directive does not exist, this is a finding.\n\nExample configuration:\nlog_format  main  '$remote_addr - $remote_user [$time_local] $request'\n'$status $body_bytes_sent $http_referer'\n'$http_user_agent $http_x_forwarded_for';",
        "fix": "Configure the 'log_format' directive in the nginx.conf file to look like the following:\n\n  log_format  main  '$remote_addr - $remote_user [$time_local] $request'\n  '$status $body_bytes_sent $http_referer'\n  '$http_user_agent $http_x_forwarded_for';\n\n  NOTE: Your log format may be using different variables based on your environment,\n  however it should be verified to be producing the same end result of logged elements."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000089-WSR-000047",
        "gid": "V-41600",
        "rid": "SV-54177r3_rule",
        "stig_id": "SRG-APP-000089-WSR-000047",
        "fix_id": "F-47059r3_fix",
        "cci": [
          "CCI-000169"
        ],
        "nist": [
          "AU-12 a",
          ""
        ]
      },
      "code": "control 'V-41600' do\n  title \"The NGINX web server must generate, at a minimum, log records for system\n  startup and shutdown, system access, and system authentication events.\"\n  desc \"Log records can be generated from various components within the web\n  server (e.g., httpd, plug-ins to external backends, etc.). From a web server\n  perspective, certain specific web server functionalities may be logged as well.\n  The web server must allow the definition of what events are to be logged. As\n  conditions change, the number and types of events to be logged may change, and\n  the web server must be able to facilitate these changes.\n\n    The minimum list of logged events should be those pertaining to system\n  startup and shutdown, system access, and system authentication events. If these\n  events are not logged at a minimum, any type of forensic investigation would be\n  missing pertinent information needed to replay what occurred.\n  \"\n  desc 'check', \"\n  Review the NGINX web server documentation and the deployed system configuration to determine\n  if, at a minimum, system startup and shutdown, system access, and system authentication events are logged.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n  Check for the following:\n  # grep the 'log_format' directive in the http context of the nginx.conf.\n\n  The logs will not include the minimum logable events if the 'log_format' directive does not exist.\n\n  If the the 'log_format' directive does not exist, this is a finding.\n\n  Example configuration:\n  log_format  main  '$remote_addr - $remote_user [$time_local] \"'$request'\"'\n  '$status $body_bytes_sent \"'$http_referer'\"'\n  '\"'$http_user_agent'' ''$http_x_forwarded_for'\"';\n\n  \"\n  desc 'fix', \"Configure the 'log_format' directive in the nginx.conf file to look like the following:\n\n  log_format  main  '$remote_addr - $remote_user [$time_local] \"'$request'\"'\n  '$status $body_bytes_sent \"'$http_referer'\"'\n  '\"'$http_user_agent'' ''$http_x_forwarded_for'\"';\n\n  NOTE: Your log format may be using different variables based on your environment,\n  however it should be verified to be producing the same end result of logged elements.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000089-WSR-000047'\n  tag \"gid\": 'V-41600'\n  tag \"rid\": 'SV-54177r3_rule'\n  tag \"stig_id\": 'SRG-APP-000089-WSR-000047'\n  tag \"fix_id\": 'F-47059r3_fix'\n  tag \"cci\": ['CCI-000169']\n  tag \"nist\": ['AU-12 a', '']\n\n  # Verify that the log_format directive exists\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      describe 'Each http context' do\n        it 'should include a log_format directive for logging minimum logable events.' do\n          expect(http).to(include 'log_format')\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41600.rb",
        "line": 1
      },
      "id": "V-41600"
    },
    {
      "title": "The NGINX web server must have resource mappings set to disable the serving\n  of certain file types.",
      "desc": "Resource mapping is the process of tying a particular file type to a\n  process in the web server that can serve that type of file to a requesting\n  client and to identify which file types are not to be delivered to a client.\n\n    By not specifying which files can and which files cannot be served to a\n  user, the web server could deliver to a user web server configuration files,\n  log files, password files, etc.\n\n    The web server must only allow hosted application file types to be served\n  to a user and all other types must be disabled.",
      "descriptions": {
        "default": "Resource mapping is the process of tying a particular file type to a\n  process in the web server that can serve that type of file to a requesting\n  client and to identify which file types are not to be delivered to a client.\n\n    By not specifying which files can and which files cannot be served to a\n  user, the web server could deliver to a user web server configuration files,\n  log files, password files, etc.\n\n    The web server must only allow hosted application file types to be served\n  to a user and all other types must be disabled.",
        "check": "Review the web server documentation and deployment configuration to\n  determine what types of files are being used for the hosted applications.\n\n  Enter the following command to find the mime.types file:\n    # find / mime.types\n\n  Review the 'mime.types' file.\n\n  If there are any MIME types enabled for .exe, .dll, .com, .bat, and\n  .csh programs, this is a finding.",
        "fix": "Configure the web server to disable all MIME types that invoke\n  OS shell programs. Edit the 'mime.types' file and disable MIME types for .exe,\n  .dll, .com, .bat, and .csh programs."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000141-WSR-000083",
        "gid": "V-41701",
        "rid": "SV-54278r3_rule",
        "stig_id": "SRG-APP-000141-WSR-000083",
        "fix_id": "F-47160r2_fix",
        "cci": [
          "CCI-000381"
        ],
        "nist": [
          "CM-7 a",
          ""
        ]
      },
      "code": "control 'V-41701' do\n  title \"The NGINX web server must have resource mappings set to disable the serving\n  of certain file types.\"\n  desc \"Resource mapping is the process of tying a particular file type to a\n  process in the web server that can serve that type of file to a requesting\n  client and to identify which file types are not to be delivered to a client.\n\n    By not specifying which files can and which files cannot be served to a\n  user, the web server could deliver to a user web server configuration files,\n  log files, password files, etc.\n\n    The web server must only allow hosted application file types to be served\n  to a user and all other types must be disabled.\n  \"\n\n  desc 'check', \"Review the web server documentation and deployment configuration to\n  determine what types of files are being used for the hosted applications.\n\n  Enter the following command to find the mime.types file:\n    # find / mime.types\n\n  Review the 'mime.types' file.\n\n  If there are any MIME types enabled for .exe, .dll, .com, .bat, and\n  .csh programs, this is a finding.\n\n  \"\n  desc 'fix', \"Configure the web server to disable all MIME types that invoke\n  OS shell programs. Edit the 'mime.types' file and disable MIME types for .exe,\n  .dll, .com, .bat, and .csh programs.\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000141-WSR-000083'\n  tag \"gid\": 'V-41701'\n  tag \"rid\": 'SV-54278r3_rule'\n  tag \"stig_id\": 'SRG-APP-000141-WSR-000083'\n  tag \"fix_id\": 'F-47160r2_fix'\n  tag \"cci\": ['CCI-000381']\n  tag \"nist\": ['CM-7 a', '']\n\n  # Checks for enabled mime types against the disallowed list\n  if input('nginx_disallowed_mime_type').empty?\n    describe 'This check is skipped because the disallowed mime list should not be empty.' do\n      skip 'This check is skipped because the disallowed mime list should not be empty.'\n    end\n  else\n    input('nginx_disallowed_mime_type').each do |mime_type|\n      describe \"The MIME type: #{mime_type}\" do\n        it 'should not be enabled in the configuration' do\n          expect(command(\"grep -w #{mime_type} \" + input('mime_type_path')).stdout).to(eq '')\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41701.rb",
        "line": 1
      },
      "id": "V-41701"
    },
    {
      "title": "The NGINX web server must produce log records containing sufficient\n  information to establish where within the web server the events occurred.",
      "desc": "Web server logging capability is critical for accurate forensic\n  analysis. Without sufficient and accurate information, a correct replay of the\n  events cannot be determined.\n\n    Ascertaining the correct location or process within the web server where\n  the events occurred is important during forensic analysis. Correctly\n  determining the web service, plug-in, or module will add information to the\n  overall reconstruction of the logged event. For example, an event that occurred\n  during communication to a cgi module might be handled differently than an event\n  that occurred during a communication session to a user.\n\n    Without sufficient information establishing where the log event occurred\n  within the web server, investigation into the cause of event is severely\n  hindered. Log record content that may be necessary to satisfy the requirement\n  of this control includes, but is not limited to, time stamps, source and\n  destination IP addresses, user/process identifiers, event descriptions,\n  application-specific events, success/fail indications, file names involved,\n  access control, or flow control rules invoked.",
      "descriptions": {
        "default": "Web server logging capability is critical for accurate forensic\n  analysis. Without sufficient and accurate information, a correct replay of the\n  events cannot be determined.\n\n    Ascertaining the correct location or process within the web server where\n  the events occurred is important during forensic analysis. Correctly\n  determining the web service, plug-in, or module will add information to the\n  overall reconstruction of the logged event. For example, an event that occurred\n  during communication to a cgi module might be handled differently than an event\n  that occurred during a communication session to a user.\n\n    Without sufficient information establishing where the log event occurred\n  within the web server, investigation into the cause of event is severely\n  hindered. Log record content that may be necessary to satisfy the requirement\n  of this control includes, but is not limited to, time stamps, source and\n  destination IP addresses, user/process identifiers, event descriptions,\n  application-specific events, success/fail indications, file names involved,\n  access control, or flow control rules invoked.",
        "check": "Review the NGINX web server documentation and deployment configuration\n  to determine if the web server is configured to generate sufficient information to resolve\n  in which process within the web server the log event occurred.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n  Check for the following:\n    # grep the 'log_format' directive in the http context of the nginx.conf.\n\n  The logs will not include sufficient information if the 'log_format' directive does not exist.\n\n  If the the 'log_format' directive does not exist, this is a finding.\n\n  Example configuration:\n  log_format  main  '$remote_addr - $remote_user [$time_local] $request'\n  '$status $body_bytes_sent $http_referer'\n  '$http_user_agent $http_x_forwarded_for';",
        "fix": "Configure the 'log_format' directive in the nginx.conf file to look like the following:\n\nlog_format  main  '$remote_addr - $remote_user [$time_local] $request'\n'$status $body_bytes_sent $http_referer'\n'$http_user_agent $http_x_forwarded_for';\n\nNOTE: Your log format may be using different variables based on the determination of what\ninformation is sufficient in order to establish where the event occured."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000097-WSR-000058",
        "gid": "V-41614",
        "rid": "SV-54191r3_rule",
        "stig_id": "SRG-APP-000097-WSR-000058",
        "fix_id": "F-47073r2_fix",
        "cci": [
          "CCI-000132"
        ],
        "nist": [
          "AU-3"
        ]
      },
      "code": "control 'V-41614' do\n  title \"The NGINX web server must produce log records containing sufficient\n  information to establish where within the web server the events occurred.\"\n  desc \"Web server logging capability is critical for accurate forensic\n  analysis. Without sufficient and accurate information, a correct replay of the\n  events cannot be determined.\n\n    Ascertaining the correct location or process within the web server where\n  the events occurred is important during forensic analysis. Correctly\n  determining the web service, plug-in, or module will add information to the\n  overall reconstruction of the logged event. For example, an event that occurred\n  during communication to a cgi module might be handled differently than an event\n  that occurred during a communication session to a user.\n\n    Without sufficient information establishing where the log event occurred\n  within the web server, investigation into the cause of event is severely\n  hindered. Log record content that may be necessary to satisfy the requirement\n  of this control includes, but is not limited to, time stamps, source and\n  destination IP addresses, user/process identifiers, event descriptions,\n  application-specific events, success/fail indications, file names involved,\n  access control, or flow control rules invoked.\n  \"\n  desc 'check', \"Review the NGINX web server documentation and deployment configuration\n  to determine if the web server is configured to generate sufficient information to resolve\n  in which process within the web server the log event occurred.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n  Check for the following:\n    # grep the 'log_format' directive in the http context of the nginx.conf.\n\n  The logs will not include sufficient information if the 'log_format' directive does not exist.\n\n  If the the 'log_format' directive does not exist, this is a finding.\n\n  Example configuration:\n  log_format  main  '$remote_addr - $remote_user [$time_local] \"'$request'\"'\n  '$status $body_bytes_sent \"'$http_referer'\"'\n  '\"'$http_user_agent'' ''$http_x_forwarded_for'\"';\n  \"\n  desc 'fix', \"\n  Configure the 'log_format' directive in the nginx.conf file to look like the following:\n\n  log_format  main  '$remote_addr - $remote_user [$time_local] \"'$request'\"'\n  '$status $body_bytes_sent \"'$http_referer'\"'\n  '\"'$http_user_agent'' ''$http_x_forwarded_for'\"';\n\n  NOTE: Your log format may be using different variables based on the determination of what\n  information is sufficient in order to establish where the event occured.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000097-WSR-000058'\n  tag \"gid\": 'V-41614'\n  tag \"rid\": 'SV-54191r3_rule'\n  tag \"stig_id\": 'SRG-APP-000097-WSR-000058'\n  tag \"fix_id\": 'F-47073r2_fix'\n  tag \"cci\": ['CCI-000132']\n  tag \"nist\": %w(AU-3)\n\n  # Verify that the log_format directive exists\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      describe 'Each http context' do\n        it 'should include a log_format directive for logging sufficient information.' do\n          expect(http).to(include 'log_format')\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41614.rb",
        "line": 1
      },
      "id": "V-41614"
    },
    {
      "title": "The NGINX web server must record time stamps for log records to a minimum\ngranularity of one second.",
      "desc": "Without sufficient granularity of time stamps, it is not possible to\nadequately determine the chronological order of records.\n\n    Time stamps generated by the web server include date and time and must be\nto a granularity of one second.",
      "descriptions": {
        "default": "Without sufficient granularity of time stamps, it is not possible to\nadequately determine the chronological order of records.\n\n    Time stamps generated by the web server include date and time and must be\nto a granularity of one second.",
        "check": "Review the NGINX web server documentation and configuration to\n  determine if log records are time stamped to a minimum granularity of one second.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n  Check for the following:\n      # grep for a 'log_format' directive in the http context of the nginx.conf.\n\n  If the 'log_format' directive is not configured to contain the '$time_local'\n  variable, this is a finding.",
        "fix": "Configure the 'log_format' directive in the nginx.conf to use the\n  '$time_local' variable to record log events with a time stamp to a granularity\n  of one second."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000375-WSR-000171",
        "gid": "V-55977",
        "rid": "SV-70231r2_rule",
        "stig_id": "SRG-APP-000375-WSR-000171",
        "fix_id": "F-60855r1_fix",
        "cci": [
          "CCI-001889"
        ],
        "nist": [
          "AU-8 b",
          ""
        ]
      },
      "code": "control 'V-55977' do\n  title \"The NGINX web server must record time stamps for log records to a minimum\ngranularity of one second.\"\n  desc  \"Without sufficient granularity of time stamps, it is not possible to\nadequately determine the chronological order of records.\n\n    Time stamps generated by the web server include date and time and must be\nto a granularity of one second.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and configuration to\n  determine if log records are time stamped to a minimum granularity of one second.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n  Check for the following:\n      # grep for a 'log_format' directive in the http context of the nginx.conf.\n\n  If the 'log_format' directive is not configured to contain the '$time_local'\n  variable, this is a finding.\n  \"\n  desc 'fix', \"Configure the 'log_format' directive in the nginx.conf to use the\n  '$time_local' variable to record log events with a time stamp to a granularity\n  of one second.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000375-WSR-000171'\n  tag \"gid\": 'V-55977'\n  tag \"rid\": 'SV-70231r2_rule'\n  tag \"stig_id\": 'SRG-APP-000375-WSR-000171'\n  tag \"fix_id\": 'F-60855r1_fix'\n  tag \"cci\": ['CCI-001889']\n  tag \"nist\": ['AU-8 b', '']\n\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      http['log_format'].each do |log_format|\n        describe 'time_local' do\n          it 'should be part of every log format in the http context.' do\n            expect(log_format.to_s).to(match(/.*?\\$time_local.*?/))\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55977.rb",
        "line": 1
      },
      "id": "V-55977"
    },
    {
      "title": "Debugging and trace information used to diagnose the NGINX web server must\nbe disabled.",
      "desc": "Information needed by an attacker to begin looking for possible\nvulnerabilities in a web server includes any information about the web server\nand plug-ins or modules being used. When debugging or trace information is\nenabled in a production web server, information about the web server, such as\nweb server type, version, patches installed, plug-ins and modules installed,\ntype of code being used by the hosted application, and any backends being used\nfor data storage may be displayed. Since this information may be placed in logs\nand general messages during normal operation of the web server, an attacker\ndoes not need to cause an error condition to gain this information.",
      "descriptions": {
        "default": "Information needed by an attacker to begin looking for possible\nvulnerabilities in a web server includes any information about the web server\nand plug-ins or modules being used. When debugging or trace information is\nenabled in a production web server, information about the web server, such as\nweb server type, version, patches installed, plug-ins and modules installed,\ntype of code being used by the hosted application, and any backends being used\nfor data storage may be displayed. Since this information may be placed in logs\nand general messages during normal operation of the web server, an attacker\ndoes not need to cause an error condition to gain this information.",
        "check": "Review the NGINX web server documentation and deployed configuration to determine\nif debugging and trace information are enabled.\n\nCheck for the following:\n# grep the 'error_log' directive the nginx.conf\n\nIf the 'error_log' directive cannot be found in NGINX configuration files,\nthis check is Not Applicable.\n\nIf the 'error_log' directive is set to error log level 'debug', this is a finding.",
        "fix": "The 'error_log' directive should not have the error log level set to\n  'debug' to minimize the information given to clients on error conditions."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000266-WSR-000160",
        "gid": "V-41855",
        "rid": "SV-54432r3_rule",
        "stig_id": "SRG-APP-000266-WSR-000160",
        "fix_id": "F-47314r2_fix",
        "cci": [
          "CCI-001312"
        ],
        "nist": [
          "SI-11 a",
          ""
        ]
      },
      "code": "control 'V-41855' do\n  title \"Debugging and trace information used to diagnose the NGINX web server must\nbe disabled.\"\n  desc  \"Information needed by an attacker to begin looking for possible\nvulnerabilities in a web server includes any information about the web server\nand plug-ins or modules being used. When debugging or trace information is\nenabled in a production web server, information about the web server, such as\nweb server type, version, patches installed, plug-ins and modules installed,\ntype of code being used by the hosted application, and any backends being used\nfor data storage may be displayed. Since this information may be placed in logs\nand general messages during normal operation of the web server, an attacker\ndoes not need to cause an error condition to gain this information.\"\n\n  desc  'check', \"\n  Review the NGINX web server documentation and deployed configuration to determine\n  if debugging and trace information are enabled.\n\n  Check for the following:\n  # grep the 'error_log' directive the nginx.conf\n\n  If the 'error_log' directive cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  If the 'error_log' directive is set to error log level 'debug', this is a finding.\n  \"\n  desc 'fix', \"The 'error_log' directive should not have the error log level set to\n  'debug' to minimize the information given to clients on error conditions.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000266-WSR-000160'\n  tag \"gid\": 'V-41855'\n  tag \"rid\": 'SV-54432r3_rule'\n  tag \"stig_id\": 'SRG-APP-000266-WSR-000160'\n  tag \"fix_id\": 'F-47314r2_fix'\n  tag \"cci\": ['CCI-001312']\n  tag \"nist\": ['SI-11 a', '']\n\n  if nginx_conf.params['error_log'].nil?\n    impact 0.0\n    describe 'This check is NA because the error_log directive is not configured.' do\n      skip 'This check is NA because the error_log directive is not configured.'\n    end\n  else\n    nginx_conf.params['error_log'].each do |error_log|\n      error_log.each do |error_value|\n        describe 'The error log level' do\n          it 'should not be set to debug.' do\n            expect(error_value).not_to(eq 'debug')\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41855.rb",
        "line": 1
      },
      "id": "V-41855"
    },
    {
      "title": "All NGINX web server files must be verified for their integrity (e.g.,\nchecksums and hashes) before becoming part of the production web server.",
      "desc": "Being able to verify that a patch, upgrade, certificate, etc., being\nadded to the web server is unchanged from the producer of the file is essential\nfor file validation and non-repudiation of the information.\n\n    The web server or hosting system must have a mechanism to verify that\nfiles, before installation, are valid.\n\n    Examples of validation methods are sha1 and md5 hashes and checksums.",
      "descriptions": {
        "default": "Being able to verify that a patch, upgrade, certificate, etc., being\nadded to the web server is unchanged from the producer of the file is essential\nfor file validation and non-repudiation of the information.\n\n    The web server or hosting system must have a mechanism to verify that\nfiles, before installation, are valid.\n\n    Examples of validation methods are sha1 and md5 hashes and checksums.",
        "check": "Review the NGINX web server documentation and deployment\n  configuration to determine if the web server validates files before the\n  files are implemented into the running configuration.\n\n  If the NGINX web server does not meet this requirement and an external facility\n  is not available for use, this is a finding.",
        "fix": "Configure the web server to verify object integrity before\n  becoming part of the production web server or utilize an external tool designed\n  to meet this requirement."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000131-WSR-000051",
        "gid": "V-55983",
        "rid": "SV-70237r2_rule",
        "stig_id": "SRG-APP-000131-WSR-000051",
        "fix_id": "F-60861r1_fix",
        "cci": [
          "CCI-001749"
        ],
        "nist": [
          "CM-5 (3)",
          ""
        ]
      },
      "code": "control 'V-55983' do\n  title \"All NGINX web server files must be verified for their integrity (e.g.,\nchecksums and hashes) before becoming part of the production web server.\"\n  desc  \"Being able to verify that a patch, upgrade, certificate, etc., being\nadded to the web server is unchanged from the producer of the file is essential\nfor file validation and non-repudiation of the information.\n\n    The web server or hosting system must have a mechanism to verify that\nfiles, before installation, are valid.\n\n    Examples of validation methods are sha1 and md5 hashes and checksums.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and deployment\n  configuration to determine if the web server validates files before the\n  files are implemented into the running configuration.\n\n  If the NGINX web server does not meet this requirement and an external facility\n  is not available for use, this is a finding.\n  \"\n  desc 'fix', \"Configure the web server to verify object integrity before\n  becoming part of the production web server or utilize an external tool designed\n  to meet this requirement.\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000131-WSR-000051'\n  tag \"gid\": 'V-55983'\n  tag \"rid\": 'SV-70237r2_rule'\n  tag \"stig_id\": 'SRG-APP-000131-WSR-000051'\n  tag \"fix_id\": 'F-60861r1_fix'\n  tag \"cci\": ['CCI-001749']\n  tag \"nist\": ['CM-5 (3)', '']\n\n  describe \"This test requires a Manual Review: Determine if the web server or external\n  facility validates files before the files are implemented into the running configuration.\" do\n    skip \"This test requires a Manual Review: Determine if the web server or external\n    facility validates files before the files are implemented into the running configuration.\"\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55983.rb",
        "line": 1
      },
      "id": "V-55983"
    },
    {
      "title": "The NGINX web server must generate information to be used by external\n  applications or entities to monitor and control remote access.",
      "desc": "Remote access to the web server is any access that communicates\n  through an external, non-organization-controlled network. Remote access can be\n  used to access hosted applications or to perform management functions.\n\n    By providing remote access information to an external monitoring system,\n  the organization can monitor for cyber attacks and monitor compliance with\n  remote access policies. The organization can also look at data organization\n  wide and determine an attack or anomaly is occurring on the organization which\n  might not be noticed if the data were kept local to the web server.\n\n    Examples of external applications used to monitor or control access would\n  be audit log monitoring systems, dynamic firewalls, or infrastructure\n  monitoring systems.",
      "descriptions": {
        "default": "Remote access to the web server is any access that communicates\n  through an external, non-organization-controlled network. Remote access can be\n  used to access hosted applications or to perform management functions.\n\n    By providing remote access information to an external monitoring system,\n  the organization can monitor for cyber attacks and monitor compliance with\n  remote access policies. The organization can also look at data organization\n  wide and determine an attack or anomaly is occurring on the organization which\n  might not be noticed if the data were kept local to the web server.\n\n    Examples of external applications used to monitor or control access would\n  be audit log monitoring systems, dynamic firewalls, or infrastructure\n  monitoring systems.",
        "check": "Review the NGINX web server documentation and configuration to\n  determine if the web server is configured to generate information for external\n  applications monitoring remote access.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  Check for the following:\n   # grep for 'access_log' and 'error_log' directives in the nginx.conf and any\n   separated include configuration file.\n\n  Execute the following commands:\n   # file <path to access_log>/access.log\n   # file <path to error_log>/error.log\n\n  If the 'access_log' and 'error_log' directives cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  If the access.log and error.log files do not exist, this is a finding.\n\n  Verify the following only if in Docker environment -\n\n    Execute the following commands to verify that the NGINX web server is producing logs\n    and linking them to stdout and stderr:\n\n      # readlink <access_log_path>/access.log\n      # readlink <error_log_path>/error.log\n\n    If the access.log and error.log files are not linked to stdout and stderr,\n    this is a finding.",
        "fix": "Enable loggin on the NGINX web server by configuring the 'access_log'\n  and 'error_log' directives in the NGINX configuration file(s).\n\n  Execute the following command on the NGINX web server to link logs to stdout and stderr:\n  # ln -sf /dev/stdout <access_log_path>/access.log\n  # ln -sf /dev/stderr <error_log_path>/error.log"
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000016-WSR-000005",
        "gid": "V-40799",
        "rid": "SV-53035r3_rule",
        "stig_id": "SRG-APP-000016-WSR-000005",
        "fix_id": "F-45961r2_fix",
        "cci": [
          "CCI-000067"
        ],
        "nist": [
          "AC-17 (1)",
          ""
        ]
      },
      "code": "control 'V-40799' do\n  title \"The NGINX web server must generate information to be used by external\n  applications or entities to monitor and control remote access.\"\n  desc \"Remote access to the web server is any access that communicates\n  through an external, non-organization-controlled network. Remote access can be\n  used to access hosted applications or to perform management functions.\n\n    By providing remote access information to an external monitoring system,\n  the organization can monitor for cyber attacks and monitor compliance with\n  remote access policies. The organization can also look at data organization\n  wide and determine an attack or anomaly is occurring on the organization which\n  might not be noticed if the data were kept local to the web server.\n\n    Examples of external applications used to monitor or control access would\n  be audit log monitoring systems, dynamic firewalls, or infrastructure\n  monitoring systems.\n  \"\n  desc 'check', \"Review the NGINX web server documentation and configuration to\n  determine if the web server is configured to generate information for external\n  applications monitoring remote access.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  Check for the following:\n   # grep for 'access_log' and 'error_log' directives in the nginx.conf and any\n   separated include configuration file.\n\n  Execute the following commands:\n   # file <path to access_log>/access.log\n   # file <path to error_log>/error.log\n\n  If the 'access_log' and 'error_log' directives cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  If the access.log and error.log files do not exist, this is a finding.\n\n  Verify the following only if in Docker environment -\n\n    Execute the following commands to verify that the NGINX web server is producing logs\n    and linking them to stdout and stderr:\n\n      # readlink <access_log_path>/access.log\n      # readlink <error_log_path>/error.log\n\n    If the access.log and error.log files are not linked to stdout and stderr,\n    this is a finding.\n  \"\n  desc 'fix', \"Enable loggin on the NGINX web server by configuring the 'access_log'\n  and 'error_log' directives in the NGINX configuration file(s).\n\n  Execute the following command on the NGINX web server to link logs to stdout and stderr:\n  # ln -sf /dev/stdout <access_log_path>/access.log\n  # ln -sf /dev/stderr <error_log_path>/error.log\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000016-WSR-000005'\n  tag \"gid\": 'V-40799'\n  tag \"rid\": 'SV-53035r3_rule'\n  tag \"stig_id\": 'SRG-APP-000016-WSR-000005'\n  tag \"fix_id\": 'F-45961r2_fix'\n  tag \"cci\": ['CCI-000067']\n  tag \"nist\": ['AC-17 (1)', '']\n\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      if http['access_log'].nil?\n        impact 0.0\n        describe 'This test is NA because the access_log directive has not been configured.' do\n          skip 'This test is NA because access_log directive has not been configured.'\n        end\n      else\n        http['access_log'].each do |access_log|\n          access_log.each do |access_value|\n            next unless access_value.include? 'access.log'\n\n            describe file(access_value) do\n              it 'The access log should exist.' do\n                expect(subject).to(exist)\n              end\n            end\n          end\n        end\n      end\n    end\n\n    if nginx_conf.params['error_log'].nil?\n      impact 0.0\n      describe 'This test is NA because the error_log directive has not been configured.' do\n        skip 'This test is NA because error_log directive has not been configured.'\n      end\n    else\n      nginx_conf.params['error_log'].each do |error_log|\n        error_log.each do |error_value|\n          next unless error_value.include? 'error.log'\n\n          describe file(error_value) do\n            it 'The error log should exist.' do\n              expect(subject).to(exist)\n            end\n          end\n        end\n      end\n    end\n    # Logs are symlinks in docker container\n    if virtualization.system == 'docker'\n      describe command('readlink ' + input('access_log_path')) do\n        its('stdout') { should eq \"/dev/stdout\\n\" }\n      end\n      describe command('readlink ' + input('error_log_path')) do\n        its('stdout') { should eq \"/dev/stderr\\n\" }\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-40799.rb",
        "line": 1
      },
      "id": "V-40799"
    },
    {
      "title": "The NGINX web server must use a logging mechanism that is configured to\nallocate log record storage capacity large enough to accommodate the logging\nrequirements of the web server.",
      "desc": "In order to make certain that the logging mechanism used by the web\nserver has sufficient storage capacity in which to write the logs, the logging\nmechanism needs to be able to allocate log record storage capacity.\n\n    The task of allocating log record storage capacity is usually performed\nduring initial installation of the logging mechanism. The system administrator\nwill usually coordinate the allocation of physical drive space with the web\nserver administrator along with the physical location of the partition and\ndisk. Refer to NIST SP 800-92 for specific requirements on log rotation and\nstorage dependent on the impact of the web server.",
      "descriptions": {
        "default": "In order to make certain that the logging mechanism used by the web\nserver has sufficient storage capacity in which to write the logs, the logging\nmechanism needs to be able to allocate log record storage capacity.\n\n    The task of allocating log record storage capacity is usually performed\nduring initial installation of the logging mechanism. The system administrator\nwill usually coordinate the allocation of physical drive space with the web\nserver administrator along with the physical location of the partition and\ndisk. Refer to NIST SP 800-92 for specific requirements on log rotation and\nstorage dependent on the impact of the web server.",
        "check": "Review the NGINX web server documentation and deployment configuration to\n  determine if the web server is using a logging mechanism to store log records.\n  If a logging mechanism is in use, validate that the mechanism is configured to\n  use record storage capacity in accordance with specifications within NIST SP\n  800-92 for log record storage requirements.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n\n  Check for the following:\n      # grep for 'access_log' and 'error_log' directives in the nginx.conf and\n      any separated include configuration file.\n\n  If the 'access_log' and 'error_log' directives cannot be found in NGINX configuration\n  files, this check is Not Applicable.\n\n  Execute the following commands:\n      # file <path to access_log>/access.log\n      # file <path to error_log>/error.log\n\n  If the access.log and error.log files do not exist, this is a finding.\n\n  Work with SIEM administrator to determine log storage capacity.\n  If there is no setting within a SIEM to accommodate enough a large logging\n  capacity, this is a finding.",
        "fix": "Enable logging on the NGINX web server by configuring the 'access_log'\n  and 'error_log' directives in the NGINX configuration file(s).\n\n  Work with the SIEM administrator to determine if the SIEM is configured to allocate\n  log record storage capacity large enough to accommodate the logging requirements of\n  the NGINX web server."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000357-WSR-000150",
        "gid": "V-55959",
        "rid": "SV-70213r2_rule",
        "stig_id": "SRG-APP-000357-WSR-000150",
        "fix_id": "F-60837r1_fix",
        "cci": [
          "CCI-001849"
        ],
        "nist": [
          "AU-4"
        ]
      },
      "code": "control 'V-55959' do\n  title \"The NGINX web server must use a logging mechanism that is configured to\nallocate log record storage capacity large enough to accommodate the logging\nrequirements of the web server.\"\n  desc  \"In order to make certain that the logging mechanism used by the web\nserver has sufficient storage capacity in which to write the logs, the logging\nmechanism needs to be able to allocate log record storage capacity.\n\n    The task of allocating log record storage capacity is usually performed\nduring initial installation of the logging mechanism. The system administrator\nwill usually coordinate the allocation of physical drive space with the web\nserver administrator along with the physical location of the partition and\ndisk. Refer to NIST SP 800-92 for specific requirements on log rotation and\nstorage dependent on the impact of the web server.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and deployment configuration to\n  determine if the web server is using a logging mechanism to store log records.\n  If a logging mechanism is in use, validate that the mechanism is configured to\n  use record storage capacity in accordance with specifications within NIST SP\n  800-92 for log record storage requirements.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n\n  Check for the following:\n      # grep for 'access_log' and 'error_log' directives in the nginx.conf and\n      any separated include configuration file.\n\n  If the 'access_log' and 'error_log' directives cannot be found in NGINX configuration\n  files, this check is Not Applicable.\n\n  Execute the following commands:\n      # file <path to access_log>/access.log\n      # file <path to error_log>/error.log\n\n  If the access.log and error.log files do not exist, this is a finding.\n\n  Work with SIEM administrator to determine log storage capacity.\n  If there is no setting within a SIEM to accommodate enough a large logging\n  capacity, this is a finding.\n  \"\n  desc 'fix', \"Enable logging on the NGINX web server by configuring the 'access_log'\n  and 'error_log' directives in the NGINX configuration file(s).\n\n  Work with the SIEM administrator to determine if the SIEM is configured to allocate\n  log record storage capacity large enough to accommodate the logging requirements of\n  the NGINX web server.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000357-WSR-000150'\n  tag \"gid\": 'V-55959'\n  tag \"rid\": 'SV-70213r2_rule'\n  tag \"stig_id\": 'SRG-APP-000357-WSR-000150'\n  tag \"fix_id\": 'F-60837r1_fix'\n  tag \"cci\": ['CCI-001849']\n  tag \"nist\": %w(AU-4)\n\n  # Verify that access_log and error_log is enabled\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      if http['access_log'].nil?\n        impact 0.0\n        describe 'This test is NA because the access_log directive has not been configured.' do\n          skip 'This test is NA because access_log directive has not been configured.'\n        end\n      else\n        http['access_log'].each do |access_log|\n          access_log.each do |access_value|\n            next unless access_value.include? 'access.log'\n\n            describe file(access_value) do\n              it 'The access log should exist.' do\n                expect(subject).to(exist)\n              end\n            end\n          end\n        end\n      end\n    end\n    if nginx_conf.params['error_log'].nil?\n      impact 0.0\n      describe 'This test is NA because the error_log directive has not been configured.' do\n        skip 'This test is NA because error_log directive has not been configured.'\n      end\n    else\n      nginx_conf.params['error_log'].each do |error_log|\n        error_log.each do |error_value|\n          next unless error_value.include? 'error.log'\n\n          describe file(error_value) do\n            it 'The error log should exist.' do\n              expect(subject).to(exist)\n            end\n          end\n        end\n      end\n    end\n    minimum_size = input('minimum_log_file_size')\n    describe \"This test requires a Manual Review: Work with SIEM administrator\n    to determine log storage capacity. The minimum capacity should equal\n    #{minimum_size}.\" do\n      skip \"This test requires a Manual Review: Work with SIEM administrator\n      to determine log storage capacity. The minimum capacity should equal\n      #{minimum_size}.\"\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55959.rb",
        "line": 1
      },
      "id": "V-55959"
    },
    {
      "title": "Web NGINX server log files must only be accessible by privileged users.",
      "desc": "Log data is essential in the investigation of events. If log data were\n  to become compromised, then competent forensic analysis and discovery of the\n  true source of potentially malicious system activity would be difficult, if not\n  impossible, to achieve. In addition, access to log records provides information\n  an attacker could potentially use to their advantage since each event record\n  might contain communication ports, protocols, services, trust relationships,\n  user names, etc.\n\n      The web server must protect the log data from unauthorized read, write,\n  copy, etc. This can be done by the web server if the web server is also doing\n  the logging function. The web server may also use an external log system. In\n  either case, the logs must be protected from access by non-privileged users.",
      "descriptions": {
        "default": "Log data is essential in the investigation of events. If log data were\n  to become compromised, then competent forensic analysis and discovery of the\n  true source of potentially malicious system activity would be difficult, if not\n  impossible, to achieve. In addition, access to log records provides information\n  an attacker could potentially use to their advantage since each event record\n  might contain communication ports, protocols, services, trust relationships,\n  user names, etc.\n\n      The web server must protect the log data from unauthorized read, write,\n  copy, etc. This can be done by the web server if the web server is also doing\n  the logging function. The web server may also use an external log system. In\n  either case, the logs must be protected from access by non-privileged users.",
        "check": "Review the NGINX web server documentation and deployed configuration settings to\ndetermine if the web server logging features protect log information from\nunauthorized access.\n\nCheck for the following:\n    # grep for 'access_log' and 'error_log' directives in the nginx.conf\n    and any separated include configuration file.\n\nExecute the following commands:\n    # ls -alH <nginx log directory>\n    # ls -alH <path to access_log>/access.log\n    # ls -alH <path to error_log>/error.log\n\nNote the owner and group permissions on these files. Only system administrators\nand service accounts running the server should have permissions to the directory and files.\n   - The SA or service account should own the directory and files\n   - Permissions on the directory should be 750 or more restrictive\n   - Permissions on these files should be 640 or more restrictive\n\nIf any users other than those authorized have read access to the log files, this\nis a finding.",
        "fix": "To protect the integrity of the data that is being captured in the\n  log files, ensure that only the members of the Auditors group, Administrators,\n  and the user assigned to run the web server software is granted permissions to\n  read the log files."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000118-WSR-000068",
        "gid": "V-41670",
        "rid": "SV-54247r3_rule",
        "stig_id": "SRG-APP-000118-WSR-000068",
        "fix_id": "F-47129r2_fix",
        "cci": [
          "CCI-000162"
        ],
        "nist": [
          "AU-9"
        ]
      },
      "code": "control 'V-41670' do\n  title 'Web NGINX server log files must only be accessible by privileged users.'\n  desc  \"Log data is essential in the investigation of events. If log data were\n  to become compromised, then competent forensic analysis and discovery of the\n  true source of potentially malicious system activity would be difficult, if not\n  impossible, to achieve. In addition, access to log records provides information\n  an attacker could potentially use to their advantage since each event record\n  might contain communication ports, protocols, services, trust relationships,\n  user names, etc.\n\n      The web server must protect the log data from unauthorized read, write,\n  copy, etc. This can be done by the web server if the web server is also doing\n  the logging function. The web server may also use an external log system. In\n  either case, the logs must be protected from access by non-privileged users.\n  \"\n  desc 'check', \"\n  Review the NGINX web server documentation and deployed configuration settings to\n  determine if the web server logging features protect log information from\n  unauthorized access.\n\n  Check for the following:\n      # grep for 'access_log' and 'error_log' directives in the nginx.conf\n      and any separated include configuration file.\n\n  Execute the following commands:\n      # ls -alH <nginx log directory>\n      # ls -alH <path to access_log>/access.log\n      # ls -alH <path to error_log>/error.log\n\n  Note the owner and group permissions on these files. Only system administrators\n  and service accounts running the server should have permissions to the directory and files.\n     - The SA or service account should own the directory and files\n     - Permissions on the directory should be 750 or more restrictive\n     - Permissions on these files should be 640 or more restrictive\n\n  If any users other than those authorized have read access to the log files, this\n  is a finding.\n  \"\n  desc 'fix', \"To protect the integrity of the data that is being captured in the\n  log files, ensure that only the members of the Auditors group, Administrators,\n  and the user assigned to run the web server software is granted permissions to\n  read the log files.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000118-WSR-000068'\n  tag \"gid\": 'V-41670'\n  tag \"rid\": 'SV-54247r3_rule'\n  tag \"stig_id\": 'SRG-APP-000118-WSR-000068'\n  tag \"fix_id\": 'F-47129r2_fix'\n  tag \"cci\": ['CCI-000162']\n  tag \"nist\": %w(AU-9)\n\n  # nginx log directory should have 750 permissions\n  describe file(input('nginx_log_path')) do\n    its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n    its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n    it { should_not be_more_permissive_than('0750') }\n  end\n\n  # log file in docker are symlinks\n  if virtualization.system.eql?('docker')\n    # nginx access log file should have 660 permissions\n    describe file(input('access_log_path')) do\n      its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n      its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n    end\n\n    # nginx error log file should have 660 permissions\n    describe file(input('error_log_path')) do\n      its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n      its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n    end\n  else\n    # nginx access log file should have 660 permissions\n    describe file(input('access_log_path')) do\n      its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n      its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n      it { should_not be_more_permissive_than('0640') }\n    end\n\n    # nginx error log file should have 660 permissions\n    describe file(input('error_log_path')) do\n      its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n      its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n      it { should_not be_more_permissive_than('0640') }\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41670.rb",
        "line": 1
      },
      "id": "V-41670"
    },
    {
      "title": "The web server must install security-relevant software updates within\n  the configured time period directed by an authoritative source (e.g., IAVM,\n  CTOs, DTMs, and STIGs).",
      "desc": "Security flaws with software applications are discovered daily.\n  Vendors are constantly updating and patching their products to address newly\n  discovered security vulnerabilities. Organizations (including any contractor to\n  the organization) are required to promptly install security-relevant software\n  updates (e.g., patches, service packs, and hot fixes). Flaws discovered during\n  security assessments, continuous monitoring, incident response activities, or\n  information system error handling must also be addressed expeditiously.\n\n    The web server will be configured to check for and install\n  security-relevant software updates from an authoritative source within an\n  identified time period from the availability of the update. By default, this\n  time period will be every 24 hours.",
      "descriptions": {
        "default": "Security flaws with software applications are discovered daily.\n  Vendors are constantly updating and patching their products to address newly\n  discovered security vulnerabilities. Organizations (including any contractor to\n  the organization) are required to promptly install security-relevant software\n  updates (e.g., patches, service packs, and hot fixes). Flaws discovered during\n  security assessments, continuous monitoring, incident response activities, or\n  information system error handling must also be addressed expeditiously.\n\n    The web server will be configured to check for and install\n  security-relevant software updates from an authoritative source within an\n  identified time period from the availability of the update. By default, this\n  time period will be every 24 hours.",
        "check": "Review the web server documentation and configuration to determine if the\nweb server checks for patches from an authoritative source at least every 30\ndays.\n\nDetermine most recent patch level of NGINX with the following command:\n\n# nginx -v\n\nIf the version is more than one version behind the most recent patch level,\nthis is a finding.",
        "fix": "Install the current version of the web server software and\n  maintain appropriate service packs and patches."
      },
      "impact": 0.5,
      "refs": [
        {
          "ref": "http://nginx.org/en/CHANGES"
        }
      ],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000456-WSR-000187",
        "gid": "V-56033",
        "rid": "SV-70287r3_rule",
        "stig_id": "SRG-APP-000456-WSR-000187",
        "fix_id": "F-60911r2_fix",
        "cci": [
          "CCI-002605"
        ],
        "nist": [
          "SI-2 c"
        ]
      },
      "code": "control 'V-56033' do\n  title \"The web server must install security-relevant software updates within\n  the configured time period directed by an authoritative source (e.g., IAVM,\n  CTOs, DTMs, and STIGs).\"\n  desc  \"Security flaws with software applications are discovered daily.\n  Vendors are constantly updating and patching their products to address newly\n  discovered security vulnerabilities. Organizations (including any contractor to\n  the organization) are required to promptly install security-relevant software\n  updates (e.g., patches, service packs, and hot fixes). Flaws discovered during\n  security assessments, continuous monitoring, incident response activities, or\n  information system error handling must also be addressed expeditiously.\n\n    The web server will be configured to check for and install\n  security-relevant software updates from an authoritative source within an\n  identified time period from the availability of the update. By default, this\n  time period will be every 24 hours.\n  \"\n\n  desc 'check', \"\n  Review the web server documentation and configuration to determine if the\n  web server checks for patches from an authoritative source at least every 30\n  days.\n\n  Determine most recent patch level of NGINX with the following command:\n\n  # nginx -v\n\n  If the version is more than one version behind the most recent patch level,\n  this is a finding.\n  \"\n  desc 'fix', \"Install the current version of the web server software and\n  maintain appropriate service packs and patches.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000456-WSR-000187'\n  tag \"gid\": 'V-56033'\n  tag \"rid\": 'SV-70287r3_rule'\n  tag \"stig_id\": 'SRG-APP-000456-WSR-000187'\n  tag \"fix_id\": 'F-60911r2_fix'\n  tag \"cci\": ['CCI-002605']\n  tag \"nist\": ['SI-2 c']\n  ref 'http://nginx.org/en/CHANGES'\n\n  nginx_changelog = inspec.http('http://nginx.org/en/CHANGES').body.lines.map(&:chomp)\n  nginx_changelog_clean = nginx_changelog.select { |line| line.include? 'Changes with nginx' }\n  \n  nginx_latest_release = nginx_changelog_clean.first.split[3]\n  nginx_previous_release = nginx_changelog_clean[1].split[3]\n  allowed_nginx_version = input('org_allowed_nginx_version')\n  nginx_installed_version = inspec.nginx.version\n\n  if (nginx_latest_release.nil? || nginx_latest_release.empty?) && (allowed_nginx_version.nil? || allowed_nginx_version.empty?)\n    describe \"Your installed NGINX version is: #{nginx_installed_version}. You must review this control Manually. Either set or pass the `nginx_version` input to the profile,\n    or ensure your system can reach 'http://nginx.org/en/CHANGES' to get the latest released version of NGINX\" do\n      skip \"Your installed NGINX version is: #{nginx_installed_version}. You must review this control Manually. Either set or pass the `nginx_version` input to the profile,\n      or ensure your system can reach 'http://nginx.org/en/CHANGES' to get the latest released version of NGINX\"\n    end\n  else\n    describe.one do\n      describe \"NGINX version v#{nginx_installed_version} installed is\" do\n        unless nginx_latest_release.nil? || nginx_previous_release.nil?\n          describe \"not more then one patch level behind v#{nginx_previous_release}\" do\n            subject { nginx_installed_version }\n            it { should cmp >= nginx_previous_release }\n          end\n        end\n        unless allowed_nginx_version.empty?\n          describe \"greater then or equal to the organization approved version v#{allowed_nginx_version}\" do\n            subject { nginx_installed_version }\n            it { should cmp >= allowed_nginx_version }\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-56033.rb",
        "line": 1
      },
      "id": "V-56033"
    },
    {
      "title": "The NGINX web server document directory must be in a separate partition from\nthe web servers system files.",
      "desc": "A web server is used to deliver content on the request of a client.\nThe content delivered to a client must be controlled, allowing only hosted\napplication files to be accessed and delivered. To allow a client access to\nsystem files of any type is a major security risk that is entirely avoidable.\nObtaining such access is the goal of directory traversal and URL manipulation\nvulnerabilities. To facilitate such access by misconfiguring the web document\n(home) directory is a serious error. In addition, having the path on the same\ndrive as the system folder compounds potential attacks such as drive space\nexhaustion.",
      "descriptions": {
        "default": "A web server is used to deliver content on the request of a client.\nThe content delivered to a client must be controlled, allowing only hosted\napplication files to be accessed and delivered. To allow a client access to\nsystem files of any type is a major security risk that is entirely avoidable.\nObtaining such access is the goal of directory traversal and URL manipulation\nvulnerabilities. To facilitate such access by misconfiguring the web document\n(home) directory is a serious error. In addition, having the path on the same\ndrive as the system folder compounds potential attacks such as drive space\nexhaustion.",
        "check": "Review the NGINX web server documentation and deployed configuration\n  to determine where the document directory is located for each hosted application.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  Check for the following:\n\n    #grep the 'root' directive in the http, server, and location context of the\n    nginx.conf and any separated include configuration file.\n\n  If the 'root' directive cannot be found in NGINX configuration files, this check is Not Applicable.\n\n  If the path for any of the directives is on the same partition as the web server\n  operating system files, this is a finding.",
        "fix": "Create and mount a new partition.\n  Once partition is created, the directory needs to be copied over using the following command:\n    # sudo rsync -av <DOCUMENT HOME DIRECTORY> <NEW MOUNTED PARTITION>.\n\n  Update the 'root' directives in the NGINX configuration file(s) with the new location."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000233-WSR-000146",
        "gid": "V-41821",
        "rid": "SV-54398r3_rule",
        "stig_id": "SRG-APP-000233-WSR-000146",
        "fix_id": "F-47280r2_fix",
        "cci": [
          "CCI-001084"
        ],
        "nist": [
          "SC-3"
        ]
      },
      "code": "control 'V-41821' do\n  title \"The NGINX web server document directory must be in a separate partition from\nthe web servers system files.\"\n  desc  \"A web server is used to deliver content on the request of a client.\nThe content delivered to a client must be controlled, allowing only hosted\napplication files to be accessed and delivered. To allow a client access to\nsystem files of any type is a major security risk that is entirely avoidable.\nObtaining such access is the goal of directory traversal and URL manipulation\nvulnerabilities. To facilitate such access by misconfiguring the web document\n(home) directory is a serious error. In addition, having the path on the same\ndrive as the system folder compounds potential attacks such as drive space\nexhaustion.\"\n\n  desc  'check', \"Review the NGINX web server documentation and deployed configuration\n  to determine where the document directory is located for each hosted application.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  Check for the following:\n\n    #grep the 'root' directive in the http, server, and location context of the\n    nginx.conf and any separated include configuration file.\n\n  If the 'root' directive cannot be found in NGINX configuration files, this check is Not Applicable.\n\n  If the path for any of the directives is on the same partition as the web server\n  operating system files, this is a finding.\n  \"\n  desc 'fix', \"Create and mount a new partition.\n  Once partition is created, the directory needs to be copied over using the following command:\n    # sudo rsync -av <DOCUMENT HOME DIRECTORY> <NEW MOUNTED PARTITION>.\n\n  Update the 'root' directives in the NGINX configuration file(s) with the new location.\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000233-WSR-000146'\n  tag \"gid\": 'V-41821'\n  tag \"rid\": 'SV-54398r3_rule'\n  tag \"stig_id\": 'SRG-APP-000233-WSR-000146'\n  tag \"fix_id\": 'F-47280r2_fix'\n  tag \"cci\": ['CCI-001084']\n  tag \"nist\": %w(SC-3)\n\n  webserver_roots = []\n\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.http.entries.each do |http|\n      webserver_roots.push(http.params['root']) unless http.params['root'].nil?\n    end\n  end\n\n  if nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.entries.each do |server|\n      webserver_roots.push(server.params['root']) unless server.params['root'].nil?\n    end\n  end\n\n  if nginx_conf.locations.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.locations.entries.each do |location|\n      webserver_roots.push(location.params['root']) unless location.params['root'].nil?\n    end\n  end\n\n  if webserver_roots.empty?\n    impact 0.0\n    describe 'This check is NA because no root directories have been set.' do\n      skip 'This test is NA because no root directories have been set.'\n    end\n  else\n    webserver_roots.flatten!.uniq!\n    webserver_roots.each do |root|\n      describe \"The root directory #{root}\" do\n        it { should_not cmp '/' }\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41821.rb",
        "line": 1
      },
      "id": "V-41821"
    },
    {
      "title": "The NGINX web server must prohibit or restrict the use of nonsecure or\nunnecessary ports, protocols, modules, and/or services.",
      "desc": "Web servers provide numerous processes, features, and functionalities\nthat utilize TCP/IP ports. Some of these processes may be deemed unnecessary or\ntoo unsecure to run on a production system.\n\n    The web server must provide the capability to disable or deactivate\nnetwork-related services that are deemed to be non-essential to the server\nmission, are too unsecure, or are prohibited by the PPSM CAL and vulnerability\nassessments.",
      "descriptions": {
        "default": "Web servers provide numerous processes, features, and functionalities\nthat utilize TCP/IP ports. Some of these processes may be deemed unnecessary or\ntoo unsecure to run on a production system.\n\n    The web server must provide the capability to disable or deactivate\nnetwork-related services that are deemed to be non-essential to the server\nmission, are too unsecure, or are prohibited by the PPSM CAL and vulnerability\nassessments.",
        "check": "Review the NGINX web server documentation and deployment configuration to\ndetermine which ports and protocols are enabled.\n\nVerify that the ports and protocols being used are permitted, necessary for\nthe operation of the web server and the hosted applications and are secure for\na production system.\n\nIf NGINX is not configured to serve files, this check is Not Applicable.\n\nCheck for the following:\n# grep for all 'listen' directives in the server context of the nginx.conf and\nany separated include configuration file.\n\nIf the 'listen' directive cannot be found in NGINX configuration files,\nthis check is Not Applicable.\n\nIf the 'listen' directive is not configured to use port 80 (for HTTP) or port\n443 (for HTTPS) and port configured is not approved for used by PPSM, this is\na finding.",
        "fix": "Configure the 'listen' directives in the NGINX configuration file(s)\n  to use IANA well-known ports for 'HTTP' and 'HTTPS'."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000383-WSR-000175",
        "gid": "V-55991",
        "rid": "SV-70245r2_rule",
        "stig_id": "SRG-APP-000383-WSR-000175",
        "fix_id": "F-60869r1_fix",
        "cci": [
          "CCI-001762"
        ],
        "nist": [
          "CM-7 (1) (b)",
          ""
        ]
      },
      "code": "control 'V-55991' do\n  title \"The NGINX web server must prohibit or restrict the use of nonsecure or\nunnecessary ports, protocols, modules, and/or services.\"\n  desc  \"Web servers provide numerous processes, features, and functionalities\nthat utilize TCP/IP ports. Some of these processes may be deemed unnecessary or\ntoo unsecure to run on a production system.\n\n    The web server must provide the capability to disable or deactivate\nnetwork-related services that are deemed to be non-essential to the server\nmission, are too unsecure, or are prohibited by the PPSM CAL and vulnerability\nassessments.\n  \"\n\n  desc 'check', \"\n  Review the NGINX web server documentation and deployment configuration to\n  determine which ports and protocols are enabled.\n\n  Verify that the ports and protocols being used are permitted, necessary for\n  the operation of the web server and the hosted applications and are secure for\n  a production system.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n  # grep for all 'listen' directives in the server context of the nginx.conf and\n  any separated include configuration file.\n\n  If the 'listen' directive cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  If the 'listen' directive is not configured to use port 80 (for HTTP) or port\n  443 (for HTTPS) and port configured is not approved for used by PPSM, this is\n  a finding.\n  \"\n  desc 'fix', \"Configure the 'listen' directives in the NGINX configuration file(s)\n  to use IANA well-known ports for 'HTTP' and 'HTTPS'.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000383-WSR-000175'\n  tag \"gid\": 'V-55991'\n  tag \"rid\": 'SV-70245r2_rule'\n  tag \"stig_id\": 'SRG-APP-000383-WSR-000175'\n  tag \"fix_id\": 'F-60869r1_fix'\n  tag \"cci\": ['CCI-001762']\n  tag \"nist\": ['CM-7 (1) (b)', '']\n\n  if nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.entries.each do |server|\n      if server.params['listen'].nil?\n        impact 0.0\n        describe 'This test is NA because the listen directive has not been configured.' do\n          skip 'This test is NA because the listen directive has not been configured.'\n        end\n      else\n        server.params['listen'].each do |listen|\n          describe 'The listen directive' do\n            listen_address = listen.join\n            it 'should include the specific IP address and port' do\n              expect(listen_address).to(match(/[0-9]+(?:\\.[0-9]+){3}|[a-zA-Z]:[0-9]+/))\n            end\n          end\n          describe 'The listening port' do\n            listen_port = listen.join.split(':')[1]\n            listen_port = listen_port.tr('ssl', '') unless listen_port.nil?\n            it 'should be an approved port.' do\n              expect(listen_port).to(be_in(input('authorized_ports')))\n            end\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55991.rb",
        "line": 1
      },
      "id": "V-55991"
    },
    {
      "title": "The NGINX web server must encrypt passwords during transmission.",
      "desc": "Data used to authenticate, especially passwords, needs to be protected\n  at all times, and encryption is the standard method for protecting\n  authentication data during transmission. Data used to authenticate can be\n  passed to and from the web server for many reasons.\n\n    Examples include data passed from a user to the web server through an HTTPS\n  connection for authentication, the web server authenticating to a backend\n  database for data retrieval and posting, and the web server authenticating to a\n  clustered web server manager for an update.",
      "descriptions": {
        "default": "Data used to authenticate, especially passwords, needs to be protected\n  at all times, and encryption is the standard method for protecting\n  authentication data during transmission. Data used to authenticate can be\n  passed to and from the web server for many reasons.\n\n    Examples include data passed from a user to the web server through an HTTPS\n  connection for authentication, the web server authenticating to a backend\n  database for data retrieval and posting, and the web server authenticating to a\n  clustered web server manager for an update.",
        "check": "Review the NGINX web server documentation and deployed\n  configuration to determine whether passwords are being passed to or from the\n  web server.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n    #grep the 'ssl_protocols' directive in the server context of the nginx.conf\n    and any separated include configuration file.\n\n  If the 'ssl_protocols' directive cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  If TLS is not enabled, then passwords are not encrypted. If the 'ssl_protocols'\n  directive is not set to the approved TLS versions, this is a finding.",
        "fix": "Add the 'ssl_protocols' directive to the NGINX configuration file(s)\n  and configure it to use the approved TLS protocols to encrypt the transmission passwords.\n\n  Example:\n  server {\n          ssl_protocols TLSv1.2;\n  }"
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000172-WSR-000104",
        "gid": "V-41738",
        "rid": "SV-54315r3_rule",
        "stig_id": "SRG-APP-000172-WSR-000104",
        "fix_id": "F-47197r2_fix",
        "cci": [
          "CCI-000197"
        ],
        "nist": [
          "IA-5 (1) (c)",
          ""
        ]
      },
      "code": "control 'V-41738' do\n  title 'The NGINX web server must encrypt passwords during transmission.'\n  desc  \"Data used to authenticate, especially passwords, needs to be protected\n  at all times, and encryption is the standard method for protecting\n  authentication data during transmission. Data used to authenticate can be\n  passed to and from the web server for many reasons.\n\n    Examples include data passed from a user to the web server through an HTTPS\n  connection for authentication, the web server authenticating to a backend\n  database for data retrieval and posting, and the web server authenticating to a\n  clustered web server manager for an update.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and deployed\n  configuration to determine whether passwords are being passed to or from the\n  web server.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n    #grep the 'ssl_protocols' directive in the server context of the nginx.conf\n    and any separated include configuration file.\n\n  If the 'ssl_protocols' directive cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  If TLS is not enabled, then passwords are not encrypted. If the 'ssl_protocols'\n  directive is not set to the approved TLS versions, this is a finding.\n  \"\n  desc 'fix', \"Add the 'ssl_protocols' directive to the NGINX configuration file(s)\n  and configure it to use the approved TLS protocols to encrypt the transmission passwords.\n\n  Example:\n  server {\n          ssl_protocols TLSv1.2;\n  }\n  \"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000172-WSR-000104'\n  tag \"gid\": 'V-41738'\n  tag \"rid\": 'SV-54315r3_rule'\n  tag \"stig_id\": 'SRG-APP-000172-WSR-000104'\n  tag \"fix_id\": 'F-47197r2_fix'\n  tag \"cci\": ['CCI-000197']\n  tag \"nist\": ['IA-5 (1) (c)', '']\n\n  if nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.each do |server|\n      if server.params['ssl_protocols'].nil?\n        impact 0.0\n        describe 'This test is NA because the ssl_protocols directive has not been configured.' do\n          skip 'This test is NA because the ssl_protocols directive has not been configured.'\n        end\n      else\n        server.params['ssl_protocols'].each do |protocol|\n          describe 'Each protocol' do\n            it 'should be included in the list of protocols approved to encrypt data' do\n              expect(protocol).to(be_in(input('approved_ssl_protocols')))\n            end\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41738.rb",
        "line": 1
      },
      "id": "V-41738"
    },
    {
      "title": "The web server must produce log records containing sufficient\n  information to establish the identity of any user/subject or process associated\n  with an event.",
      "desc": "Web server logging capability is critical for accurate forensic\n  analysis. Without sufficient and accurate information, a correct replay of the\n  events cannot be determined.\n\n    Determining user accounts, processes running on behalf of the user, and\n  running process identifiers also enable a better understanding of the overall\n  event. User tool identification is also helpful to determine if events are\n  related to overall user access or specific client tools.\n\n    Log record content that may be necessary to satisfy the requirement of this\n  control includes: time stamps, source and destination addresses, user/process\n  identifiers, event descriptions, success/fail indications, file names involved,\n  and access control or flow control rules invoked.",
      "descriptions": {
        "default": "Web server logging capability is critical for accurate forensic\n  analysis. Without sufficient and accurate information, a correct replay of the\n  events cannot be determined.\n\n    Determining user accounts, processes running on behalf of the user, and\n  running process identifiers also enable a better understanding of the overall\n  event. User tool identification is also helpful to determine if events are\n  related to overall user access or specific client tools.\n\n    Log record content that may be necessary to satisfy the requirement of this\n  control includes: time stamps, source and destination addresses, user/process\n  identifiers, event descriptions, success/fail indications, file names involved,\n  and access control or flow control rules invoked.",
        "check": "Review the NGINX web server documentation and deployment\n  configuration to determine if the web server can generate log data containing\n  the user/subject identity.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n  Check for the following:\n      # grep for a 'log_format' directive in the http context of the nginx.conf.\n\n  If the 'log_format' directive is not configured to contain the '$remote_user'\n  variable, this is a finding.",
        "fix": "Configure the 'log_format' directive in the nginx.conf to use the '$remote_user'\nvariable to to include the user/subject identity or process as part of each log record."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000100-WSR-000064",
        "gid": "V-41620",
        "rid": "SV-54197r3_rule",
        "stig_id": "SRG-APP-000100-WSR-000064",
        "fix_id": "F-47079r2_fix",
        "cci": [
          "CCI-001487"
        ],
        "nist": [
          "AU-3"
        ]
      },
      "code": "control 'V-41620' do\n  title \"The web server must produce log records containing sufficient\n  information to establish the identity of any user/subject or process associated\n  with an event.\"\n  desc \"Web server logging capability is critical for accurate forensic\n  analysis. Without sufficient and accurate information, a correct replay of the\n  events cannot be determined.\n\n    Determining user accounts, processes running on behalf of the user, and\n  running process identifiers also enable a better understanding of the overall\n  event. User tool identification is also helpful to determine if events are\n  related to overall user access or specific client tools.\n\n    Log record content that may be necessary to satisfy the requirement of this\n  control includes: time stamps, source and destination addresses, user/process\n  identifiers, event descriptions, success/fail indications, file names involved,\n  and access control or flow control rules invoked.\n  \"\n  desc 'check', \"Review the NGINX web server documentation and deployment\n  configuration to determine if the web server can generate log data containing\n  the user/subject identity.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n  Check for the following:\n      # grep for a 'log_format' directive in the http context of the nginx.conf.\n\n  If the 'log_format' directive is not configured to contain the '$remote_user'\n  variable, this is a finding.\n  \"\n  desc 'fix', \"\n  Configure the 'log_format' directive in the nginx.conf to use the '$remote_user'\n  variable to to include the user/subject identity or process as part of each log record.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000100-WSR-000064'\n  tag \"gid\": 'V-41620'\n  tag \"rid\": 'SV-54197r3_rule'\n  tag \"stig_id\": 'SRG-APP-000100-WSR-000064'\n  tag \"fix_id\": 'F-47079r2_fix'\n  tag \"cci\": ['CCI-001487']\n  tag \"nist\": %w(AU-3)\n\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      http['log_format'].each do |log_format|\n        describe 'remote_user' do\n          it 'should be part of every log format in http.' do\n            expect(log_format.to_s).to(match(/.*?\\$remote_user.*?/))\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41620.rb",
        "line": 1
      },
      "id": "V-41620"
    },
    {
      "title": "The web server must protect system resources and privileged operations\n  from hosted applications.",
      "desc": "A web server may host one too many applications.  Each application\n  will need certain system resources and privileged operations to operate\n  correctly.  The web server must be configured to contain and control the\n  applications and protect the system resources and privileged operations from\n  those not needed by the application for operation.\n\n    Limiting the application will confine the potential harm a compromised\n  application could cause to a system.",
      "descriptions": {
        "default": "A web server may host one too many applications.  Each application\n  will need certain system resources and privileged operations to operate\n  correctly.  The web server must be configured to contain and control the\n  applications and protect the system resources and privileged operations from\n  those not needed by the application for operation.\n\n    Limiting the application will confine the potential harm a compromised\n  application could cause to a system.",
        "check": "Interview the System Administrator for the NGINX web server\n  or review the NGINX web server documentation and configuration to determine\n  the access to server resources given to hosted applications.\n\n  Verify that the user that runs the NGINX web server is an authorized user:\n    #grep the 'user' directive in the main context of the nginx.conf file\n\n  If the 'user' directive cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  If the user specified in the configuration file is not an authorized user,\n  this is a finding.\n\n  Verify the permissions of the following files and directories:\n    - /usr/sbin/nginx    <'authorized user'>:<'authorized group'> 550/550\n    - /etc/nginx/        <'authorized user'>:<'authorized group'> 770/660\n    - /etc/nginx/conf.d  <'authorized user'>:<'authorized group'> 770/660\n    - /etc/nginx/modules <'authorized user'>:<'authorized group'> 770/660\n\n  If the files and directories are not set to the following permissions or more\n  restrictive, this is a finding.\n  NOTE:  The permissions are noted as directories / files",
        "fix": "Set the 'user' directive in the nginx.conf file to an authorized\n  user.\n\n  Use the chmod  and chown commands to set permissions/ownership of the web server\n  system directories and files as follows:\n\n  - /usr/sbin/nginx    <'authorized user'>:<'authorized group'> 550/550\n  - /etc/nginx/        <'authorized user'>:<'authorized group'> 770/660\n  - /etc/nginx/conf.d  <'authorized user'>:<'authorized group'> 770/660\n  - /etc/nginx/modules <'authorized user'>:<'authorized group'> 770/660"
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000141-WSR-000086",
        "gid": "V-41703",
        "rid": "SV-54280r3_rule",
        "stig_id": "SRG-APP-000141-WSR-000086",
        "fix_id": "F-47162r2_fix",
        "cci": [
          "CCI-000381"
        ],
        "nist": [
          "CM-7 a",
          ""
        ]
      },
      "code": "control 'V-41703' do\n  title \"The web server must protect system resources and privileged operations\n  from hosted applications.\"\n  desc \"A web server may host one too many applications.  Each application\n  will need certain system resources and privileged operations to operate\n  correctly.  The web server must be configured to contain and control the\n  applications and protect the system resources and privileged operations from\n  those not needed by the application for operation.\n\n    Limiting the application will confine the potential harm a compromised\n  application could cause to a system.\n  \"\n\n  desc 'check', \"Interview the System Administrator for the NGINX web server\n  or review the NGINX web server documentation and configuration to determine\n  the access to server resources given to hosted applications.\n\n  Verify that the user that runs the NGINX web server is an authorized user:\n    #grep the 'user' directive in the main context of the nginx.conf file\n\n  If the 'user' directive cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  If the user specified in the configuration file is not an authorized user,\n  this is a finding.\n\n  Verify the permissions of the following files and directories:\n    - /usr/sbin/nginx    <'authorized user'>:<'authorized group'> 550/550\n    - /etc/nginx/        <'authorized user'>:<'authorized group'> 770/660\n    - /etc/nginx/conf.d  <'authorized user'>:<'authorized group'> 770/660\n    - /etc/nginx/modules <'authorized user'>:<'authorized group'> 770/660\n\n  If the files and directories are not set to the following permissions or more\n  restrictive, this is a finding.\n  NOTE:  The permissions are noted as directories / files\"\n  desc 'fix', \"Set the 'user' directive in the nginx.conf file to an authorized\n  user.\n\n  Use the chmod  and chown commands to set permissions/ownership of the web server\n  system directories and files as follows:\n\n  - /usr/sbin/nginx    <'authorized user'>:<'authorized group'> 550/550\n  - /etc/nginx/        <'authorized user'>:<'authorized group'> 770/660\n  - /etc/nginx/conf.d  <'authorized user'>:<'authorized group'> 770/660\n  - /etc/nginx/modules <'authorized user'>:<'authorized group'> 770/660\n  \"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000141-WSR-000086'\n  tag \"gid\": 'V-41703'\n  tag \"rid\": 'SV-54280r3_rule'\n  tag \"stig_id\": 'SRG-APP-000141-WSR-000086'\n  tag \"fix_id\": 'F-47162r2_fix'\n  tag \"cci\": ['CCI-000381']\n  tag \"nist\": ['CM-7 a', '']\n\n  describe \"This test requires a Manual Review: Interview the SA to determine the\n  access to server resources given to hosted applications.\" do\n    skip \"This test requires a Manual Review: Interview the SA to determine the\n    access to server resources given to hosted applications.\"\n  end\n\n  if nginx_conf.params['user'].nil?\n    impact 0.0\n    describe 'This check is NA because the user directive is not configured properly.' do\n      skip 'This check is NA because the user directive is not configured properly.'\n    end\n  else\n    nginx_conf.params['user'].each do |user|\n      user.each do |value|\n        describe 'The value of user' do\n          it 'should be the default nginx user or other authorized user.' do\n            expect(value).to (eq input('nginx_owner')).or(be_in(input('authorized_user_list')))\n          end\n        end\n      end\n    end\n    describe file('/usr/sbin/nginx') do\n      its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n      its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n      it { should_not be_more_permissive_than('0550') }\n    end\n    describe file('/etc/nginx/') do\n      its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n      its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n      it { should_not be_more_permissive_than('0770') }\n    end\n    describe file('/etc/nginx/conf.d') do\n      its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n      its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n      it { should_not be_more_permissive_than('0770') }\n    end\n    describe file('/etc/nginx/modules') do\n      its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n      its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n      it { should_not be_more_permissive_than('0770') }\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41703.rb",
        "line": 1
      },
      "id": "V-41703"
    },
    {
      "title": "Anonymous user access to the NGINX web server application directories must\nbe prohibited.",
      "desc": "In order to properly monitor the changes to the web server and the\nhosted applications, logging must be enabled. Along with logging being enabled,\neach record must properly contain the changes made and the names of those who\nmade the changes.\n\n    Allowing anonymous users the capability to change the web server or the\nhosted application will not generate proper log information that can then be\nused for forensic reporting in the case of a security issue. Allowing anonymous\nusers to make changes will also grant change capabilities to anybody without\nforcing a user to authenticate before the changes can be made.",
      "descriptions": {
        "default": "In order to properly monitor the changes to the web server and the\nhosted applications, logging must be enabled. Along with logging being enabled,\neach record must properly contain the changes made and the names of those who\nmade the changes.\n\n    Allowing anonymous users the capability to change the web server or the\nhosted application will not generate proper log information that can then be\nused for forensic reporting in the case of a security issue. Allowing anonymous\nusers to make changes will also grant change capabilities to anybody without\nforcing a user to authenticate before the changes can be made.",
        "check": "Review the NGINX web server documentation and configuration\n  to determine if anonymous users can make changes to the web server or any\n  applications hosted by the web server.\n\n  Obtain a list of the user accounts for the system, noting the privileges for each account.\n\n  Verify with the System Administrator (SA) or the Information System Security Officer (ISSO) that\n  all privileged accounts are mission essential and documented.\n\n  Verify with the SA or the ISSO that all non-administrator access to shell scripts and operating\n  system functions are mission essential and documented.\n\n  If there are no valid login shells, this check is Not Applicable.\n\n  If undocumented privileged accounts are present, this is a finding.\n\n  If undocumented access to shell scripts or operating system functions is present (i.e. anonymous users\n  can make changes), this is a finding.",
        "fix": "Ensure non-administrators (e.g. anonymous) are not allowed access to the directory tree,\n  the shell, or other operating system functions and utilities."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000211-WSR-000031",
        "gid": "V-55993",
        "rid": "SV-70247r2_rule",
        "stig_id": "SRG-APP-000211-WSR-000031",
        "fix_id": "F-60871r1_fix",
        "cci": [
          "CCI-001082"
        ],
        "nist": [
          "SC-2"
        ]
      },
      "code": "control 'V-55993' do\n  title \"Anonymous user access to the NGINX web server application directories must\nbe prohibited.\"\n  desc  \"In order to properly monitor the changes to the web server and the\nhosted applications, logging must be enabled. Along with logging being enabled,\neach record must properly contain the changes made and the names of those who\nmade the changes.\n\n    Allowing anonymous users the capability to change the web server or the\nhosted application will not generate proper log information that can then be\nused for forensic reporting in the case of a security issue. Allowing anonymous\nusers to make changes will also grant change capabilities to anybody without\nforcing a user to authenticate before the changes can be made.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and configuration\n  to determine if anonymous users can make changes to the web server or any\n  applications hosted by the web server.\n\n  Obtain a list of the user accounts for the system, noting the privileges for each account.\n\n  Verify with the System Administrator (SA) or the Information System Security Officer (ISSO) that\n  all privileged accounts are mission essential and documented.\n\n  Verify with the SA or the ISSO that all non-administrator access to shell scripts and operating\n  system functions are mission essential and documented.\n\n  If there are no valid login shells, this check is Not Applicable.\n\n  If undocumented privileged accounts are present, this is a finding.\n\n  If undocumented access to shell scripts or operating system functions is present (i.e. anonymous users\n  can make changes), this is a finding.\n  \"\n  desc 'fix', \"Ensure non-administrators (e.g. anonymous) are not allowed access to the directory tree,\n  the shell, or other operating system functions and utilities.\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000211-WSR-000031'\n  tag \"gid\": 'V-55993'\n  tag \"rid\": 'SV-70247r2_rule'\n  tag \"stig_id\": 'SRG-APP-000211-WSR-000031'\n  tag \"fix_id\": 'F-60871r1_fix'\n  tag \"cci\": ['CCI-001082']\n  tag \"nist\": %w(SC-2)\n\n  valid_login_shells = command(\"grep '^[^#]' /etc/shells\").stdout.split(\"\\n\")\n\n  if valid_login_shells.empty?\n    impact 0.0\n    describe 'This check is NA because the there are no valid login shells.' do\n      skip 'This check is NA because the there are no valid login shells.'\n    end\n  else\n    valid_login_shells.each do |shell|\n      describe 'Unauthorized users' do\n        it 'should not have shell access.' do\n          expect(users.shells(/#{shell}/).usernames).to(be_in(input('sys_admin').clone << input('nginx_owner')))\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55993.rb",
        "line": 1
      },
      "id": "V-55993"
    },
    {
      "title": "Cookies exchanged between the NGINX web server and client, such as session\n  cookies, must have security settings that disallow cookie access outside the\n  originating web server and hosted application.",
      "desc": "Cookies are used to exchange data between the web server and the\n  client. Cookies, such as a session cookie, may contain session information and\n  user credentials used to maintain a persistent connection between the user and\n  the hosted application since HTTP/HTTPS is a stateless protocol.\n\n    When the cookie parameters are not set properly (i.e., domain and path\n  parameters), cookies can be shared within hosted applications residing on the\n  same web server or to applications hosted on different web servers residing on\n  the same domain.",
      "descriptions": {
        "default": "Cookies are used to exchange data between the web server and the\n  client. Cookies, such as a session cookie, may contain session information and\n  user credentials used to maintain a persistent connection between the user and\n  the hosted application since HTTP/HTTPS is a stateless protocol.\n\n    When the cookie parameters are not set properly (i.e., domain and path\n  parameters), cookies can be shared within hosted applications residing on the\n  same web server or to applications hosted on different web servers residing on\n  the same domain.",
        "check": "Review the NGINX web server documentation and configuration to\n  determine if cookies between the web server and client are accessible by applications\n  or web servers other than the originating pair.\n\n  If it is determined that the web server is not required to perform session management,\n  this check is Not Applicable.\n\n  If NGINX is not configured to serve files or if the required directive(s)\n  cannot be found in the NGINX configuration files, this check is Not Applicable.\n\n  Check for the following:\n    # grep the 'proxy_cookie_path' directive in the location context\n    of the nginx.conf and any separated include configuration file.\n\n  If the 'proxy_cookie_path' directive exists and is not set to the 'HTTPOnly' and\n  'Secure' properties, this is a finding.\n\n    # grep ‘proxy_cookie_domain’ directive in the location context\n    of the nginx.conf and any separated include configuration file.\n\n  If the 'proxy_cookie_domain' directive is found and not set to 'off', this is a finding.",
        "fix": "If the 'proxy_cookie_path' directive exists in the NGINX configuration\n  file(s), configure it to include the 'HTTPOnly' and 'Secure' properties.\n\n  Example:\n  proxy_cookie_path / '/; HTTPOnly; Secure';\n\n  Ensure the 'proxy_cookie_domain' directive is set to 'off' if it exists."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000223-WSR-000011",
        "gid": "V-56025",
        "rid": "SV-70279r2_rule",
        "stig_id": "SRG-APP-000223-WSR-000011",
        "fix_id": "F-60903r1_fix",
        "cci": [
          "CCI-001664"
        ],
        "nist": [
          "SC-23 (3)",
          ""
        ]
      },
      "code": "control 'V-56025' do\n  title \"Cookies exchanged between the NGINX web server and client, such as session\n  cookies, must have security settings that disallow cookie access outside the\n  originating web server and hosted application.\"\n  desc \"Cookies are used to exchange data between the web server and the\n  client. Cookies, such as a session cookie, may contain session information and\n  user credentials used to maintain a persistent connection between the user and\n  the hosted application since HTTP/HTTPS is a stateless protocol.\n\n    When the cookie parameters are not set properly (i.e., domain and path\n  parameters), cookies can be shared within hosted applications residing on the\n  same web server or to applications hosted on different web servers residing on\n  the same domain.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and configuration to\n  determine if cookies between the web server and client are accessible by applications\n  or web servers other than the originating pair.\n\n  If it is determined that the web server is not required to perform session management,\n  this check is Not Applicable.\n\n  If NGINX is not configured to serve files or if the required directive(s)\n  cannot be found in the NGINX configuration files, this check is Not Applicable.\n\n  Check for the following:\n    # grep the 'proxy_cookie_path' directive in the location context\n    of the nginx.conf and any separated include configuration file.\n\n  If the 'proxy_cookie_path' directive exists and is not set to the 'HTTPOnly' and\n  'Secure' properties, this is a finding.\n\n    # grep ‘proxy_cookie_domain’ directive in the location context\n    of the nginx.conf and any separated include configuration file.\n\n  If the 'proxy_cookie_domain' directive is found and not set to 'off', this is a finding.\n  \"\n  desc 'fix', \"If the 'proxy_cookie_path' directive exists in the NGINX configuration\n  file(s), configure it to include the 'HTTPOnly' and 'Secure' properties.\n\n  Example:\n  proxy_cookie_path / '/; HTTPOnly; Secure';\n\n  Ensure the 'proxy_cookie_domain' directive is set to 'off' if it exists.\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000223-WSR-000011'\n  tag \"gid\": 'V-56025'\n  tag \"rid\": 'SV-70279r2_rule'\n  tag \"stig_id\": 'SRG-APP-000223-WSR-000011'\n  tag \"fix_id\": 'F-60903r1_fix'\n  tag \"cci\": ['CCI-001664']\n  tag \"nist\": ['SC-23 (3)', '']\n\n  if input('performs_session_management') == false\n    impact 0.0\n    describe 'This check is NA because session management is not required.' do\n      skip 'This check is NA because session management is not required.'\n    end\n  elsif nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.locations.each do |location|\n      if location.params['proxy_cookie_path'].nil?\n        impact 0.0\n        describe 'This check is NA because the proxy_cookie_path directive is not configured.' do\n          skip 'This check is NA because the proxy_cookie_path directive is not configured.'\n        end\n      else\n        describe \"The 'proxy_cookie_path'\" do\n          it 'should be configured to HTTPOnly and Secure' do\n            expect(location.params['proxy_cookie_path'].join).to(include '/; HTTPOnly; Secure')\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-56025.rb",
        "line": 1
      },
      "id": "V-56025"
    },
    {
      "title": "The NGINX web server must invalidate session identifiers upon hosted\n  application user logout or other session termination.",
      "desc": "Captured sessions can be reused in \"replay\" attacks. This\n  requirement limits the ability of adversaries from capturing and continuing to\n  employ previously valid session IDs.\n\n    Session IDs are tokens generated by web applications to uniquely identify\n  an application user's session. Unique session IDs help to reduce predictability\n  of said identifiers. When a user logs out, or when any other session\n  termination event occurs, the web server must terminate the user session to\n  minimize the potential for an attacker to hijack that particular user session.",
      "descriptions": {
        "default": "Captured sessions can be reused in \"replay\" attacks. This\n  requirement limits the ability of adversaries from capturing and continuing to\n  employ previously valid session IDs.\n\n    Session IDs are tokens generated by web applications to uniquely identify\n  an application user's session. Unique session IDs help to reduce predictability\n  of said identifiers. When a user logs out, or when any other session\n  termination event occurs, the web server must terminate the user session to\n  minimize the potential for an attacker to hijack that particular user session.",
        "check": "Review the web server documentation and deployed configuration\n  to verify that the web server is configured to invalidate session identifiers when a\n  session is terminated.\n\n  If it is determined that the web server is not required to perform session\n  management, this check is Not Applicable.\n\n  If the web server does not invalidate session identifiers when a session is\n  terminated, this is a finding.",
        "fix": "Configure the web server to invalidate session identifiers when\n  a session is terminated."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000220-WSR-000201",
        "gid": "V-56021",
        "rid": "SV-70275r2_rule",
        "stig_id": "SRG-APP-000220-WSR-000201",
        "fix_id": "F-60899r1_fix",
        "cci": [
          "CCI-001185"
        ],
        "nist": [
          "SC-23 (1)",
          ""
        ]
      },
      "code": "control 'V-56021' do\n  title \"The NGINX web server must invalidate session identifiers upon hosted\n  application user logout or other session termination.\"\n  desc \"Captured sessions can be reused in \\\"replay\\\" attacks. This\n  requirement limits the ability of adversaries from capturing and continuing to\n  employ previously valid session IDs.\n\n    Session IDs are tokens generated by web applications to uniquely identify\n  an application user's session. Unique session IDs help to reduce predictability\n  of said identifiers. When a user logs out, or when any other session\n  termination event occurs, the web server must terminate the user session to\n  minimize the potential for an attacker to hijack that particular user session.\n  \"\n\n  desc 'check', \"Review the web server documentation and deployed configuration\n  to verify that the web server is configured to invalidate session identifiers when a\n  session is terminated.\n\n  If it is determined that the web server is not required to perform session\n  management, this check is Not Applicable.\n\n  If the web server does not invalidate session identifiers when a session is\n  terminated, this is a finding.\n  \"\n  desc 'fix', \"Configure the web server to invalidate session identifiers when\n  a session is terminated.\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000220-WSR-000201'\n  tag \"gid\": 'V-56021'\n  tag \"rid\": 'SV-70275r2_rule'\n  tag \"stig_id\": 'SRG-APP-000220-WSR-000201'\n  tag \"fix_id\": 'F-60899r1_fix'\n  tag \"cci\": ['CCI-001185']\n  tag \"nist\": ['SC-23 (1)', '']\n\n  if input('performs_session_management') == false\n    impact 0.0\n    describe 'This check is NA because session management is not required.' do\n      skip 'This check is NA because session management is not required.'\n    end\n  else\n    describe \"This test requires a Manual Review: Verify it invalidates session identifiers when a\n    session is terminated by reviewing the NGINX documentation.\" do\n      skip \"This test requires a Manual Review: Verify it invalidates session identifiers when a\n      session is terminated by reviewing the NGINX documentation.\"\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-56021.rb",
        "line": 1
      },
      "id": "V-56021"
    },
    {
      "title": "The NGINX web server must encrypt user identifiers and passwords.",
      "desc": "When data is written to digital media, such as hard drives, mobile\n  computers, external/removable hard drives, personal digital assistants,\n  flash/thumb drives, etc., there is risk of data loss and data compromise. User\n  identities and passwords stored on the hard drive of the hosting hardware must\n  be encrypted to protect the data from easily being discovered and used by an\n  unauthorized user to access the hosted applications. The cryptographic\n  libraries and functionality used to store and retrieve the user identifiers and\n  passwords must be part of the web server.",
      "descriptions": {
        "default": "When data is written to digital media, such as hard drives, mobile\n  computers, external/removable hard drives, personal digital assistants,\n  flash/thumb drives, etc., there is risk of data loss and data compromise. User\n  identities and passwords stored on the hard drive of the hosting hardware must\n  be encrypted to protect the data from easily being discovered and used by an\n  unauthorized user to access the hosted applications. The cryptographic\n  libraries and functionality used to store and retrieve the user identifiers and\n  passwords must be part of the web server.",
        "check": "Review the NGINX web server documentation and deployed configuration\n  to determine whether the web server is authorizing and managing users.\n\n  If the NGINX web server is not authorizing and managing users, this is check is Not\n  Applicable.\n\n  If the NGINX web server is the user authenticator and manager, verify that stored\n  user identifiers and passwords are being encrypted by the web server. If the\n  user information is not being encrypted when stored, this is a finding.",
        "fix": "Configure the web server to encrypt the user identifiers and\n  passwords when storing them on digital media."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000429-WSR-000113",
        "gid": "V-56031",
        "rid": "SV-70285r2_rule",
        "stig_id": "SRG-APP-000429-WSR-000113",
        "fix_id": "F-60909r1_fix",
        "cci": [
          "CCI-002476"
        ],
        "nist": [
          "SC-28 (1)",
          ""
        ]
      },
      "code": "control 'V-56031' do\n  title 'The NGINX web server must encrypt user identifiers and passwords.'\n  desc  \"When data is written to digital media, such as hard drives, mobile\n  computers, external/removable hard drives, personal digital assistants,\n  flash/thumb drives, etc., there is risk of data loss and data compromise. User\n  identities and passwords stored on the hard drive of the hosting hardware must\n  be encrypted to protect the data from easily being discovered and used by an\n  unauthorized user to access the hosted applications. The cryptographic\n  libraries and functionality used to store and retrieve the user identifiers and\n  passwords must be part of the web server.\"\n\n  desc 'check', \"Review the NGINX web server documentation and deployed configuration\n  to determine whether the web server is authorizing and managing users.\n\n  If the NGINX web server is not authorizing and managing users, this is check is Not\n  Applicable.\n\n  If the NGINX web server is the user authenticator and manager, verify that stored\n  user identifiers and passwords are being encrypted by the web server. If the\n  user information is not being encrypted when stored, this is a finding.\n  \"\n  desc 'fix', \"Configure the web server to encrypt the user identifiers and\n  passwords when storing them on digital media.\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000429-WSR-000113'\n  tag \"gid\": 'V-56031'\n  tag \"rid\": 'SV-70285r2_rule'\n  tag \"stig_id\": 'SRG-APP-000429-WSR-000113'\n  tag \"fix_id\": 'F-60909r1_fix'\n  tag \"cci\": ['CCI-002476']\n  tag \"nist\": ['SC-28 (1)', '']\n\n  if input('manages_auth') == false\n    impact 0.0\n    describe 'This check is NA because NGINX does not manage authentication.' do\n      skip 'This check is NA because NGINX does not manage authentication.'\n    end\n  else\n    describe \"This test requires a Manual Review: Verify that user identifiers and passwords\n    are being encrypted by the web server.\" do\n      skip \"This test requires a Manual Review: Verify that user identifiers and passwords\n      are being encrypted by the web server.\"\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-56031.rb",
        "line": 1
      },
      "id": "V-56031"
    },
    {
      "title": "The NGINX web server must use a logging mechanism that is configured to\nprovide a warning to the ISSO and SA when allocated record storage volume\nreaches 75% of maximum log record storage capacity.",
      "desc": "It is critical for the appropriate personnel to be aware if a system\nis at risk of failing to process logs as required. Log processing failures\ninclude: software/hardware errors, failures in the log capturing mechanisms,\nand log storage capacity being reached or exceeded.\n\n    If log capacity were to be exceeded, then events subsequently occurring\nwould not be recorded. Organizations shall define a maximum allowable\npercentage of storage capacity serving as an alarming threshold (e.g., web\nserver has exceeded 75% of log storage capacity allocated), at which time the\nweb server or the logging mechanism the web server utilizes will provide a\nwarning to the ISSO and SA at a minimum.\n\n    This requirement can be met by configuring the web server to utilize a\ndedicated log tool that meets this requirement.",
      "descriptions": {
        "default": "It is critical for the appropriate personnel to be aware if a system\nis at risk of failing to process logs as required. Log processing failures\ninclude: software/hardware errors, failures in the log capturing mechanisms,\nand log storage capacity being reached or exceeded.\n\n    If log capacity were to be exceeded, then events subsequently occurring\nwould not be recorded. Organizations shall define a maximum allowable\npercentage of storage capacity serving as an alarming threshold (e.g., web\nserver has exceeded 75% of log storage capacity allocated), at which time the\nweb server or the logging mechanism the web server utilizes will provide a\nwarning to the ISSO and SA at a minimum.\n\n    This requirement can be met by configuring the web server to utilize a\ndedicated log tool that meets this requirement.",
        "check": "Review the NGINX web server documentation and deployment\n  configuration settings to determine if the web server log system provides a\n  warning to the ISSO and SA when allocated record storage volume reaches 75% of\n  maximum record storage capacity.\n\n  Work with the SIEM administrator to determine if an alert is configured when\n  allocated record storage volume reaches 75% of maximum log record storage capacity.\n\n  If there is no alert configured, this is a finding.",
        "fix": "Work with the SIEM administrator to configure an alert when allocated\n  record storage volume reaches 75% of maximum log record storage capacity."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000359-WSR-000065",
        "gid": "V-55975",
        "rid": "SV-70229r2_rule",
        "stig_id": "SRG-APP-000359-WSR-000065",
        "fix_id": "F-60853r1_fix",
        "cci": [
          "CCI-001855"
        ],
        "nist": [
          "AU-5 (1)",
          ""
        ]
      },
      "code": "control 'V-55975' do\n  title \"The NGINX web server must use a logging mechanism that is configured to\nprovide a warning to the ISSO and SA when allocated record storage volume\nreaches 75% of maximum log record storage capacity.\"\n  desc  \"It is critical for the appropriate personnel to be aware if a system\nis at risk of failing to process logs as required. Log processing failures\ninclude: software/hardware errors, failures in the log capturing mechanisms,\nand log storage capacity being reached or exceeded.\n\n    If log capacity were to be exceeded, then events subsequently occurring\nwould not be recorded. Organizations shall define a maximum allowable\npercentage of storage capacity serving as an alarming threshold (e.g., web\nserver has exceeded 75% of log storage capacity allocated), at which time the\nweb server or the logging mechanism the web server utilizes will provide a\nwarning to the ISSO and SA at a minimum.\n\n    This requirement can be met by configuring the web server to utilize a\ndedicated log tool that meets this requirement.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and deployment\n  configuration settings to determine if the web server log system provides a\n  warning to the ISSO and SA when allocated record storage volume reaches 75% of\n  maximum record storage capacity.\n\n  Work with the SIEM administrator to determine if an alert is configured when\n  allocated record storage volume reaches 75% of maximum log record storage capacity.\n\n  If there is no alert configured, this is a finding.\n  \"\n  desc 'fix', \"Work with the SIEM administrator to configure an alert when allocated\n  record storage volume reaches 75% of maximum log record storage capacity.\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000359-WSR-000065'\n  tag \"gid\": 'V-55975'\n  tag \"rid\": 'SV-70229r2_rule'\n  tag \"stig_id\": 'SRG-APP-000359-WSR-000065'\n  tag \"fix_id\": 'F-60853r1_fix'\n  tag \"cci\": ['CCI-001855']\n  tag \"nist\": ['AU-5 (1)', '']\n\n  describe \"This test requires a Manual Review: Work with the SIEM admin to determine\n  if an alert is configured when allocated record storage volume reaches 75% of\n  maximum log record storage capacity.\" do\n    skip \"This test requires a Manual Review: Work with the SIEM admin to determine\n    if an alert is configured when allocated record storage volume reaches 75% of\n    maximum log record storage capacity.\"\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55975.rb",
        "line": 1
      },
      "id": "V-55975"
    },
    {
      "title": "The log information from the NGINX web server must be protected from\n  unauthorized deletion.",
      "desc": "Log data is essential in the investigation of events. The accuracy of\n  the information is always pertinent. Information that is not accurate does not\n  help in the revealing of potential security risks and may hinder the early\n  discovery of a system compromise. One of the first steps an attacker will\n  undertake is the modification or deletion of audit records to cover his tracks\n  and prolong discovery.\n\n    The web server must protect the log data from unauthorized deletion. This\n  can be done by the web server if the web server is also doing the logging\n  function. The web server may also use an external log system. In either case,\n  the logs must be protected from deletion by non-privileged users.",
      "descriptions": {
        "default": "Log data is essential in the investigation of events. The accuracy of\n  the information is always pertinent. Information that is not accurate does not\n  help in the revealing of potential security risks and may hinder the early\n  discovery of a system compromise. One of the first steps an attacker will\n  undertake is the modification or deletion of audit records to cover his tracks\n  and prolong discovery.\n\n    The web server must protect the log data from unauthorized deletion. This\n  can be done by the web server if the web server is also doing the logging\n  function. The web server may also use an external log system. In either case,\n  the logs must be protected from deletion by non-privileged users.",
        "check": "Review the NGINX web server documentation and deployed configuration\n  settings to determine if the web server logging features protect log information from\n  unauthorized deletion.\n\n  Check for the following:\n      # grep for 'access_log' and 'error_log' directives in the nginx.conf and any separated\n      include configuration file.\n\n  Execute the following commands:\n      # ls -alH <nginx log directory>\n      # ls -alH <path to access_log>/access.log\n      # ls -alH <path to error_log>/error.log\n\n  Note the owner and group permissions on these files. Only system administrators\n  and service accounts running the server should have permissions to the directory and files.\n    - The SA or service account should own the directory and files\n    - Permissions on the directory should be 750 or more restrictive\n    - Permissions on these files should be 640 or more restrictive\n\n  If any users other than those authorized have permission to delete log files, this is a finding.",
        "fix": "To protect the integrity of the data that is being captured in the log files,\n  ensure that only the members of the Auditors group, Administrators, and the user assigned\n  to run the web server software is granted permissions to delete the log files."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000120-WSR-000070",
        "gid": "V-41672",
        "rid": "SV-54249r3_rule",
        "stig_id": "SRG-APP-000120-WSR-000070",
        "fix_id": "F-47131r2_fix",
        "cci": [
          "CCI-000164"
        ],
        "nist": [
          "AU-9"
        ]
      },
      "code": "control 'V-41672' do\n  title \"The log information from the NGINX web server must be protected from\n  unauthorized deletion.\"\n  desc \"Log data is essential in the investigation of events. The accuracy of\n  the information is always pertinent. Information that is not accurate does not\n  help in the revealing of potential security risks and may hinder the early\n  discovery of a system compromise. One of the first steps an attacker will\n  undertake is the modification or deletion of audit records to cover his tracks\n  and prolong discovery.\n\n    The web server must protect the log data from unauthorized deletion. This\n  can be done by the web server if the web server is also doing the logging\n  function. The web server may also use an external log system. In either case,\n  the logs must be protected from deletion by non-privileged users.\n  \"\n  desc 'check', \"Review the NGINX web server documentation and deployed configuration\n  settings to determine if the web server logging features protect log information from\n  unauthorized deletion.\n\n  Check for the following:\n      # grep for 'access_log' and 'error_log' directives in the nginx.conf and any separated\n      include configuration file.\n\n  Execute the following commands:\n      # ls -alH <nginx log directory>\n      # ls -alH <path to access_log>/access.log\n      # ls -alH <path to error_log>/error.log\n\n  Note the owner and group permissions on these files. Only system administrators\n  and service accounts running the server should have permissions to the directory and files.\n    - The SA or service account should own the directory and files\n    - Permissions on the directory should be 750 or more restrictive\n    - Permissions on these files should be 640 or more restrictive\n\n  If any users other than those authorized have permission to delete log files, this is a finding.\n  \"\n  desc 'fix', \"To protect the integrity of the data that is being captured in the log files,\n  ensure that only the members of the Auditors group, Administrators, and the user assigned\n  to run the web server software is granted permissions to delete the log files.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000120-WSR-000070'\n  tag \"gid\": 'V-41672'\n  tag \"rid\": 'SV-54249r3_rule'\n  tag \"stig_id\": 'SRG-APP-000120-WSR-000070'\n  tag \"fix_id\": 'F-47131r2_fix'\n  tag \"cci\": ['CCI-000164']\n  tag \"nist\": %w(AU-9)\n\n  # nginx log directory should have 750 permissions\n  describe file(input('nginx_log_path')) do\n    its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n    its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n    it { should_not be_more_permissive_than('0750') }\n  end\n\n  # log file in docker are symlinks\n  if virtualization.system.eql?('docker')\n    # nginx access log file should have 660 permissions\n    describe file(input('access_log_path')) do\n      its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n      its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n    end\n\n    # nginx error log file should have 660 permissions\n    describe file(input('error_log_path')) do\n      its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n      its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n    end\n  else\n    # nginx access log file should have 660 permissions\n    describe file(input('access_log_path')) do\n      its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n      its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n      it { should_not be_more_permissive_than('0640') }\n    end\n\n    # nginx error log file should have 660 permissions\n    describe file(input('error_log_path')) do\n      its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n      its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n      it { should_not be_more_permissive_than('0640') }\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41672.rb",
        "line": 1
      },
      "id": "V-41672"
    },
    {
      "title": "The NGINX web server must set an inactive timeout for sessions.",
      "desc": "Leaving sessions open indefinitely is a major security risk. An\nattacker can easily use an already authenticated session to access the hosted\napplication as the previously authenticated user. By closing sessions after a\nset period of inactivity, the web server can make certain that those sessions\nthat are not closed through the user logging out of an application are\neventually closed.\n\n    Acceptable values are 5 minutes for high-value applications, 10 minutes for\nmedium-value applications, and 20 minutes for low-value applications.",
      "descriptions": {
        "default": "Leaving sessions open indefinitely is a major security risk. An\nattacker can easily use an already authenticated session to access the hosted\napplication as the previously authenticated user. By closing sessions after a\nset period of inactivity, the web server can make certain that those sessions\nthat are not closed through the user logging out of an application are\neventually closed.\n\n    Acceptable values are 5 minutes for high-value applications, 10 minutes for\nmedium-value applications, and 20 minutes for low-value applications.",
        "check": "Review the hosted applications, NGINX web server documentation\n  and deployed configuration to verify that the web server will close an open session\n  after a configurable time of inactivity.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  To view the timeout values enter the following commands:\n\n    # grep ''client_body_timeout'' on the nginx.conf file and any separate included\n    configuration files\n\n    # grep ''client_header_timeout'' on the nginx.conf file and any separate included\n    configuration files\n\n    # grep 'keepalive_timeout' in the nginx.conf and any separated include\n        configuration file.\n\n  If the values of the 'client_body_timeout' and 'client_header_timeout' directives are\n  not set to 10 seconds (10s) or less,  this is a finding.\n\n  If the value of  'keepalive_timeout' directive is not set to 5 (seconds) or less,\n  this is a finding.",
        "fix": "Configure the NGINX web server to include the 'client_body_timeout',\n  'client_header_timeout', and 'keepalive_timeout' in the NGINX configuration file(s).\n  Set the value of 'client_body_timeout' and 'client_header_timeout to be 10 seconds or\n  less. Set the value of 'keep_alive_timeout' to be 5 seconds or less.\n\n  Example:\n    client_body_timeout   10s;\n    client_header_timeout 10s;\n    keepalive_timout 5s 5s;"
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000295-WSR-000134",
        "gid": "V-55949",
        "rid": "SV-70203r2_rule",
        "stig_id": "SRG-APP-000295-WSR-000134",
        "fix_id": "F-60827r1_fix",
        "cci": [
          "CCI-002361"
        ],
        "nist": [
          "AC-12"
        ]
      },
      "code": "control 'V-55949' do\n  title 'The NGINX web server must set an inactive timeout for sessions.'\n  desc  \"Leaving sessions open indefinitely is a major security risk. An\nattacker can easily use an already authenticated session to access the hosted\napplication as the previously authenticated user. By closing sessions after a\nset period of inactivity, the web server can make certain that those sessions\nthat are not closed through the user logging out of an application are\neventually closed.\n\n    Acceptable values are 5 minutes for high-value applications, 10 minutes for\nmedium-value applications, and 20 minutes for low-value applications.\n  \"\n\n  desc 'check', \"Review the hosted applications, NGINX web server documentation\n  and deployed configuration to verify that the web server will close an open session\n  after a configurable time of inactivity.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  To view the timeout values enter the following commands:\n\n    # grep ''client_body_timeout'' on the nginx.conf file and any separate included\n    configuration files\n\n    # grep ''client_header_timeout'' on the nginx.conf file and any separate included\n    configuration files\n\n    # grep 'keepalive_timeout' in the nginx.conf and any separated include\n        configuration file.\n\n  If the values of the 'client_body_timeout' and 'client_header_timeout' directives are\n  not set to 10 seconds (10s) or less,  this is a finding.\n\n  If the value of  'keepalive_timeout' directive is not set to 5 (seconds) or less,\n  this is a finding.\"\n\n  desc 'fix', \"Configure the NGINX web server to include the 'client_body_timeout',\n  'client_header_timeout', and 'keepalive_timeout' in the NGINX configuration file(s).\n  Set the value of 'client_body_timeout' and 'client_header_timeout to be 10 seconds or\n  less. Set the value of 'keep_alive_timeout' to be 5 seconds or less.\n\n  Example:\n    client_body_timeout   10s;\n    client_header_timeout 10s;\n    keepalive_timout 5s 5s;\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000295-WSR-000134'\n  tag \"gid\": 'V-55949'\n  tag \"rid\": 'SV-70203r2_rule'\n  tag \"stig_id\": 'SRG-APP-000295-WSR-000134'\n  tag \"fix_id\": 'F-60827r1_fix'\n  tag \"cci\": ['CCI-002361']\n  tag \"nist\": %w(AC-12)\n\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      describe 'The http context client_header_timeout value' do\n        it 'should exist and should be set to 10 (seconds) or less.' do\n          expect(http).to(include 'client_header_timeout')\n          expect(http['client_header_timeout'].join.to_i).to(be <= 10)\n        end\n      end\n      describe 'The http context client_body_timeout value' do\n        it 'should exist and should be set to 10 (seconds) or less.' do\n          expect(http).to(include 'client_body_timeout')\n          expect(http['client_body_timeout'].join.to_i).to(be <= 10)\n        end\n      end\n      describe 'The http context keep-alive value' do\n        it 'should exist and should be set to 5 (seconds) or less.' do\n          expect(http).to(include 'keepalive_timeout')\n          http['keepalive_timeout'].each do |http_alive|\n            expect(http_alive[0].to_i).to(be <= 5)\n            expect(http_alive[1].to_i).to(be <= 5)\n          end\n        end\n      end\n    end\n  end\n\n  if nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.each do |server|\n      describe 'The server context client_header_timeout value' do\n        it 'should be set to 10 (seconds) or less, if found.' do\n          unless server.params['client_header_timeout'].nil?\n            expect(server.params['client_header_timeout'].join.to_i).to(be <= 10)\n          end\n        end\n      end\n      describe 'The server context client_body_timeout value' do\n        it 'should be set to 10 (seconds) or less, if found' do\n          unless server.params['client_body_timeout'].nil?\n            expect(server.params['client_body_timeout'].join.to_i).to(be <= 10)\n          end\n        end\n      end\n      describe 'The server context keep-alive value' do\n        it 'should be set to 5 (seconds) or less, if found.' do\n          unless server.params['keepalive_timeout'].nil?\n            server.params['keepalive_timeout'].each do |server_alive|\n              expect(server_alive[0].to_i).to(be <= 5)\n              expect(server_alive[1].to_i).to(be <= 5)\n            end\n          end\n        end\n      end\n    end\n  end\n\n  if nginx_conf.locations.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.locations.each do |location|\n      describe 'The location context keep-alive value' do\n        it 'should be set to 5 (seconds) or less, if found.' do\n          unless location.params['keepalive_timeout'].nil?\n            location.params['keepalive_timeout'].each do |location_alive|\n              expect(location_alive[0].to_i).to(be <= 5)\n              expect(location_alive[1].to_i).to(be <= 5)\n            end\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55949.rb",
        "line": 1
      },
      "id": "V-55949"
    },
    {
      "title": "The NGINX web server must perform RFC 5280-compliant certification path\n  validation.",
      "desc": "A certificate's certification path is the path from the end entity\n  certificate to a trusted root certification authority (CA). Certification path\n  validation is necessary for a relying party to make an informed decision\n  regarding acceptance of an end entity certificate. Certification path\n  validation includes checks such as certificate issuer trust, time validity and\n  revocation status for each certificate in the certification path. Revocation\n  status information for CA and subject certificates in a certification path is\n  commonly provided via certificate revocation lists (CRLs) or online certificate\n  status protocol (OCSP) responses.",
      "descriptions": {
        "default": "A certificate's certification path is the path from the end entity\n  certificate to a trusted root certification authority (CA). Certification path\n  validation is necessary for a relying party to make an informed decision\n  regarding acceptance of an end entity certificate. Certification path\n  validation includes checks such as certificate issuer trust, time validity and\n  revocation status for each certificate in the certification path. Revocation\n  status information for CA and subject certificates in a certification path is\n  commonly provided via certificate revocation lists (CRLs) or online certificate\n  status protocol (OCSP) responses.",
        "check": "Review the NGINX web server documentation and deployed configuration\n  to determine whether the web server provides PKI functionality that validates certification\n  paths in accordance with RFC 5280.\n\n  If PKI is not being used, this is check is Not Applicable.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n    # grep the 'ssl_verify_client' and 'ssl_verify_depth' directives in the server\n    context of the nginx.conf and any separated include configuration file.\n\n  If the 'ssl_verify_client' and 'ssl_verify_depth' directives cannot be found in NGINX\n  configuration files, this check is Not Applicable.\n\n  If the 'ssl_verify_client' directive is not set to 'on',\n  this is a finding.\n\n  A 'ssl_very_depth' setting of '0' would allow self-signed CAs to validate client\n  certificates. If 'ssl_verify_depth' directive is set to '0', this is a finding.",
        "fix": "Ensure that client verification is enabled. For each enabled hosted application\n  on the server, enable and set 'ssl_verify_client' to 'on' and and ensure that the server is\n  configured to verify the client certificate by enabling 'ssl_verify_depth'.\n\n  Example:\n\n  ssl_verify_client on;\n  ssl_verify_depth 1;"
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000175-WSR-000095",
        "gid": "V-41730",
        "rid": "SV-54307r3_rule",
        "stig_id": "SRG-APP-000175-WSR-000095",
        "fix_id": "F-47189r4_fix",
        "cci": [
          "CCI-000185"
        ],
        "nist": [
          "IA-5 (2) (a)",
          ""
        ]
      },
      "code": "control 'V-41730' do\n  title \"The NGINX web server must perform RFC 5280-compliant certification path\n  validation.\"\n  desc \"A certificate's certification path is the path from the end entity\n  certificate to a trusted root certification authority (CA). Certification path\n  validation is necessary for a relying party to make an informed decision\n  regarding acceptance of an end entity certificate. Certification path\n  validation includes checks such as certificate issuer trust, time validity and\n  revocation status for each certificate in the certification path. Revocation\n  status information for CA and subject certificates in a certification path is\n  commonly provided via certificate revocation lists (CRLs) or online certificate\n  status protocol (OCSP) responses.\"\n\n  desc 'check', \"Review the NGINX web server documentation and deployed configuration\n  to determine whether the web server provides PKI functionality that validates certification\n  paths in accordance with RFC 5280.\n\n  If PKI is not being used, this is check is Not Applicable.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n    # grep the 'ssl_verify_client' and 'ssl_verify_depth' directives in the server\n    context of the nginx.conf and any separated include configuration file.\n\n  If the 'ssl_verify_client' and 'ssl_verify_depth' directives cannot be found in NGINX\n  configuration files, this check is Not Applicable.\n\n  If the 'ssl_verify_client' directive is not set to 'on',\n  this is a finding.\n\n  A 'ssl_very_depth' setting of '0' would allow self-signed CAs to validate client\n  certificates. If 'ssl_verify_depth' directive is set to '0', this is a finding.\n  \"\n  desc 'fix', \"Ensure that client verification is enabled. For each enabled hosted application\n  on the server, enable and set 'ssl_verify_client' to 'on' and and ensure that the server is\n  configured to verify the client certificate by enabling 'ssl_verify_depth'.\n\n  Example:\n\n  ssl_verify_client on;\n  ssl_verify_depth 1;  \"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000175-WSR-000095'\n  tag \"gid\": 'V-41730'\n  tag \"rid\": 'SV-54307r3_rule'\n  tag \"stig_id\": 'SRG-APP-000175-WSR-000095'\n  tag \"fix_id\": 'F-47189r4_fix'\n  tag \"cci\": ['CCI-000185']\n  tag \"nist\": ['IA-5 (2) (a)', '']\n\n  if input('uses_pki')\n    if nginx_conf.servers.nil?\n      impact 0.0\n      describe 'This check is NA because NGINX has not been configured to serve files.' do\n        skip 'This check is NA because NGINX has not been configured to serve files.'\n      end\n    else\n      nginx_conf.servers.each do |server|\n        if server.params['ssl_verify_client'].nil?\n          impact 0.0\n          describe 'This check is NA because the ssl_verify_client directive has not been configured.' do\n            skip 'This check is NA because the ssl_verify_client directive has not been configured.'\n          end\n        else\n          server.params['ssl_verify_client'].each do |ssl_verify_client|\n            describe 'The ssl_verify_client directive' do\n              it \"should be set to 'on'.\" do\n                expect(ssl_verify_client).to(cmp('on'))\n              end\n            end\n          end\n        end\n        if server.params['ssl_verify_depth'].nil?\n          impact 0.0\n          describe 'This check is NA because the ssl_verify_depth directive has not been configured.' do\n            skip 'This check is NA because the ssl_verify_depth directive has not been configured.'\n          end\n        else\n          server.params['ssl_verify_depth'].each do |ssl_verify_depth|\n            describe 'The ssl_verify_depth directive' do\n              it \"should not equal '0'.\" do\n                expect(ssl_verify_depth).not_to(cmp('0'))\n              end\n            end\n          end\n        end\n      end\n    end\n  else\n    impact 0.0\n    describe 'This check is NA because NGINX does not use PKI.' do\n      skip 'This check is NA because NGINX does not use PKI.'\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41730.rb",
        "line": 1
      },
      "id": "V-41730"
    },
    {
      "title": "The NGINX web server must be configured in accordance with the security\nconfiguration settings based on DoD security configuration or implementation\nguidance, including STIGs, NSA configuration guides, CTOs, and DTMs.",
      "desc": "Configuring the web server to implement organization-wide security\nimplementation guides and security checklists guarantees compliance with\nfederal standards and establishes a common security baseline across the DoD\nthat reflects the most restrictive security posture consistent with operational\nrequirements.\n\n    Configuration settings are the set of parameters that can be changed that\naffect the security posture and/or functionality of the system.\nSecurity-related parameters are those parameters impacting the security state\nof the web server, including the parameters required to satisfy other security\ncontrol requirements.",
      "descriptions": {
        "default": "Configuring the web server to implement organization-wide security\nimplementation guides and security checklists guarantees compliance with\nfederal standards and establishes a common security baseline across the DoD\nthat reflects the most restrictive security posture consistent with operational\nrequirements.\n\n    Configuration settings are the set of parameters that can be changed that\naffect the security posture and/or functionality of the system.\nSecurity-related parameters are those parameters impacting the security state\nof the web server, including the parameters required to satisfy other security\ncontrol requirements.",
        "check": "Review the NGINX web server documentation and deployed\n  configuration to determine if web server is configured in accordance with\n  the security configuration settings based on DoD security configuration or\n  implementation guidance.\n\n  Review the website to determine if 'HTTP' and 'HTTPS' are used in accordance\n  with well-known ports (e.g., 80 and 443) or those ports and services as registered\n  and approved for use by the DoD Ports, Protocols, and Services Management (PPSM).\n\n  Verify that any variation in PPS is documented, registered, and approved by the PPSM.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n    # grep for all 'listen' directives in the server context of the nginx.conf and\n    any separated include configuration file.\n\n  If the 'listen' directive cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  If the 'listen' directive is not configured to use port 80 (for HTTP) or port\n  443 (for HTTPS) and port configured is not approved for used by PPSM, this is\n  a finding.",
        "fix": "Configure the 'listen' directives in the NGINX configuration file(s)\n  to use IANA well-known ports for 'HTTP' and 'HTTPS'."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000516-WSR-000174",
        "gid": "V-55985",
        "rid": "SV-70239r2_rule",
        "stig_id": "SRG-APP-000516-WSR-000174",
        "fix_id": "F-60863r1_fix",
        "cci": [
          "CCI-000366"
        ],
        "nist": [
          "CM-6 b",
          ""
        ]
      },
      "code": "control 'V-55985' do\n  title \"The NGINX web server must be configured in accordance with the security\nconfiguration settings based on DoD security configuration or implementation\nguidance, including STIGs, NSA configuration guides, CTOs, and DTMs.\"\n  desc  \"Configuring the web server to implement organization-wide security\nimplementation guides and security checklists guarantees compliance with\nfederal standards and establishes a common security baseline across the DoD\nthat reflects the most restrictive security posture consistent with operational\nrequirements.\n\n    Configuration settings are the set of parameters that can be changed that\naffect the security posture and/or functionality of the system.\nSecurity-related parameters are those parameters impacting the security state\nof the web server, including the parameters required to satisfy other security\ncontrol requirements.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and deployed\n  configuration to determine if web server is configured in accordance with\n  the security configuration settings based on DoD security configuration or\n  implementation guidance.\n\n  Review the website to determine if 'HTTP' and 'HTTPS' are used in accordance\n  with well-known ports (e.g., 80 and 443) or those ports and services as registered\n  and approved for use by the DoD Ports, Protocols, and Services Management (PPSM).\n\n  Verify that any variation in PPS is documented, registered, and approved by the PPSM.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n    # grep for all 'listen' directives in the server context of the nginx.conf and\n    any separated include configuration file.\n\n  If the 'listen' directive cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  If the 'listen' directive is not configured to use port 80 (for HTTP) or port\n  443 (for HTTPS) and port configured is not approved for used by PPSM, this is\n  a finding.\n  \"\n  desc 'fix', \"Configure the 'listen' directives in the NGINX configuration file(s)\n  to use IANA well-known ports for 'HTTP' and 'HTTPS'.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000516-WSR-000174'\n  tag \"gid\": 'V-55985'\n  tag \"rid\": 'SV-70239r2_rule'\n  tag \"stig_id\": 'SRG-APP-000516-WSR-000174'\n  tag \"fix_id\": 'F-60863r1_fix'\n  tag \"cci\": ['CCI-000366']\n  tag \"nist\": ['CM-6 b', '']\n\n  if nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.entries.each do |server|\n      if server.params['listen'].nil?\n        impact 0.0\n        describe 'This test is NA because the listen directive has not been configured.' do\n          skip 'This test is NA because the listen directive has not been configured.'\n        end\n      else\n        server.params['listen'].each do |listen|\n          describe 'The listen directive' do\n            listen_address = listen.join\n            it 'should include the specific IP address and port' do\n              expect(listen_address).to(match(/[0-9]+(?:\\.[0-9]+){3}|[a-zA-Z]:[0-9]+/))\n            end\n          end\n          describe 'The listening port' do\n            listen_port = listen.join.split(':')[1]\n            listen_port = listen_port.tr('ssl', '') unless listen_port.nil?\n            it 'should be an approved port.' do\n              expect(listen_port).to(be_in(input('authorized_ports')))\n            end\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55985.rb",
        "line": 1
      },
      "id": "V-55985"
    },
    {
      "title": "The NGINX web server must be protected from being stopped by a\nnon-privileged user.",
      "desc": "An attacker has at least two reasons to stop a web server. The first\nis to cause a DoS, and the second is to put in place changes the attacker made\nto the web server configuration.\n\n    To prohibit an attacker from stopping the web server, the process ID (pid)\nof the web server and the utilities used to start/stop the web server must be\nprotected from access by non-privileged users. By knowing the pid and having\naccess to the web server utilities, a non-privileged user has a greater\ncapability of stopping the server, whether intentionally or unintentionally.",
      "descriptions": {
        "default": "An attacker has at least two reasons to stop a web server. The first\nis to cause a DoS, and the second is to put in place changes the attacker made\nto the web server configuration.\n\n    To prohibit an attacker from stopping the web server, the process ID (pid)\nof the web server and the utilities used to start/stop the web server must be\nprotected from access by non-privileged users. By knowing the pid and having\naccess to the web server utilities, a non-privileged user has a greater\ncapability of stopping the server, whether intentionally or unintentionally.",
        "check": "Review the NGINX web server documentation and deployed\n  configuration to determine where the process ID is stored and which utilities\n  are used to start/stop the web server.\n\n  If the pid directive cannot be found, this check is Not Applicable.\n\n  Determine where the 'nginx.pid' file is located by running the following command:\n\n    # find / -name 'nginx.pid'\n\n  This file is automatically generated upon service start. Verify the file owner/group\n  is of an administrative service account:\n\n    # ls -lah <'nginx.pid location'>/nginx.pid\n\n  If the file owner/group is not an administrative service account, this is a finding.\n\n  Verify the service utilities used to manage the NGINX service owner/group is of an\n  administrative service account.\n\n    # ls -lah /usr/sbin/service\n    # ls -lah /usr/sbin/nginx\n\n  If the service utilities owner/group is not an administrative service account,\n  this is a finding.\n\n  Determine whether the process ID and the utilities are protected from non-privileged\n  users.\n\n  If the process ID and the utilities are not protected from non-privileged users,\n  this is a finding.",
        "fix": "Review the web server documentation and deployed configuration to\n  determine where the process ID is stored and which utilities are used to start/stop\n  the web server.\n\n  If the pid directive cannot be found in the NGINX configuration files, this check is\n  Not Applicable.\n\n  Determine where the 'nginx.pid' file is located by running the following command:\n\n    # find / -name 'nginx.pid'\n\n  Run the following commands:\n\n    # cd <'nginx.pid location'>/\n    # chown <'service account'> nginx.pid\n    # chmod 644 nginx.pid\n    # cd /usr/sbin\n    # chown <'service account'> service nginx\n    # chmod 550 service nginx"
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000435-WSR-000147",
        "gid": "V-55999",
        "rid": "SV-70253r2_rule",
        "stig_id": "SRG-APP-000435-WSR-000147",
        "fix_id": "F-60877r1_fix",
        "cci": [
          "CCI-002385"
        ],
        "nist": [
          "SC-5"
        ]
      },
      "code": "control 'V-55999' do\n  title \"The NGINX web server must be protected from being stopped by a\nnon-privileged user.\"\n  desc  \"An attacker has at least two reasons to stop a web server. The first\nis to cause a DoS, and the second is to put in place changes the attacker made\nto the web server configuration.\n\n    To prohibit an attacker from stopping the web server, the process ID (pid)\nof the web server and the utilities used to start/stop the web server must be\nprotected from access by non-privileged users. By knowing the pid and having\naccess to the web server utilities, a non-privileged user has a greater\ncapability of stopping the server, whether intentionally or unintentionally.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and deployed\n  configuration to determine where the process ID is stored and which utilities\n  are used to start/stop the web server.\n\n  If the pid directive cannot be found, this check is Not Applicable.\n\n  Determine where the 'nginx.pid' file is located by running the following command:\n\n    # find / -name 'nginx.pid'\n\n  This file is automatically generated upon service start. Verify the file owner/group\n  is of an administrative service account:\n\n    # ls -lah <'nginx.pid location'>/nginx.pid\n\n  If the file owner/group is not an administrative service account, this is a finding.\n\n  Verify the service utilities used to manage the NGINX service owner/group is of an\n  administrative service account.\n\n    # ls -lah /usr/sbin/service\n    # ls -lah /usr/sbin/nginx\n\n  If the service utilities owner/group is not an administrative service account,\n  this is a finding.\n\n  Determine whether the process ID and the utilities are protected from non-privileged\n  users.\n\n  If the process ID and the utilities are not protected from non-privileged users,\n  this is a finding.\n  \"\n  desc 'fix', \"Review the web server documentation and deployed configuration to\n  determine where the process ID is stored and which utilities are used to start/stop\n  the web server.\n\n  If the pid directive cannot be found in the NGINX configuration files, this check is\n  Not Applicable.\n\n  Determine where the 'nginx.pid' file is located by running the following command:\n\n    # find / -name 'nginx.pid'\n\n  Run the following commands:\n\n    # cd <'nginx.pid location'>/\n    # chown <'service account'> nginx.pid\n    # chmod 644 nginx.pid\n    # cd /usr/sbin\n    # chown <'service account'> service nginx\n    # chmod 550 service nginx\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000435-WSR-000147'\n  tag \"gid\": 'V-55999'\n  tag \"rid\": 'SV-70253r2_rule'\n  tag \"stig_id\": 'SRG-APP-000435-WSR-000147'\n  tag \"fix_id\": 'F-60877r1_fix'\n  tag \"cci\": ['CCI-002385']\n  tag \"nist\": %w(SC-5)\n\n  if nginx_conf.params['pid'].nil?\n    impact 0.0\n    describe 'This check is NA because the pid directive has not been configured.' do\n      skip 'This check is NA because the pid directive has not been configured.'\n    end\n  else\n    describe file(nginx_conf.params['pid'].join) do\n      it { should exist }\n      its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n      its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n      it { should_not be_more_permissive_than('0644') }\n    end\n    describe file('/usr/sbin/nginx') do\n      it { should exist }\n      its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n      its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n      it { should_not be_more_permissive_than('0550') }\n    end\n    describe file('/usr/sbin/service') do\n      it { should exist }\n      its('owner') { should be_in input('sys_admin').clone << input('nginx_owner') }\n      its('group') { should be_in input('sys_admin_group').clone << input('nginx_group') }\n      it { should_not be_more_permissive_than('0550') }\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55999.rb",
        "line": 1
      },
      "id": "V-55999"
    },
    {
      "title": "The NGINX web server must limit the character set used for data entry.",
      "desc": "Invalid user input occurs when a user inserts data or characters into\na hosted application's data entry field and the hosted application is\nunprepared to process that data. This results in unanticipated application\nbehavior, potentially leading to an application compromise. Invalid user input\nis one of the primary methods employed when attempting to compromise an\napplication.\n\n    An attacker can also enter Unicode into hosted applications in an effort to\nbreak out of the document home or root home directory or to bypass security\nchecks.\n\n    The web server, by defining the character set available for data entry, can\ntrap efforts to bypass security checks or to compromise an application.",
      "descriptions": {
        "default": "Invalid user input occurs when a user inserts data or characters into\na hosted application's data entry field and the hosted application is\nunprepared to process that data. This results in unanticipated application\nbehavior, potentially leading to an application compromise. Invalid user input\nis one of the primary methods employed when attempting to compromise an\napplication.\n\n    An attacker can also enter Unicode into hosted applications in an effort to\nbreak out of the document home or root home directory or to bypass security\nchecks.\n\n    The web server, by defining the character set available for data entry, can\ntrap efforts to bypass security checks or to compromise an application.",
        "check": "Review the NGINX web server documentation and deployed configuration\n  to determine what the data set is for data entry.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  Check for the following:\n      # grep the 'charset' directive in the http, server, and location context of\n      the nginx.conf and any separated include configuration file.\n\n  If the 'charset' directive does not exist or is not configured to use the charsets expected by the\n  host application, this is a finding.",
        "fix": "Configure the NGINX web server to include the 'charset' directive\n  and use the character sets the application expects."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000251-WSR-000157",
        "gid": "V-41852",
        "rid": "SV-54429r3_rule",
        "stig_id": "SRG-APP-000251-WSR-000157",
        "fix_id": "F-47311r2_fix",
        "cci": [
          "CCI-001310"
        ],
        "nist": [
          "SI-10"
        ]
      },
      "code": "control 'V-41852' do\n  title 'The NGINX web server must limit the character set used for data entry.'\n  desc  \"Invalid user input occurs when a user inserts data or characters into\na hosted application's data entry field and the hosted application is\nunprepared to process that data. This results in unanticipated application\nbehavior, potentially leading to an application compromise. Invalid user input\nis one of the primary methods employed when attempting to compromise an\napplication.\n\n    An attacker can also enter Unicode into hosted applications in an effort to\nbreak out of the document home or root home directory or to bypass security\nchecks.\n\n    The web server, by defining the character set available for data entry, can\ntrap efforts to bypass security checks or to compromise an application.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and deployed configuration\n  to determine what the data set is for data entry.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  Check for the following:\n      # grep the 'charset' directive in the http, server, and location context of\n      the nginx.conf and any separated include configuration file.\n\n  If the 'charset' directive does not exist or is not configured to use the charsets expected by the\n  host application, this is a finding.\n  \"\n  desc 'fix', \"Configure the NGINX web server to include the 'charset' directive\n  and use the character sets the application expects.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000251-WSR-000157'\n  tag \"gid\": 'V-41852'\n  tag \"rid\": 'SV-54429r3_rule'\n  tag \"stig_id\": 'SRG-APP-000251-WSR-000157'\n  tag \"fix_id\": 'F-47311r2_fix'\n  tag \"cci\": ['CCI-001310']\n  tag \"nist\": %w(SI-10)\n\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      describe 'Charset directive' do\n        it 'should exist and be configured to the expected value in the http context.' do\n          expect(http).to(include 'charset')\n          expect(http['charset'].join).to(cmp(input('charset_required')))\n        end\n      end\n    end\n  end\n\n  if nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.each do |server|\n      describe 'Charset' do\n        it 'should be configured to the expected value if found in the server context.' do\n          expect(server.params['charset'].join).to(cmp(input('charset_required'))) unless server.params['charset'].nil?\n        end\n      end\n    end\n  end\n\n  if nginx_conf.locations.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.locations.each do |location|\n      describe 'Charset' do\n        it 'should be configured to the expected value if found in the location context.' do\n          unless location.params['charset'].nil?\n            expect(location.params['charset'].join).to(cmp(input('charset_required')))\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41852.rb",
        "line": 1
      },
      "id": "V-41852"
    },
    {
      "title": "Remote access to the NGINX web server must follow access policy or work in\nconjunction with enterprise tools designed to enforce policy requirements.",
      "desc": "Remote access to the web server is any access that communicates\nthrough an external, non-organization-controlled network. Remote access can be\nused to access hosted applications or to perform management functions.\n\n    A web server can be accessed remotely and must be able to enforce remote\naccess policy requirements or work in conjunction with enterprise tools\ndesigned to enforce policy requirements.\n\n    Examples of the web server enforcing a remote access policy are\nimplementing IP filtering rules, using https instead of http for communication,\nimplementing secure tokens, and validating users.",
      "descriptions": {
        "default": "Remote access to the web server is any access that communicates\nthrough an external, non-organization-controlled network. Remote access can be\nused to access hosted applications or to perform management functions.\n\n    A web server can be accessed remotely and must be able to enforce remote\naccess policy requirements or work in conjunction with enterprise tools\ndesigned to enforce policy requirements.\n\n    Examples of the web server enforcing a remote access policy are\nimplementing IP filtering rules, using https instead of http for communication,\nimplementing secure tokens, and validating users.",
        "check": "Review the NGINX web server product documentation and deployed\n  configuration to determine if the server or an enterprise tool is enforcing the\n  organization's requirements for remote connections.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  If the an enterprise tools is enforcing the organization's requirements for remote\n  connections, this control must be reviewed manually.\n\n  If NGINX is enforcing the requirements for remote connections, check for the following:\n      # grep for a 'deny' directive in the location context of the nginx.conf and any\n      separated include configuration file.\n\n  Verify that there is a 'deny all' set in each location context to deny all IP addresses\n  by default and allow only approved IP addresses.\n\n  If a 'deny all' is not set in each location, this is a finding.",
        "fix": "Add a 'deny all' in each location context in the NGINX configuration\n  file(s) to enforce the remote access policy.\n\n  Then add 'allow' directive(s) in each location context in the NGINX configuration file(s)\n  and configure it to only allow approved IP addresses."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000315-WSR-000003",
        "gid": "V-55953",
        "rid": "SV-70207r2_rule",
        "stig_id": "SRG-APP-000315-WSR-000003",
        "fix_id": "F-60831r2_fix",
        "cci": [
          "CCI-002314"
        ],
        "nist": [
          "AC-17 (1)",
          ""
        ]
      },
      "code": "control 'V-55953' do\n  title \"Remote access to the NGINX web server must follow access policy or work in\nconjunction with enterprise tools designed to enforce policy requirements.\"\n  desc  \"Remote access to the web server is any access that communicates\nthrough an external, non-organization-controlled network. Remote access can be\nused to access hosted applications or to perform management functions.\n\n    A web server can be accessed remotely and must be able to enforce remote\naccess policy requirements or work in conjunction with enterprise tools\ndesigned to enforce policy requirements.\n\n    Examples of the web server enforcing a remote access policy are\nimplementing IP filtering rules, using https instead of http for communication,\nimplementing secure tokens, and validating users.\n  \"\n\n  desc 'check', \"Review the NGINX web server product documentation and deployed\n  configuration to determine if the server or an enterprise tool is enforcing the\n  organization's requirements for remote connections.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  If the an enterprise tools is enforcing the organization's requirements for remote\n  connections, this control must be reviewed manually.\n\n  If NGINX is enforcing the requirements for remote connections, check for the following:\n      # grep for a 'deny' directive in the location context of the nginx.conf and any\n      separated include configuration file.\n\n  Verify that there is a 'deny all' set in each location context to deny all IP addresses\n  by default and allow only approved IP addresses.\n\n  If a 'deny all' is not set in each location, this is a finding.\n  \"\n  desc 'fix', \"Add a 'deny all' in each location context in the NGINX configuration\n  file(s) to enforce the remote access policy.\n\n  Then add 'allow' directive(s) in each location context in the NGINX configuration file(s)\n  and configure it to only allow approved IP addresses.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000315-WSR-000003'\n  tag \"gid\": 'V-55953'\n  tag \"rid\": 'SV-70207r2_rule'\n  tag \"stig_id\": 'SRG-APP-000315-WSR-000003'\n  tag \"fix_id\": 'F-60831r2_fix'\n  tag \"cci\": ['CCI-002314']\n  tag \"nist\": ['AC-17 (1)', '']\n\n  if input('uses_enterprise_tool') == 'true'\n    describe \"This test requires a Manual Review: Determine if the enterprise tool is enforcing\n    the organization's requirements for remote connections.\" do\n      skip \"This test requires a Manual Review: Determine if the enterprise tool is enforcing\n      the organization's requirements for remote connections.\"\n    end\n  elsif nginx_conf.locations.empty?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.locations.each do |location|\n      deny_values = []\n      deny_values.push(location.params['deny']) unless location.params['deny'].nil?\n      describe 'Each location context' do\n        it 'should include an deny all directive.' do\n          expect(deny_values.to_s).to(include 'all')\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55953.rb",
        "line": 1
      },
      "id": "V-55953"
    },
    {
      "title": "Web server cookies, such as session cookies, sent to the client using\nSSL/TLS must not be compressed.",
      "desc": "A cookie is used when a web server needs to share data with the\nclient's browser. The data is often used to remember the client when the client\nreturns to the hosted application at a later date. A session cookie is a\nspecial type of cookie used to remember the client during the session. The\ncookie will contain the session identifier (ID) and may contain authentication\ndata to the hosted application. To protect this data from easily being\ncompromised, the cookie can be encrypted.\n\n    When a cookie is sent encrypted via SSL/TLS, an attacker must spend a great\ndeal of time and resources to decrypt the cookie. If, along with encryption,\nthe cookie is compressed, the attacker can now use a combination of plaintext\ninjection and inadvertent information leakage through data compression to\nreduce the time needed to decrypt the cookie. This attack is called Compression\nRatio Info-leak Made Easy (CRIME).\n\n    Cookies shared between the web server and the client when encrypted should\nnot also be compressed.",
      "descriptions": {
        "default": "A cookie is used when a web server needs to share data with the\nclient's browser. The data is often used to remember the client when the client\nreturns to the hosted application at a later date. A session cookie is a\nspecial type of cookie used to remember the client during the session. The\ncookie will contain the session identifier (ID) and may contain authentication\ndata to the hosted application. To protect this data from easily being\ncompromised, the cookie can be encrypted.\n\n    When a cookie is sent encrypted via SSL/TLS, an attacker must spend a great\ndeal of time and resources to decrypt the cookie. If, along with encryption,\nthe cookie is compressed, the attacker can now use a combination of plaintext\ninjection and inadvertent information leakage through data compression to\nreduce the time needed to decrypt the cookie. This attack is called Compression\nRatio Info-leak Made Easy (CRIME).\n\n    Cookies shared between the web server and the client when encrypted should\nnot also be compressed.",
        "check": "Review the web server documentation and deployed configuration\n  to determine whether cookies are being sent to the client using SSL/TLS.\n\n  If the transmission is through a SSL/TLS connection, but the cookie is not\n  being compressed, this finding is Not Applicable.\n\n  If it is determined that the web server is not required to perform session\n  management, this check is Not Applicable.\n\n  SSL/TLS compression has been disabled by default since NGINX version 1.3.2.\n  Execute the following command to get the current version of NGINX running:\n    # nginx -v\n\n    If the current version of NGINX running is older than 1.3.2, this is a finding.",
        "fix": "Upgrade to the lastest stable version of NGINX web server to\n  ensure Web server cookies, such as session cookies, are not compressed."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000439-WSR-000153",
        "gid": "V-56005",
        "rid": "SV-70259r2_rule",
        "stig_id": "SRG-APP-000439-WSR-000153",
        "fix_id": "F-60883r1_fix",
        "cci": [
          "CCI-002418"
        ],
        "nist": [
          "SC-8"
        ]
      },
      "code": "control 'V-56005' do\n  title \"Web server cookies, such as session cookies, sent to the client using\nSSL/TLS must not be compressed.\"\n  desc  \"A cookie is used when a web server needs to share data with the\nclient's browser. The data is often used to remember the client when the client\nreturns to the hosted application at a later date. A session cookie is a\nspecial type of cookie used to remember the client during the session. The\ncookie will contain the session identifier (ID) and may contain authentication\ndata to the hosted application. To protect this data from easily being\ncompromised, the cookie can be encrypted.\n\n    When a cookie is sent encrypted via SSL/TLS, an attacker must spend a great\ndeal of time and resources to decrypt the cookie. If, along with encryption,\nthe cookie is compressed, the attacker can now use a combination of plaintext\ninjection and inadvertent information leakage through data compression to\nreduce the time needed to decrypt the cookie. This attack is called Compression\nRatio Info-leak Made Easy (CRIME).\n\n    Cookies shared between the web server and the client when encrypted should\nnot also be compressed.\n  \"\n\n  desc 'check', \"Review the web server documentation and deployed configuration\n  to determine whether cookies are being sent to the client using SSL/TLS.\n\n  If the transmission is through a SSL/TLS connection, but the cookie is not\n  being compressed, this finding is Not Applicable.\n\n  If it is determined that the web server is not required to perform session\n  management, this check is Not Applicable.\n\n  SSL/TLS compression has been disabled by default since NGINX version 1.3.2.\n  Execute the following command to get the current version of NGINX running:\n    # nginx -v\n\n    If the current version of NGINX running is older than 1.3.2, this is a finding.\n  \"\n  desc 'fix', \"Upgrade to the lastest stable version of NGINX web server to\n  ensure Web server cookies, such as session cookies, are not compressed.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000439-WSR-000153'\n  tag \"gid\": 'V-56005'\n  tag \"rid\": 'SV-70259r2_rule'\n  tag \"stig_id\": 'SRG-APP-000439-WSR-000153'\n  tag \"fix_id\": 'F-60883r1_fix'\n  tag \"cci\": ['CCI-002418']\n  tag \"nist\": %w(SC-8)\n\n  if input('performs_session_management') == false\n    impact 0.0\n    describe 'This check is NA because session management is not required.' do\n      skip 'This check is NA because session management is not required.'\n    end\n  else\n    describe nginx do\n      its('version') { should cmp >= '1.3.2' }\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-56005.rb",
        "line": 1
      },
      "id": "V-56005"
    },
    {
      "title": "The NGINX web server must not impede the ability to write specified log\nrecord content to an audit log server.",
      "desc": "Writing events to a centralized management audit system offers many\nbenefits to the enterprise over having dispersed logs. Centralized management\nof audit records and logs provides for efficiency in maintenance and management\nof records, enterprise analysis of events, and backup and archiving of event\nrecords enterprise-wide. The web server and related components are required to\nbe capable of writing logs to centralized audit log servers.",
      "descriptions": {
        "default": "Writing events to a centralized management audit system offers many\nbenefits to the enterprise over having dispersed logs. Centralized management\nof audit records and logs provides for efficiency in maintenance and management\nof records, enterprise analysis of events, and backup and archiving of event\nrecords enterprise-wide. The web server and related components are required to\nbe capable of writing logs to centralized audit log servers.",
        "check": "Review the NGINX web server documentation and deployment configuration to\n  determine if the web server can write log data to, or if log data can be\n  transferred to, a separate audit server.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n  Check for the following:\n      # grep for 'access_log' and 'error_log' directives in the nginx.conf and\n      any separated include configuration file.\n\n  If the 'access_log' and 'error_log' directives cannot be found in NGINX configuration\n  files, this check is Not Applicable.\n\n  Execute the following commands:\n      # file <path to access_log>/access.log\n      # file <path to error_log>/error.log\n\n  If the access.log and error.log files do not exist, this is a finding.\n\n  Work with SIEM administrator to determine audit configurations.\n\n  If there is a setting within the SIEM that could impede the ability to write\n  specific log record content, this is a finding.",
        "fix": "Enable logging on the NGINX web server by configuring the 'access_log'\n  and 'error_log' directives in the NGINX configuration file(s).\n\n  Work with the SIEM administrator to allow the ability to write specified log record\n  content to an audit log server."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000358-WSR-000063",
        "gid": "V-55969",
        "rid": "SV-70223r2_rule",
        "stig_id": "SRG-APP-000358-WSR-000063",
        "fix_id": "F-60847r1_fix",
        "cci": [
          "CCI-001851"
        ],
        "nist": [
          "AU-4 (1)",
          ""
        ]
      },
      "code": "control 'V-55969' do\n  title \"The NGINX web server must not impede the ability to write specified log\nrecord content to an audit log server.\"\n  desc  \"Writing events to a centralized management audit system offers many\nbenefits to the enterprise over having dispersed logs. Centralized management\nof audit records and logs provides for efficiency in maintenance and management\nof records, enterprise analysis of events, and backup and archiving of event\nrecords enterprise-wide. The web server and related components are required to\nbe capable of writing logs to centralized audit log servers.\"\n\n  desc  'check', \"Review the NGINX web server documentation and deployment configuration to\n  determine if the web server can write log data to, or if log data can be\n  transferred to, a separate audit server.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n  Check for the following:\n      # grep for 'access_log' and 'error_log' directives in the nginx.conf and\n      any separated include configuration file.\n\n  If the 'access_log' and 'error_log' directives cannot be found in NGINX configuration\n  files, this check is Not Applicable.\n\n  Execute the following commands:\n      # file <path to access_log>/access.log\n      # file <path to error_log>/error.log\n\n  If the access.log and error.log files do not exist, this is a finding.\n\n  Work with SIEM administrator to determine audit configurations.\n\n  If there is a setting within the SIEM that could impede the ability to write\n  specific log record content, this is a finding.\n  \"\n  desc 'fix', \"Enable logging on the NGINX web server by configuring the 'access_log'\n  and 'error_log' directives in the NGINX configuration file(s).\n\n  Work with the SIEM administrator to allow the ability to write specified log record\n  content to an audit log server.\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000358-WSR-000063'\n  tag \"gid\": 'V-55969'\n  tag \"rid\": 'SV-70223r2_rule'\n  tag \"stig_id\": 'SRG-APP-000358-WSR-000063'\n  tag \"fix_id\": 'F-60847r1_fix'\n  tag \"cci\": ['CCI-001851']\n  tag \"nist\": ['AU-4 (1)', '']\n\n  # Verify that access_log and error_log is enabled\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      if http['access_log'].nil?\n        impact 0.0\n        describe 'This test is NA because the access_log directive has not been configured.' do\n          skip 'This test is NA because access_log directive has not been configured.'\n        end\n      else\n        http['access_log'].each do |access_log|\n          access_log.each do |access_value|\n            next unless access_value.include? 'access.log'\n\n            describe file(access_value) do\n              it 'The access log should exist.' do\n                expect(subject).to(exist)\n              end\n            end\n          end\n        end\n      end\n    end\n    if nginx_conf.params['error_log'].nil?\n      impact 0.0\n      describe 'This test is NA because the error_log directive has not been configured.' do\n        skip 'This test is NA because error_log directive has not been configured.'\n      end\n    else\n      nginx_conf.params['error_log'].each do |error_log|\n        error_log.each do |error_value|\n          next unless error_value.include? 'error.log'\n\n          describe file(error_value) do\n            it 'The error log should exist.' do\n              expect(subject).to(exist)\n            end\n          end\n        end\n      end\n    end\n    describe \"This test requires a Manual Review: Work with SIEM administrator\n    to determine audit configurations to ensure the ability to write specified\n    log record content to an audit log server.\" do\n      skip \"This test requires a Manual Review: Work with SIEM administrator\n      to determine audit configurations to ensure the ability to write specified\n      log record content to an audit log server.\"\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55969.rb",
        "line": 1
      },
      "id": "V-55969"
    },
    {
      "title": "The NGINX web server must restrict the ability of users to launch Denial of\nService (DoS) attacks against other information systems or networks.",
      "desc": "A web server can limit the ability of the web server being used in a\nDoS attack through several methods. The methods employed will depend upon the\nhosted applications and their resource needs for proper operation.\n\n    An example setting that could be used to limit the ability of the web\nserver being used in a DoS attack is bandwidth throttling.",
      "descriptions": {
        "default": "A web server can limit the ability of the web server being used in a\nDoS attack through several methods. The methods employed will depend upon the\nhosted applications and their resource needs for proper operation.\n\n    An example setting that could be used to limit the ability of the web\nserver being used in a DoS attack is bandwidth throttling.",
        "check": "Review the NGINX web server documentation and deployed configuration\n  to determine whether the web server has been configured to limit the ability of the web\n  server to be used in a DoS attack.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  Check if there's a limit on the number of connections allowed and the bandwith allowed:\n    #grep the 'limit_conn_zone' directive in the http context of the nginx.conf and any\n    separated include configuration file.\n\n    #grep the 'limit_conn' directive in the location context of the nginx.conf and any\n    separated include configuration file.\n\n    #grep the 'limit_rate' directive in the location context of the nginx.conf and any\n    separated include configuration file.\n\n  If the 'limit_conn_zone', 'limit_conn', 'limit_rate' directives are not configured to limit\n  the number of simultanous sessions and bandwidth, or is unlimited, this is a finding.",
        "fix": "Configure the NGINX web server to include the 'limit_conn_zone', 'limit_conn',\n  'limit_rate' directives to limit the number of concurrent sessions and the bandwidth allowed."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000246-WSR-000149",
        "gid": "V-41833",
        "rid": "SV-54410r3_rule",
        "stig_id": "SRG-APP-000246-WSR-000149",
        "fix_id": "F-47292r2_fix",
        "cci": [
          "CCI-001094"
        ],
        "nist": [
          "SC-5 (1)",
          ""
        ]
      },
      "code": "control 'V-41833' do\n  title \"The NGINX web server must restrict the ability of users to launch Denial of\nService (DoS) attacks against other information systems or networks.\"\n  desc  \"A web server can limit the ability of the web server being used in a\nDoS attack through several methods. The methods employed will depend upon the\nhosted applications and their resource needs for proper operation.\n\n    An example setting that could be used to limit the ability of the web\nserver being used in a DoS attack is bandwidth throttling.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and deployed configuration\n  to determine whether the web server has been configured to limit the ability of the web\n  server to be used in a DoS attack.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  Check if there's a limit on the number of connections allowed and the bandwith allowed:\n    #grep the 'limit_conn_zone' directive in the http context of the nginx.conf and any\n    separated include configuration file.\n\n    #grep the 'limit_conn' directive in the location context of the nginx.conf and any\n    separated include configuration file.\n\n    #grep the 'limit_rate' directive in the location context of the nginx.conf and any\n    separated include configuration file.\n\n  If the 'limit_conn_zone', 'limit_conn', 'limit_rate' directives are not configured to limit\n  the number of simultanous sessions and bandwidth, or is unlimited, this is a finding.\n  \"\n  desc 'fix', \"Configure the NGINX web server to include the 'limit_conn_zone', 'limit_conn',\n  'limit_rate' directives to limit the number of concurrent sessions and the bandwidth allowed.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000246-WSR-000149'\n  tag \"gid\": 'V-41833'\n  tag \"rid\": 'SV-54410r3_rule'\n  tag \"stig_id\": 'SRG-APP-000246-WSR-000149'\n  tag \"fix_id\": 'F-47292r2_fix'\n  tag \"cci\": ['CCI-001094']\n  tag \"nist\": ['SC-5 (1)', '']\n\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      if http['limit_conn_zone'].nil?\n        impact 0.0\n        describe 'This test is NA because the limit_conn_zone directive has not been configured.' do\n          skip 'This test is NA because limit_conn_zone directive has not been configured.'\n        end\n      else\n        http['limit_conn_zone'].each do |limit_conn_zone|\n          describe 'The limit_conn_zone' do\n            it 'should include a client address.' do\n              expect(limit_conn_zone.to_s).to(include '$binary_remote_addr')\n            end\n          end\n          describe 'The limit_conn_zone' do\n            it 'should include a zone.' do\n              expect(limit_conn_zone.to_s).to(include 'zone=')\n            end\n          end\n          limit_conn_zone.each do |value|\n            next unless value.start_with?('zone')\n\n            zone = value.split(':').last\n            describe 'The zone in limit_conn_zone' do\n              it 'should match this regex: .*?[0-9]{1,3}.*?' do\n                expect(zone).to(match(/.*?[0-9]{1,3}.*?/))\n              end\n            end\n          end\n        end\n      end\n    end\n  end\n  if nginx_conf.locations.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.locations.each do |location|\n      if location.params['limit_conn'].nil?\n        impact 0.0\n        describe 'This test is NA because the limit_conn directive has not been configured.' do\n          skip 'This test is NA because limit_conn directive has not been configured.'\n        end\n      else\n        location.params['limit_conn'].each do |limit_conn|\n          limit_conn.each do |value|\n            describe 'The limit_conn setting' do\n              it 'should match this regex: [a-zA-Z0-9]' do\n                expect(value).to(match(/^[0-9a-zA-Z]*$/))\n              end\n            end\n          end\n        end\n      end\n      if location.params['limit_rate'].nil?\n        impact 0.0\n        describe 'This test is NA because the limit_rate directive has not been configured.' do\n          skip 'This test is NA because limit_rate directive has not been configured.'\n        end\n      else\n        location.params['limit_rate'].each do |limit_rate|\n          Array(limit_rate).each do |value|\n            describe 'The limit_rate setting' do\n              it 'should match this regex: [a-zA-Z0-9]' do\n                expect(value).to(match(/^[0-9a-zA-Z]*$/))\n              end\n            end\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41833.rb",
        "line": 1
      },
      "id": "V-41833"
    },
    {
      "title": "A NGINX web server, behind a load balancer or proxy server, must produce log\n  records containing the client IP information as the source and destination and\n  not the load balancer or proxy IP information with each event.",
      "desc": "Web server logging capability is critical for accurate forensic\n  analysis. Without sufficient and accurate information, a correct replay of the\n  events cannot be determined.\n\n    Ascertaining the correct source, e.g. source IP, of the events is important\n  during forensic analysis. Correctly determining the source of events will add\n  information to the overall reconstruction of the logable event. By determining\n  the source of the event correctly, analysis of the enterprise can be undertaken\n  to determine if events tied to the source occurred in other areas within the\n  enterprise.\n\n    A web server behind a load balancer or proxy server, when not configured\n  correctly, will record the load balancer or proxy server as the source of every\n  logable event. When looking at the information forensically, this information\n  is not helpful in the investigation of events. The web server must record with\n  each event the client source of the event.",
      "descriptions": {
        "default": "Web server logging capability is critical for accurate forensic\n  analysis. Without sufficient and accurate information, a correct replay of the\n  events cannot be determined.\n\n    Ascertaining the correct source, e.g. source IP, of the events is important\n  during forensic analysis. Correctly determining the source of events will add\n  information to the overall reconstruction of the logable event. By determining\n  the source of the event correctly, analysis of the enterprise can be undertaken\n  to determine if events tied to the source occurred in other areas within the\n  enterprise.\n\n    A web server behind a load balancer or proxy server, when not configured\n  correctly, will record the load balancer or proxy server as the source of every\n  logable event. When looking at the information forensically, this information\n  is not helpful in the investigation of events. The web server must record with\n  each event the client source of the event.",
        "check": "Review the deployment configuration to determine if the NGINX web\n  server is sitting behind a proxy server.\n\n  If the web server is not sitting behind a proxy server, this finding is Not Applicable.\n\n  If the NGINX web server is behind a proxy server, review the documentation and deployment\n  configuration to determine if the web server is configured to generate sufficient\n  information to resolve the source, e.g. source IP, of the logged event and not the\n  proxy server.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n  Check for the following:\n      # grep for a 'log_format' directive in the http context of the nginx.conf.\n\n  If the 'log_format' directive is not configured to contain the '$realip_remote_addr'\n  variable, this is a finding.",
        "fix": "Configure the 'log_format' directive in the nginx.conf to use the '$realip_remote_addr'\n  variable to generate the client source, not the load balancer or proxy server, of each logable event."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000098-WSR-000060",
        "gid": "V-41616",
        "rid": "SV-54193r3_rule",
        "stig_id": "SRG-APP-000098-WSR-000060",
        "fix_id": "F-47075r2_fix",
        "cci": [
          "CCI-000133"
        ],
        "nist": [
          "AU-3"
        ]
      },
      "code": "control 'V-41616' do\n  title \"A NGINX web server, behind a load balancer or proxy server, must produce log\n  records containing the client IP information as the source and destination and\n  not the load balancer or proxy IP information with each event.\"\n  desc \"Web server logging capability is critical for accurate forensic\n  analysis. Without sufficient and accurate information, a correct replay of the\n  events cannot be determined.\n\n    Ascertaining the correct source, e.g. source IP, of the events is important\n  during forensic analysis. Correctly determining the source of events will add\n  information to the overall reconstruction of the logable event. By determining\n  the source of the event correctly, analysis of the enterprise can be undertaken\n  to determine if events tied to the source occurred in other areas within the\n  enterprise.\n\n    A web server behind a load balancer or proxy server, when not configured\n  correctly, will record the load balancer or proxy server as the source of every\n  logable event. When looking at the information forensically, this information\n  is not helpful in the investigation of events. The web server must record with\n  each event the client source of the event.\n  \"\n  desc 'check', \"Review the deployment configuration to determine if the NGINX web\n  server is sitting behind a proxy server.\n\n  If the web server is not sitting behind a proxy server, this finding is Not Applicable.\n\n  If the NGINX web server is behind a proxy server, review the documentation and deployment\n  configuration to determine if the web server is configured to generate sufficient\n  information to resolve the source, e.g. source IP, of the logged event and not the\n  proxy server.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n  Check for the following:\n      # grep for a 'log_format' directive in the http context of the nginx.conf.\n\n  If the 'log_format' directive is not configured to contain the '$realip_remote_addr'\n  variable, this is a finding.\n  \"\n  desc 'fix', \"Configure the 'log_format' directive in the nginx.conf to use the '$realip_remote_addr'\n  variable to generate the client source, not the load balancer or proxy server, of each logable event.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000098-WSR-000060'\n  tag \"gid\": 'V-41616'\n  tag \"rid\": 'SV-54193r3_rule'\n  tag \"stig_id\": 'SRG-APP-000098-WSR-000060'\n  tag \"fix_id\": 'F-47075r2_fix'\n  tag \"cci\": ['CCI-000133']\n  tag \"nist\": %w(AU-3)\n\n  if input('behind_proxy_server') == false\n    impact 0.0\n    describe 'This check is NA because the web server is not sitting behind a proxy server.' do\n      skip 'This check is NA because the web server is not sitting behind a proxy server.'\n    end\n  elsif nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      http['log_format'].each do |log_format|\n        describe 'realip_remote_addr' do\n          it 'should be part of every log format in http.' do\n            expect(log_format.to_s).to(match(/.*?\\$realip_remote_addr.*?/))\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41616.rb",
        "line": 1
      },
      "id": "V-41616"
    },
    {
      "title": "The NGINX web server must limit the number of allowed simultaneous session\n  requests.",
      "desc": "Web server management includes the ability to control the number of\n  users and user sessions that utilize a web server. Limiting the number of\n  allowed users and sessions per user is helpful in limiting risks related to\n  several types of Denial of Service attacks.\n\n    Although there is some latitude concerning the settings themselves, the\n  settings should follow DoD-recommended values, but the settings should be\n  configurable to allow for future DoD direction. While the DoD will specify\n  recommended values, the values can be adjusted to accommodate the operational\n  requirement of a given system.",
      "descriptions": {
        "default": "Web server management includes the ability to control the number of\n  users and user sessions that utilize a web server. Limiting the number of\n  allowed users and sessions per user is helpful in limiting risks related to\n  several types of Denial of Service attacks.\n\n    Although there is some latitude concerning the settings themselves, the\n  settings should follow DoD-recommended values, but the settings should be\n  configurable to allow for future DoD direction. While the DoD will specify\n  recommended values, the values can be adjusted to accommodate the operational\n  requirement of a given system.",
        "check": "Review the NGINX web server documentation and configuration to\n  determine if the number of simultaneous sessions is limited.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  Check for the following:\n    # grep the 'limit_conn_zone' directive in the http context of the nginx.conf\n    and any separated include configuration file.\n\n    # grep the 'limit_conn' directive in the location context of the nginx.conf\n    and any separated include configuration file.\n\n  If the 'limit_conn_zone' and 'limit_conn' directives cannot be found in NGINX\n  configuration files, this check is Not Applicable.\n\n  If the 'limit_conn_zone' and 'limit_conn' directives are not configured to limit\n  the number of simultanous sessions or is unlimited, this is a finding.",
        "fix": "Configure the NGINX web server to include the 'limit_conn_zone' and\n  'limit_conn' directives in the NGINX configuration file(s) to limit the number of\n  concurrent sessions."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000001-WSR-000001",
        "gid": "V-40791",
        "rid": "SV-53018r3_rule",
        "stig_id": "SRG-APP-000001-WSR-000001",
        "fix_id": "F-45918r3_fix",
        "cci": [
          "CCI-000054"
        ],
        "nist": [
          "AC-10"
        ]
      },
      "code": "control 'V-40791' do\n  title \"The NGINX web server must limit the number of allowed simultaneous session\n  requests.\"\n  desc  \"Web server management includes the ability to control the number of\n  users and user sessions that utilize a web server. Limiting the number of\n  allowed users and sessions per user is helpful in limiting risks related to\n  several types of Denial of Service attacks.\n\n    Although there is some latitude concerning the settings themselves, the\n  settings should follow DoD-recommended values, but the settings should be\n  configurable to allow for future DoD direction. While the DoD will specify\n  recommended values, the values can be adjusted to accommodate the operational\n  requirement of a given system.\n  \"\n  desc 'check', \"Review the NGINX web server documentation and configuration to\n  determine if the number of simultaneous sessions is limited.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  Check for the following:\n    # grep the 'limit_conn_zone' directive in the http context of the nginx.conf\n    and any separated include configuration file.\n\n    # grep the 'limit_conn' directive in the location context of the nginx.conf\n    and any separated include configuration file.\n\n  If the 'limit_conn_zone' and 'limit_conn' directives cannot be found in NGINX\n  configuration files, this check is Not Applicable.\n\n  If the 'limit_conn_zone' and 'limit_conn' directives are not configured to limit\n  the number of simultanous sessions or is unlimited, this is a finding.\n  \"\n  desc 'fix', \"Configure the NGINX web server to include the 'limit_conn_zone' and\n  'limit_conn' directives in the NGINX configuration file(s) to limit the number of\n  concurrent sessions.\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000001-WSR-000001'\n  tag \"gid\": 'V-40791'\n  tag \"rid\": 'SV-53018r3_rule'\n  tag \"stig_id\": 'SRG-APP-000001-WSR-000001'\n  tag \"fix_id\": 'F-45918r3_fix'\n  tag \"cci\": ['CCI-000054']\n  tag \"nist\": %w(AC-10)\n\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      if http['limit_conn_zone'].nil?\n        impact 0.0\n        describe 'This test is NA because the limit_conn_zone directive has not been configured.' do\n          skip 'This test is NA because limit_conn_zone directive has not been configured.'\n        end\n      else\n        http['limit_conn_zone'].each do |limit_conn_zone|\n          describe 'The limit_conn_zone' do\n            it 'should include a client address.' do\n              expect(limit_conn_zone.to_s).to(include '$binary_remote_addr')\n            end\n          end\n          describe 'The limit_conn_zone' do\n            it 'should include a zone.' do\n              expect(limit_conn_zone.to_s).to(include 'zone=')\n            end\n          end\n          limit_conn_zone.each do |value|\n            next unless value.start_with?('zone')\n\n            zone = value.split(':').last\n            describe 'The zone in limit_conn_zone' do\n              it 'should match this regex: .*?[0-9]{1,3}.*?' do\n                expect(zone).to(match(/.*?[0-9]{1,3}.*?/))\n              end\n            end\n          end\n        end\n      end\n    end\n  end\n  # limit_conn - Context:\thttp, server, location\n\n  if nginx_conf.locations.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.locations.each do |location|\n      if location.params['limit_conn'].nil?\n        impact 0.0\n        describe 'This test is NA because the limit_conn directive has not been configured.' do\n          skip 'This test is NA because limit_conn directive has not been configured.'\n        end\n      else\n        location.params['limit_conn'].each do |limit_conn|\n          limit_conn.each do |value|\n            describe 'The limit_conn setting' do\n              it 'should match this regex: [a-zA-Z0-9]' do\n                expect(value).to(match(/^[0-9a-zA-Z]*$/))\n              end\n            end\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-40791.rb",
        "line": 1
      },
      "id": "V-40791"
    },
    {
      "title": "The web server must produce log records containing sufficient\n  information to establish the source of events.",
      "desc": "Web server logging capability is critical for accurate forensic\n  analysis. Without sufficient and accurate information, a correct replay of the\n  events cannot be determined.\n\n    Ascertaining the correct source, e.g. source IP, of the events is important\n  during forensic analysis. Correctly determining the source will add information\n  to the overall reconstruction of the logable event. By determining the source\n  of the event correctly, analysis of the enterprise can be undertaken to\n  determine if the event compromised other assets within the enterprise.\n\n    Without sufficient information establishing the source of the logged event,\n  investigation into the cause of event is severely hindered. Log record content\n  that may be necessary to satisfy the requirement of this control includes, but\n  is not limited to, time stamps, source and destination IP addresses,\n  user/process identifiers, event descriptions, application-specific events,\n  success/fail indications, file names involved, access control, or flow control\n  rules invoked.",
      "descriptions": {
        "default": "Web server logging capability is critical for accurate forensic\n  analysis. Without sufficient and accurate information, a correct replay of the\n  events cannot be determined.\n\n    Ascertaining the correct source, e.g. source IP, of the events is important\n  during forensic analysis. Correctly determining the source will add information\n  to the overall reconstruction of the logable event. By determining the source\n  of the event correctly, analysis of the enterprise can be undertaken to\n  determine if the event compromised other assets within the enterprise.\n\n    Without sufficient information establishing the source of the logged event,\n  investigation into the cause of event is severely hindered. Log record content\n  that may be necessary to satisfy the requirement of this control includes, but\n  is not limited to, time stamps, source and destination IP addresses,\n  user/process identifiers, event descriptions, application-specific events,\n  success/fail indications, file names involved, access control, or flow control\n  rules invoked.",
        "check": "Review the NGINX web server documentation and deployment\n  configuration to determine if the NGINX web server is configured to generate\n  sufficient information to resolve the source, e.g. source IP, of the log event.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n  Check for the following:\n      # grep for a 'log_format' directive in the http context of the nginx.conf.\n\n  If the 'log_format' directive is not configured to contain the '$remote_addr',\n  '$remote_user', and '$http_user_agent' variables, this is a finding.",
        "fix": "Configure the 'log_format' directive in the nginx.conf to use the\n  '$remote_user', '$remote_addr', and '$http_user_agent' variables to generate\n  the source of each logable event."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000098-WSR-000059",
        "gid": "V-41615",
        "rid": "SV-54192r3_rule",
        "stig_id": "SRG-APP-000098-WSR-000059",
        "fix_id": "F-47074r2_fix",
        "cci": [
          "CCI-000133"
        ],
        "nist": [
          "AU-3"
        ]
      },
      "code": "control 'V-41615' do\n  title \"The web server must produce log records containing sufficient\n  information to establish the source of events.\"\n  desc \"Web server logging capability is critical for accurate forensic\n  analysis. Without sufficient and accurate information, a correct replay of the\n  events cannot be determined.\n\n    Ascertaining the correct source, e.g. source IP, of the events is important\n  during forensic analysis. Correctly determining the source will add information\n  to the overall reconstruction of the logable event. By determining the source\n  of the event correctly, analysis of the enterprise can be undertaken to\n  determine if the event compromised other assets within the enterprise.\n\n    Without sufficient information establishing the source of the logged event,\n  investigation into the cause of event is severely hindered. Log record content\n  that may be necessary to satisfy the requirement of this control includes, but\n  is not limited to, time stamps, source and destination IP addresses,\n  user/process identifiers, event descriptions, application-specific events,\n  success/fail indications, file names involved, access control, or flow control\n  rules invoked.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and deployment\n  configuration to determine if the NGINX web server is configured to generate\n  sufficient information to resolve the source, e.g. source IP, of the log event.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n  Check for the following:\n      # grep for a 'log_format' directive in the http context of the nginx.conf.\n\n  If the 'log_format' directive is not configured to contain the '$remote_addr',\n  '$remote_user', and '$http_user_agent' variables, this is a finding.\n  \"\n  desc 'fix', \"Configure the 'log_format' directive in the nginx.conf to use the\n  '$remote_user', '$remote_addr', and '$http_user_agent' variables to generate\n  the source of each logable event.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000098-WSR-000059'\n  tag \"gid\": 'V-41615'\n  tag \"rid\": 'SV-54192r3_rule'\n  tag \"stig_id\": 'SRG-APP-000098-WSR-000059'\n  tag \"fix_id\": 'F-47074r2_fix'\n  tag \"cci\": ['CCI-000133']\n  tag \"nist\": %w(AU-3)\n\n  # log_format - Context:\thttp\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      http['log_format'].each do |log_format|\n        describe 'remote_addr' do\n          it 'should be part of every log format in http.' do\n            expect(log_format.to_s).to(match(/.*?\\$remote_addr.*?/))\n          end\n        end\n        describe 'remote_user' do\n          it 'should be part of every log format in http.' do\n            expect(log_format.to_s).to(match(/.*?\\$remote_user.*?/))\n          end\n        end\n        describe 'http_user_agent' do\n          it 'should be part of every log format in http.' do\n            expect(log_format.to_s).to(match(/.*?\\$http_user_agent.*?/))\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41615.rb",
        "line": 1
      },
      "id": "V-41615"
    },
    {
      "title": "The NGINX web server must not perform user management for hosted\n  applications.",
      "desc": "User management and authentication can be an essential part of any\n  application hosted by the web server. Along with authenticating users, the user\n  management function must perform several other tasks like password complexity,\n  locking users after a configurable number of failed logins, and management of\n  temporary and emergency accounts; and all of this must be done enterprise-wide.\n\n    The web server contains a minimal user management function, but the web\n  server user management function does not offer enterprise-wide user management,\n  and user management is not the primary function of the web server. User\n  management for the hosted applications should be done through a facility that\n  is built for enterprise-wide user management, like LDAP and Active Directory.",
      "descriptions": {
        "default": "User management and authentication can be an essential part of any\n  application hosted by the web server. Along with authenticating users, the user\n  management function must perform several other tasks like password complexity,\n  locking users after a configurable number of failed logins, and management of\n  temporary and emergency accounts; and all of this must be done enterprise-wide.\n\n    The web server contains a minimal user management function, but the web\n  server user management function does not offer enterprise-wide user management,\n  and user management is not the primary function of the web server. User\n  management for the hosted applications should be done through a facility that\n  is built for enterprise-wide user management, like LDAP and Active Directory.",
        "check": "Review the NGINX web server documentation and configuration\n to determine if the web server is being used as a user management application.\n\n If there are no websites configured or if NGINX is not configured to serve files,\n this check is Not Applicable.\n\n Check for the following:\n # grep 'auth_basic' and 'auth_basic_user_file' directive in the http, server,\n and location context of the nginx.conf and any separated include configuration file.\n\n If the 'auth_basic' and 'auth_basic_user_file' directives exist, this is a finding.",
        "fix": "Remove the 'auth_basic' and 'auth_basic_user_file' directives from the\n  http, server, and location contexts of the NGINX configuration file(s)."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000141-WSR-000015",
        "gid": "V-55989",
        "rid": "SV-70243r2_rule",
        "stig_id": "SRG-APP-000141-WSR-000015",
        "fix_id": "F-60867r1_fix",
        "cci": [
          "CCI-000381"
        ],
        "nist": [
          "CM-7 a",
          ""
        ]
      },
      "code": "control 'V-55989' do\n  title \"The NGINX web server must not perform user management for hosted\n  applications.\"\n  desc \"User management and authentication can be an essential part of any\n  application hosted by the web server. Along with authenticating users, the user\n  management function must perform several other tasks like password complexity,\n  locking users after a configurable number of failed logins, and management of\n  temporary and emergency accounts; and all of this must be done enterprise-wide.\n\n    The web server contains a minimal user management function, but the web\n  server user management function does not offer enterprise-wide user management,\n  and user management is not the primary function of the web server. User\n  management for the hosted applications should be done through a facility that\n  is built for enterprise-wide user management, like LDAP and Active Directory.\n  \"\n\n  desc 'check', \" Review the NGINX web server documentation and configuration\n  to determine if the web server is being used as a user management application.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  Check for the following:\n  # grep 'auth_basic' and 'auth_basic_user_file' directive in the http, server,\n  and location context of the nginx.conf and any separated include configuration file.\n\n  If the 'auth_basic' and 'auth_basic_user_file' directives exist, this is a finding.\n  \"\n  desc  'fix', \"Remove the 'auth_basic' and 'auth_basic_user_file' directives from the\n  http, server, and location contexts of the NGINX configuration file(s).\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000141-WSR-000015'\n  tag \"gid\": 'V-55989'\n  tag \"rid\": 'SV-70243r2_rule'\n  tag \"stig_id\": 'SRG-APP-000141-WSR-000015'\n  tag \"fix_id\": 'F-60867r1_fix'\n  tag \"cci\": ['CCI-000381']\n  tag \"nist\": ['CM-7 a', '']\n\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      describe 'http context:' do\n        it 'There should not be an auth_basic directive.' do\n          expect(http).to_not(include 'auth_basic')\n        end\n        it 'There should not be an auth_basic_user_file directive.' do\n          expect(http).to_not(include 'auth_basic_user_file')\n        end\n      end\n    end\n  end\n\n  if nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.each do |server|\n      describe 'server context:' do\n        it 'There should not be an auth_basic directive.' do\n          expect(server.params).to_not(include 'auth_basic')\n        end\n        it 'There should not be an auth_basic_user_file directive.' do\n          expect(server.params).to_not(include 'auth_basic_user_file')\n        end\n      end\n    end\n  end\n\n  if nginx_conf.locations.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.locations.each do |location|\n      describe 'location context:' do\n        it 'There should not be an auth_basic directive.' do\n          expect(location.params).to_not(include 'auth_basic')\n        end\n        it 'There should not be an auth_basic_user_file directive.' do\n          expect(location.params).to_not(include 'auth_basic_user_file')\n        end\n        unless location.params['limit_except'].nil?\n          location.params['limit_except'].each do |limit_except|\n            describe 'limit_except context:' do\n              it 'There should not be an auth_basic directive.' do\n                expect(limit_except).to_not(include 'auth_basic')\n              end\n              it 'There should not be an auth_basic_user_file directive.' do\n                expect(location.params).to_not(include 'auth_basic_user_file')\n              end\n            end\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55989.rb",
        "line": 1
      },
      "id": "V-55989"
    },
    {
      "title": "The NGINX web server must produce log records containing sufficient\n  information to establish when (date and time) events occurred.",
      "desc": "Web server logging capability is critical for accurate forensic\n  analysis. Without sufficient and accurate information, a correct replay of the\n  events cannot be determined.\n\n    Ascertaining the correct order of the events that occurred is important\n  during forensic analysis. Events that appear harmless by themselves might be\n  flagged as a potential threat when properly viewed in sequence. By also\n  establishing the event date and time, an event can be properly viewed with an\n  enterprise tool to fully see a possible threat in its entirety.\n\n    Without sufficient information establishing when the log event occurred,\n  investigation into the cause of event is severely hindered. Log record content\n  that may be necessary to satisfy the requirement of this control includes, but\n  is not limited to, time stamps, source and destination IP addresses,\n  user/process identifiers, event descriptions, application-specific events,\n  success/fail indications, file names involved, access control, or flow control\n  rules invoked.",
      "descriptions": {
        "default": "Web server logging capability is critical for accurate forensic\n  analysis. Without sufficient and accurate information, a correct replay of the\n  events cannot be determined.\n\n    Ascertaining the correct order of the events that occurred is important\n  during forensic analysis. Events that appear harmless by themselves might be\n  flagged as a potential threat when properly viewed in sequence. By also\n  establishing the event date and time, an event can be properly viewed with an\n  enterprise tool to fully see a possible threat in its entirety.\n\n    Without sufficient information establishing when the log event occurred,\n  investigation into the cause of event is severely hindered. Log record content\n  that may be necessary to satisfy the requirement of this control includes, but\n  is not limited to, time stamps, source and destination IP addresses,\n  user/process identifiers, event descriptions, application-specific events,\n  success/fail indications, file names involved, access control, or flow control\n  rules invoked.",
        "check": "Review the NGINX web server documentation and deployment configuration\n  to determine if the NGINX web server is configured to generate a date and time for each\n  logged event.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n  Check for the following:\n      # grep for a 'log_format' directive in the http context of the nginx.conf.\n\n  If the 'log_format' directive is not configured to contain the '$time_local' variable,\n  this is a finding.",
        "fix": "Configure the 'log_format' directive in the nginx.conf to use the '$time_local'\n  variable to log date and time with the event."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000096-WSR-000057",
        "gid": "V-41613",
        "rid": "SV-54190r3_rule",
        "stig_id": "SRG-APP-000096-WSR-000057",
        "fix_id": "F-47072r2_fix",
        "cci": [
          "CCI-000131"
        ],
        "nist": [
          "AU-3"
        ]
      },
      "code": "control 'V-41613' do\n  title \"The NGINX web server must produce log records containing sufficient\n  information to establish when (date and time) events occurred.\"\n  desc \"Web server logging capability is critical for accurate forensic\n  analysis. Without sufficient and accurate information, a correct replay of the\n  events cannot be determined.\n\n    Ascertaining the correct order of the events that occurred is important\n  during forensic analysis. Events that appear harmless by themselves might be\n  flagged as a potential threat when properly viewed in sequence. By also\n  establishing the event date and time, an event can be properly viewed with an\n  enterprise tool to fully see a possible threat in its entirety.\n\n    Without sufficient information establishing when the log event occurred,\n  investigation into the cause of event is severely hindered. Log record content\n  that may be necessary to satisfy the requirement of this control includes, but\n  is not limited to, time stamps, source and destination IP addresses,\n  user/process identifiers, event descriptions, application-specific events,\n  success/fail indications, file names involved, access control, or flow control\n  rules invoked.\n  \"\n  desc 'check', \"Review the NGINX web server documentation and deployment configuration\n  to determine if the NGINX web server is configured to generate a date and time for each\n  logged event.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n  Check for the following:\n      # grep for a 'log_format' directive in the http context of the nginx.conf.\n\n  If the 'log_format' directive is not configured to contain the '$time_local' variable,\n  this is a finding.\n  \"\n  desc 'fix', \"Configure the 'log_format' directive in the nginx.conf to use the '$time_local'\n  variable to log date and time with the event.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000096-WSR-000057'\n  tag \"gid\": 'V-41613'\n  tag \"rid\": 'SV-54190r3_rule'\n  tag \"stig_id\": 'SRG-APP-000096-WSR-000057'\n  tag \"fix_id\": 'F-47072r2_fix'\n  tag \"cci\": ['CCI-000131']\n  tag \"nist\": %w(AU-3)\n\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      http['log_format'].each do |log_format|\n        describe 'time_local' do\n          it 'should be part of every log format in the http context.' do\n            expect(log_format.to_s).to(match(/.*?\\$time_local.*?/))\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41613.rb",
        "line": 1
      },
      "id": "V-41613"
    },
    {
      "title": "Warning and error messages displayed to clients must be modified to\nminimize the identity of the NGINX web server, patches, loaded modules, and directory\npaths.",
      "desc": "Information needed by an attacker to begin looking for possible\nvulnerabilities in a web server includes any information about the web server,\nbackend systems being accessed, and plug-ins or modules being used.\n\n    Web servers will often display error messages to client users displaying\nenough information to aid in the debugging of the error. The information given\nback in error messages may display the web server type, version, patches\ninstalled, plug-ins and modules installed, type of code being used by the\nhosted application, and any backends being used for data storage.\n\n    This information could be used by an attacker to blueprint what type of\nattacks might be successful. The information given to users must be minimized\nto not aid in the blueprinting of the web server.",
      "descriptions": {
        "default": "Information needed by an attacker to begin looking for possible\nvulnerabilities in a web server includes any information about the web server,\nbackend systems being accessed, and plug-ins or modules being used.\n\n    Web servers will often display error messages to client users displaying\nenough information to aid in the debugging of the error. The information given\nback in error messages may display the web server type, version, patches\ninstalled, plug-ins and modules installed, type of code being used by the\nhosted application, and any backends being used for data storage.\n\n    This information could be used by an attacker to blueprint what type of\nattacks might be successful. The information given to users must be minimized\nto not aid in the blueprinting of the web server.",
        "check": "Review the NGINX web server documentation and deployed configuration\n  to determine whether the web server offers different modes of operation that will minimize\n  the identity of the web server, patches, loaded modules, and directory paths\n  given to clients on error conditions.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  Check for the following:\n      # grep the 'server_tokens' directive in the http, server, and location context\n      of the nginx.conf and any separated include configuration file.\n\n  The default value for the 'server_tokens' directive is set to 'on'. If the 'server_tokens'\n  directive does not exist or is not set to 'off', this is a finding",
        "fix": "Configure the NGINX web server to include the 'server_tokens' directive\n  and set to 'off' in the NGINX configuration file(s) to mask server details and minimize\n  the information provided to the client in warning and error messages."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000266-WSR-000159",
        "gid": "V-41854",
        "rid": "SV-54431r3_rule",
        "stig_id": "SRG-APP-000266-WSR-000159",
        "fix_id": "F-47313r2_fix",
        "cci": [
          "CCI-001312"
        ],
        "nist": [
          "SI-11 a",
          ""
        ]
      },
      "code": "control 'V-41854' do\n  title \"Warning and error messages displayed to clients must be modified to\nminimize the identity of the NGINX web server, patches, loaded modules, and directory\npaths.\"\n  desc  \"Information needed by an attacker to begin looking for possible\nvulnerabilities in a web server includes any information about the web server,\nbackend systems being accessed, and plug-ins or modules being used.\n\n    Web servers will often display error messages to client users displaying\nenough information to aid in the debugging of the error. The information given\nback in error messages may display the web server type, version, patches\ninstalled, plug-ins and modules installed, type of code being used by the\nhosted application, and any backends being used for data storage.\n\n    This information could be used by an attacker to blueprint what type of\nattacks might be successful. The information given to users must be minimized\nto not aid in the blueprinting of the web server.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and deployed configuration\n  to determine whether the web server offers different modes of operation that will minimize\n  the identity of the web server, patches, loaded modules, and directory paths\n  given to clients on error conditions.\n\n  If there are no websites configured or if NGINX is not configured to serve files,\n  this check is Not Applicable.\n\n  Check for the following:\n      # grep the 'server_tokens' directive in the http, server, and location context\n      of the nginx.conf and any separated include configuration file.\n\n  The default value for the 'server_tokens' directive is set to 'on'. If the 'server_tokens'\n  directive does not exist or is not set to 'off', this is a finding\n  \"\n  desc 'fix', \"Configure the NGINX web server to include the 'server_tokens' directive\n  and set to 'off' in the NGINX configuration file(s) to mask server details and minimize\n  the information provided to the client in warning and error messages.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000266-WSR-000159'\n  tag \"gid\": 'V-41854'\n  tag \"rid\": 'SV-54431r3_rule'\n  tag \"stig_id\": 'SRG-APP-000266-WSR-000159'\n  tag \"fix_id\": 'F-47313r2_fix'\n  tag \"cci\": ['CCI-001312']\n  tag \"nist\": ['SI-11 a', '']\n\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      describe 'server_tokens directive' do\n        it 'should exist and be off in the http context.' do\n          expect(http).to(include 'server_tokens')\n          expect(http['server_tokens'].join).to(cmp('off'))\n        end\n      end\n    end\n  end\n\n  if nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.each do |server|\n      describe 'server_tokens' do\n        it 'should be off if found in the server context.' do\n          expect(server.params['server_tokens'].join).to(cmp('off')) unless server.params['server_tokens'].nil?\n        end\n      end\n    end\n  end\n\n  if nginx_conf.locations.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.locations.each do |location|\n      describe 'server_tokens' do\n        it 'should be off if found in the location context.' do\n          expect(location.params['server_tokens'].join).to(cmp('off')) unless location.params['server_tokens'].nil?\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41854.rb",
        "line": 1
      },
      "id": "V-41854"
    },
    {
      "title": "The NGINX web server must capture, record, and log all content related to a\n  user session.",
      "desc": "A user session to a web server is in the context of a user accessing a\n  hosted application that extends to any plug-ins/modules and services that may\n  execute on behalf of the user.\n\n    The web server must be capable of enabling a setting for troubleshooting,\n  debugging, or forensic gathering purposes which will log all user session\n  information related to the hosted application session. Without the capability\n  to capture, record, and log all content related to a user session,\n  investigations into suspicious user activity would be hampered.",
      "descriptions": {
        "default": "A user session to a web server is in the context of a user accessing a\n  hosted application that extends to any plug-ins/modules and services that may\n  execute on behalf of the user.\n\n    The web server must be capable of enabling a setting for troubleshooting,\n  debugging, or forensic gathering purposes which will log all user session\n  information related to the hosted application session. Without the capability\n  to capture, record, and log all content related to a user session,\n  investigations into suspicious user activity would be hampered.",
        "check": "Review the NGINX web server documentation and deployed configuration to determine\nif the NGINX web server captures and logs all content related to a user session.\n\nIf there are no websites configured for NGINX, this check is Not Applicable.\n\nCheck for the following:\n  #grep the 'log_format' directive in the http context of the nginx.conf.\n\nIf the the 'log_format' does not include the '$remote_user' variable, this is a finding.",
        "fix": "Configure the 'log_format' directive in the http context of the nginx.conf to include the '$remote_user'\n  variable to capture and log all content related to a user session."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000093-WSR-000053",
        "gid": "V-41609",
        "rid": "SV-54186r3_rule",
        "stig_id": "SRG-APP-000093-WSR-000053",
        "fix_id": "F-47068r2_fix",
        "cci": [
          "CCI-001462"
        ],
        "nist": [
          "AU-14 (2)",
          ""
        ]
      },
      "code": "control 'V-41609' do\n  title \"The NGINX web server must capture, record, and log all content related to a\n  user session.\"\n  desc \"A user session to a web server is in the context of a user accessing a\n  hosted application that extends to any plug-ins/modules and services that may\n  execute on behalf of the user.\n\n    The web server must be capable of enabling a setting for troubleshooting,\n  debugging, or forensic gathering purposes which will log all user session\n  information related to the hosted application session. Without the capability\n  to capture, record, and log all content related to a user session,\n  investigations into suspicious user activity would be hampered.\n  \"\n  desc 'check', \"\n  Review the NGINX web server documentation and deployed configuration to determine\n  if the NGINX web server captures and logs all content related to a user session.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n  Check for the following:\n    #grep the 'log_format' directive in the http context of the nginx.conf.\n\n  If the the 'log_format' does not include the '$remote_user' variable, this is a finding.\n  \"\n  desc 'fix', \"Configure the 'log_format' directive in the http context of the nginx.conf to include the '$remote_user'\n  variable to capture and log all content related to a user session.\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000093-WSR-000053'\n  tag \"gid\": 'V-41609'\n  tag \"rid\": 'SV-54186r3_rule'\n  tag \"stig_id\": 'SRG-APP-000093-WSR-000053'\n  tag \"fix_id\": 'F-47068r2_fix'\n  tag \"cci\": ['CCI-001462']\n  tag \"nist\": ['AU-14 (2)', '']\n\n  # log_format - Context:\thttp\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      http['log_format'].each do |log_format|\n        describe 'remote_user' do\n          it 'should be part of every log format in the http context.' do\n            expect(log_format.to_s).to(match(/.*?\\$remote_user.*?/))\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41609.rb",
        "line": 1
      },
      "id": "V-41609"
    },
    {
      "title": "The web server must maintain the confidentiality and integrity of\n  information during preparation for transmission.",
      "desc": "Information can be either unintentionally or maliciously disclosed or\n  modified during preparation for transmission, including, for example, during\n  aggregation, at protocol transformation points, and during packing/unpacking.\n  These unauthorized disclosures or modifications compromise the confidentiality\n  or integrity of the information.\n\n    An example of this would be an SMTP queue. This queue may be added to a web\n  server through an SMTP module to enhance error reporting or to allow developers\n  to add SMTP functionality to their applications.\n\n    Any modules used by the web server that queue data before transmission must\n  maintain the confidentiality and integrity of the information before the data\n  is transmitted.",
      "descriptions": {
        "default": "Information can be either unintentionally or maliciously disclosed or\n  modified during preparation for transmission, including, for example, during\n  aggregation, at protocol transformation points, and during packing/unpacking.\n  These unauthorized disclosures or modifications compromise the confidentiality\n  or integrity of the information.\n\n    An example of this would be an SMTP queue. This queue may be added to a web\n  server through an SMTP module to enhance error reporting or to allow developers\n  to add SMTP functionality to their applications.\n\n    Any modules used by the web server that queue data before transmission must\n  maintain the confidentiality and integrity of the information before the data\n  is transmitted.",
        "check": "Review the web server documentation and deployed configuration\n  to determine if the web server maintains the confidentiality and integrity of\n  information during preparation before transmission.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n  #grep the 'ssl_protocols' directive in the server context of the nginx.conf\n  and any separated include configuration file.\n\n  If the 'ssl_protocols' directive cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  If the 'ssl_protocols' directive is not set to the approved TLS version,\n  this is a finding.",
        "fix": "Add the 'ssl_protocols' directive to the NGINX configuration\n  file(s) and configure it to use the approved TLS protocols to maintain the\n  confidentiality and integrity of information during preparation for transmission.\n\n  Example:\n    server {\n            ssl_protocols TLSv1.2;\n    }"
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000441-WSR-000181",
        "gid": "V-56013",
        "rid": "SV-70267r2_rule",
        "stig_id": "SRG-APP-000441-WSR-000181",
        "fix_id": "F-60891r1_fix",
        "cci": [
          "CCI-002420"
        ],
        "nist": [
          "SC-8 (2)",
          ""
        ]
      },
      "code": "control 'V-56013' do\n  title \"The web server must maintain the confidentiality and integrity of\n  information during preparation for transmission.\"\n  desc \"Information can be either unintentionally or maliciously disclosed or\n  modified during preparation for transmission, including, for example, during\n  aggregation, at protocol transformation points, and during packing/unpacking.\n  These unauthorized disclosures or modifications compromise the confidentiality\n  or integrity of the information.\n\n    An example of this would be an SMTP queue. This queue may be added to a web\n  server through an SMTP module to enhance error reporting or to allow developers\n  to add SMTP functionality to their applications.\n\n    Any modules used by the web server that queue data before transmission must\n  maintain the confidentiality and integrity of the information before the data\n  is transmitted.\n  \"\n\n  desc 'check', \"Review the web server documentation and deployed configuration\n  to determine if the web server maintains the confidentiality and integrity of\n  information during preparation before transmission.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check for the following:\n  #grep the 'ssl_protocols' directive in the server context of the nginx.conf\n  and any separated include configuration file.\n\n  If the 'ssl_protocols' directive cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  If the 'ssl_protocols' directive is not set to the approved TLS version,\n  this is a finding.\n  \"\n  desc 'fix', \"Add the 'ssl_protocols' directive to the NGINX configuration\n  file(s) and configure it to use the approved TLS protocols to maintain the\n  confidentiality and integrity of information during preparation for transmission.\n\n  Example:\n    server {\n            ssl_protocols TLSv1.2;\n    }\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000441-WSR-000181'\n  tag \"gid\": 'V-56013'\n  tag \"rid\": 'SV-70267r2_rule'\n  tag \"stig_id\": 'SRG-APP-000441-WSR-000181'\n  tag \"fix_id\": 'F-60891r1_fix'\n  tag \"cci\": ['CCI-002420']\n  tag \"nist\": ['SC-8 (2)', '']\n\n  if nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.each do |server|\n      if server.params['ssl_protocols'].nil?\n        impact 0.0\n        describe 'This test is NA because the ssl_protocols directive has not been configured.' do\n          skip 'This test is NA because the ssl_protocols directive has not been configured.'\n        end\n      else\n        server.params['ssl_protocols'].each do |protocol|\n          describe 'Each protocol' do\n            it 'should be included in the list of protocols approved to encrypt data' do\n              expect(protocol).to(be_in(input('approved_ssl_protocols')))\n            end\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-56013.rb",
        "line": 1
      },
      "id": "V-56013"
    },
    {
      "title": "The NGINX web server must employ cryptographic mechanisms (TLS/DTLS/SSL)\npreventing the unauthorized disclosure of information during transmission.",
      "desc": "Preventing the disclosure of transmitted information requires that the\nweb server take measures to employ some form of cryptographic mechanism in\norder to protect the information during transmission. This is usually achieved\nthrough the use of Transport Layer Security (TLS).\n\n    Transmission of data can take place between the web server and a large\nnumber of devices/applications external to the web server. Examples are a web\nclient used by a user, a backend database, an audit server, or other web\nservers in a web cluster.\n\n    If data is transmitted unencrypted, the data then becomes vulnerable to\ndisclosure. The disclosure may reveal user identifier/password combinations,\nwebsite code revealing business logic, or other user personal information.",
      "descriptions": {
        "default": "Preventing the disclosure of transmitted information requires that the\nweb server take measures to employ some form of cryptographic mechanism in\norder to protect the information during transmission. This is usually achieved\nthrough the use of Transport Layer Security (TLS).\n\n    Transmission of data can take place between the web server and a large\nnumber of devices/applications external to the web server. Examples are a web\nclient used by a user, a backend database, an audit server, or other web\nservers in a web cluster.\n\n    If data is transmitted unencrypted, the data then becomes vulnerable to\ndisclosure. The disclosure may reveal user identifier/password combinations,\nwebsite code revealing business logic, or other user personal information.",
        "check": "Review the NGINX web server documentation and deployed configuration\n  to determine whether the transmission of data between the web server and external\n  devices is encrypted.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check if SSL is enabled on the server:\n  #grep the 'listen' directive in the server context of the nginx.conf and any\n  separated include configuration file.\n\n  If the 'listen' directive is not configured to use ssl, this is a finding.\n\n  Check for if 'ssl_protocols' is configured:\n    #grep the 'ssl_protocols' directive in the server context of the nginx.conf and\n    any separated include configuration file.\n\n  If the 'ssl_protocols' directive is not set to the approved TLS version, this is a finding.\n\n  If the 'listen' and 'ssl_protocols' directives cannot be found in NGINX configuration files,\n  this check is Not Applicable.",
        "fix": "Configure the 'listen' directive to the NGINX configuration file(s)\n  to enable the use of SSL to ensure that all information in transmission is being encrypted.\n\n  Add the 'ssl_protocols' directive to the NGINX configuration file(s)\n  and configure it to use the approved TLS protocols to ensure that all information\n  in transmission is being encrypted.\n\n  Example:\n    server {\n            listen 443 ssl;\n            ssl_protocols TLSv1.2;\n    }"
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000439-WSR-000151",
        "gid": "V-56001",
        "rid": "SV-70255r2_rule",
        "stig_id": "SRG-APP-000439-WSR-000151",
        "fix_id": "F-60879r1_fix",
        "cci": [
          "CCI-002418"
        ],
        "nist": [
          "SC-8"
        ]
      },
      "code": "control 'V-56001' do\n  title \"The NGINX web server must employ cryptographic mechanisms (TLS/DTLS/SSL)\npreventing the unauthorized disclosure of information during transmission.\"\n  desc  \"Preventing the disclosure of transmitted information requires that the\nweb server take measures to employ some form of cryptographic mechanism in\norder to protect the information during transmission. This is usually achieved\nthrough the use of Transport Layer Security (TLS).\n\n    Transmission of data can take place between the web server and a large\nnumber of devices/applications external to the web server. Examples are a web\nclient used by a user, a backend database, an audit server, or other web\nservers in a web cluster.\n\n    If data is transmitted unencrypted, the data then becomes vulnerable to\ndisclosure. The disclosure may reveal user identifier/password combinations,\nwebsite code revealing business logic, or other user personal information.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and deployed configuration\n  to determine whether the transmission of data between the web server and external\n  devices is encrypted.\n\n  If NGINX is not configured to serve files, this check is Not Applicable.\n\n  Check if SSL is enabled on the server:\n  #grep the 'listen' directive in the server context of the nginx.conf and any\n  separated include configuration file.\n\n  If the 'listen' directive is not configured to use ssl, this is a finding.\n\n  Check for if 'ssl_protocols' is configured:\n    #grep the 'ssl_protocols' directive in the server context of the nginx.conf and\n    any separated include configuration file.\n\n  If the 'ssl_protocols' directive is not set to the approved TLS version, this is a finding.\n\n  If the 'listen' and 'ssl_protocols' directives cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n  \"\n  desc 'fix', \"Configure the 'listen' directive to the NGINX configuration file(s)\n  to enable the use of SSL to ensure that all information in transmission is being encrypted.\n\n  Add the 'ssl_protocols' directive to the NGINX configuration file(s)\n  and configure it to use the approved TLS protocols to ensure that all information\n  in transmission is being encrypted.\n\n  Example:\n    server {\n            listen 443 ssl;\n            ssl_protocols TLSv1.2;\n    }\n  \"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000439-WSR-000151'\n  tag \"gid\": 'V-56001'\n  tag \"rid\": 'SV-70255r2_rule'\n  tag \"stig_id\": 'SRG-APP-000439-WSR-000151'\n  tag \"fix_id\": 'F-60879r1_fix'\n  tag \"cci\": ['CCI-002418']\n  tag \"nist\": %w(SC-8)\n\n  if nginx_conf.servers.nil?\n    impact 0.0\n    describe 'This check is NA because NGINX has not been configured to serve files.' do\n      skip 'This check is NA because NGINX has not been configured to serve files.'\n    end\n  else\n    nginx_conf.servers.each do |server|\n      describe 'The listen directive' do\n        if server.params['listen'].nil?\n          impact 0.0\n          describe 'This test is NA because the listen directive has not been configured.' do\n            skip 'This test is NA because the listen directive has not been configured.'\n          end\n        else\n          it 'should be configured with SSL enabled.' do\n            expect(server.params['listen'].to_s).to(include 'ssl')\n          end\n        end\n      end\n      if server.params['ssl_protocols'].nil?\n        impact 0.0\n        describe 'This test is NA because the ssl_protocols directive has not been configured.' do\n          skip 'This test is NA because the ssl_protocols directive has not been configured.'\n        end\n      else\n        server.params['ssl_protocols'].each do |protocol|\n          describe 'Each protocol' do\n            it 'should be included in the list of protocols approved to encrypt data' do\n              expect(protocol).to(be_in(input('approved_ssl_protocols')))\n            end\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-56001.rb",
        "line": 1
      },
      "id": "V-56001"
    },
    {
      "title": "An NGINX web server utilizing mobile code must meet DoD-defined mobile code\n  requirements.",
      "desc": "Mobile code in hosted applications allows the developer to add\n  functionality and displays to hosted applications that are fluid, as opposed to\n  a static web page. The data presentation becomes more appealing to the user, is\n  easier to analyze, and navigation through the hosted application and data is\n  much less complicated.\n\n    Some mobile code technologies in use in today's applications are: Java,\n  JavaScript, ActiveX, PDF, Postscript, Shockwave movies, Flash animations, and\n  VBScript. The DoD has created policies that define the usage of mobile code on\n  DoD systems. The usage restrictions and implementation guidance apply to both\n  the selection and use of mobile code installed on organizational servers and\n  mobile code downloaded and executed on individual workstations.\n\n    The web server may host applications that contain mobile code and\n  therefore, must meet the DoD-defined requirements regarding the deployment\n  and/or use of mobile code. This includes digitally signing applets in order to\n  provide a means for the client to establish application authenticity.",
      "descriptions": {
        "default": "Mobile code in hosted applications allows the developer to add\n  functionality and displays to hosted applications that are fluid, as opposed to\n  a static web page. The data presentation becomes more appealing to the user, is\n  easier to analyze, and navigation through the hosted application and data is\n  much less complicated.\n\n    Some mobile code technologies in use in today's applications are: Java,\n  JavaScript, ActiveX, PDF, Postscript, Shockwave movies, Flash animations, and\n  VBScript. The DoD has created policies that define the usage of mobile code on\n  DoD systems. The usage restrictions and implementation guidance apply to both\n  the selection and use of mobile code installed on organizational servers and\n  mobile code downloaded and executed on individual workstations.\n\n    The web server may host applications that contain mobile code and\n  therefore, must meet the DoD-defined requirements regarding the deployment\n  and/or use of mobile code. This includes digitally signing applets in order to\n  provide a means for the client to establish application authenticity.",
        "check": "Review the web server documentation and deployed configuration\n  to determine whether mobile code used by hosted applications follows the DoD\n  policies on the acquisition, development, and/or use of mobile code.\n\n  If the web server does not implement mobile code, this check is Not Applicable.\n\n  If the web server does implement mobile code but is not configured to follow\n  the DoD policies on mobile code, this is a finding.",
        "fix": "Configure the web server to follow the DoD policies on mobile\n  code."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000206-WSR-000128",
        "gid": "V-56019",
        "rid": "SV-70273r2_rule",
        "stig_id": "SRG-APP-000206-WSR-000128",
        "fix_id": "F-60897r1_fix",
        "cci": [
          "CCI-001166"
        ],
        "nist": [
          "SC-18 (1)",
          ""
        ]
      },
      "code": "control 'V-56019' do\n  title \"An NGINX web server utilizing mobile code must meet DoD-defined mobile code\n  requirements.\"\n  desc \"Mobile code in hosted applications allows the developer to add\n  functionality and displays to hosted applications that are fluid, as opposed to\n  a static web page. The data presentation becomes more appealing to the user, is\n  easier to analyze, and navigation through the hosted application and data is\n  much less complicated.\n\n    Some mobile code technologies in use in today's applications are: Java,\n  JavaScript, ActiveX, PDF, Postscript, Shockwave movies, Flash animations, and\n  VBScript. The DoD has created policies that define the usage of mobile code on\n  DoD systems. The usage restrictions and implementation guidance apply to both\n  the selection and use of mobile code installed on organizational servers and\n  mobile code downloaded and executed on individual workstations.\n\n    The web server may host applications that contain mobile code and\n  therefore, must meet the DoD-defined requirements regarding the deployment\n  and/or use of mobile code. This includes digitally signing applets in order to\n  provide a means for the client to establish application authenticity.\n  \"\n\n  desc 'check', \"Review the web server documentation and deployed configuration\n  to determine whether mobile code used by hosted applications follows the DoD\n  policies on the acquisition, development, and/or use of mobile code.\n\n  If the web server does not implement mobile code, this check is Not Applicable.\n\n  If the web server does implement mobile code but is not configured to follow\n  the DoD policies on mobile code, this is a finding.\n  \"\n  desc 'fix', \"Configure the web server to follow the DoD policies on mobile\n  code.\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000206-WSR-000128'\n  tag \"gid\": 'V-56019'\n  tag \"rid\": 'SV-70273r2_rule'\n  tag \"stig_id\": 'SRG-APP-000206-WSR-000128'\n  tag \"fix_id\": 'F-60897r1_fix'\n  tag \"cci\": ['CCI-001166']\n  tag \"nist\": ['SC-18 (1)', '']\n\n  if input('implements_mobile_code') == false\n    impact 0.0\n    describe 'This check is NA because NGINX does not implement mobile code.' do\n      skip 'This check is NA because NGINX does not implement mobile code.'\n    end\n  else\n    describe \"This test requires a Manual Review: Verify the web server is configured\n    to follow DoD policies on mobile code by reviewing the NGINX documentation.\" do\n      skip \"This test requires a Manual Review: Verify the web server is configured\n      to follow DoD policies on mobile code by reviewing the NGINX documentation.\"\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-56019.rb",
        "line": 1
      },
      "id": "V-56019"
    },
    {
      "title": "The NGINX web server must provide install options to exclude installation of\n  utility programs, services, plug-ins, and modules not necessary for operation.",
      "desc": "Just as running unneeded services and protocols is a danger to the web\n  server at the lower levels of the OSI model, running unneeded utilities and\n  programs is also a danger at the application layer of the OSI model. Office\n  suites, development tools, and graphical editors are examples of such programs\n  that are troublesome.\n\n    Individual productivity tools have no legitimate place or use on an\n  enterprise, production web server and they are also prone to their own security\n  risks. The web server installation process must provide options allowing the\n  installer to choose which utility programs, services, and modules are to be\n  installed or removed. By having a process for installation and removal, the web\n  server is guaranteed to be in a more stable and secure state than if these\n  services and programs were installed and removed manually.",
      "descriptions": {
        "default": "Just as running unneeded services and protocols is a danger to the web\n  server at the lower levels of the OSI model, running unneeded utilities and\n  programs is also a danger at the application layer of the OSI model. Office\n  suites, development tools, and graphical editors are examples of such programs\n  that are troublesome.\n\n    Individual productivity tools have no legitimate place or use on an\n  enterprise, production web server and they are also prone to their own security\n  risks. The web server installation process must provide options allowing the\n  installer to choose which utility programs, services, and modules are to be\n  installed or removed. By having a process for installation and removal, the web\n  server is guaranteed to be in a more stable and secure state than if these\n  services and programs were installed and removed manually.",
        "check": "Review the NGINX web server documentation and deployment\n  configuration to determine which web server utilities, services, and modules\n  are installed. Verify these options are essential to the operation of the\n  web server. Also, confirm the web server install process offers an option to\n  exclude these utilities, services, and modules from installation that are not\n  needed for operation and that there is an uninstall option for their removal.\n\n  Enter the following command to get a list of the modules installed:\n    # nginx -V\n\n  If there are more modules installed than are needed for the operation of\n  the NGINX web server, this is a finding.",
        "fix": "Use the configure script (available in the nginx download package)\n  to exclude modules not needed by NGINX using the --without {module_name} option."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000141-WSR-000080",
        "gid": "V-41698",
        "rid": "SV-54275r3_rule",
        "stig_id": "SRG-APP-000141-WSR-000080",
        "fix_id": "F-47157r2_fix",
        "cci": [
          "CCI-000381"
        ],
        "nist": [
          "CM-7 a",
          ""
        ]
      },
      "code": "control 'V-41698' do\n  title \"The NGINX web server must provide install options to exclude installation of\n  utility programs, services, plug-ins, and modules not necessary for operation.\"\n  desc \"Just as running unneeded services and protocols is a danger to the web\n  server at the lower levels of the OSI model, running unneeded utilities and\n  programs is also a danger at the application layer of the OSI model. Office\n  suites, development tools, and graphical editors are examples of such programs\n  that are troublesome.\n\n    Individual productivity tools have no legitimate place or use on an\n  enterprise, production web server and they are also prone to their own security\n  risks. The web server installation process must provide options allowing the\n  installer to choose which utility programs, services, and modules are to be\n  installed or removed. By having a process for installation and removal, the web\n  server is guaranteed to be in a more stable and secure state than if these\n  services and programs were installed and removed manually.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and deployment\n  configuration to determine which web server utilities, services, and modules\n  are installed. Verify these options are essential to the operation of the\n  web server. Also, confirm the web server install process offers an option to\n  exclude these utilities, services, and modules from installation that are not\n  needed for operation and that there is an uninstall option for their removal.\n\n  Enter the following command to get a list of the modules installed:\n    # nginx -V\n\n  If there are more modules installed than are needed for the operation of\n  the NGINX web server, this is a finding.\n  \"\n  desc 'fix', \"Use the configure script (available in the nginx download package)\n  to exclude modules not needed by NGINX using the --without {module_name} option.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000141-WSR-000080'\n  tag \"gid\": 'V-41698'\n  tag \"rid\": 'SV-54275r3_rule'\n  tag \"stig_id\": 'SRG-APP-000141-WSR-000080'\n  tag \"fix_id\": 'F-47157r2_fix'\n  tag \"cci\": ['CCI-000381']\n  tag \"nist\": ['CM-7 a', '']\n\n  # Only allow a small subset of authorized modules in an attempt to minimize the number of modules active\n  describe nginx do\n    its('modules') { should be_in input('nginx_authorized_modules') }\n  end\n  describe nginx do\n    its('modules') { should_not be_in input('nginx_unauthorized_modules') }\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41698.rb",
        "line": 1
      },
      "id": "V-41698"
    },
    {
      "title": "Expansion modules must be fully reviewed, tested, and signed before\n  they can exist on a production NGINX web server.",
      "desc": "In the case of a production web server, areas for content development\n  and testing will not exist, as this type of content is only permissible on a\n  development website.  The process of developing on a functional production\n  website entails a degree of trial and error and repeated testing.  This process\n  is often accomplished in an environment where debugging, sequencing, and\n  formatting of content are the main goals.  The opportunity for a malicious user\n  to obtain files that reveal business logic and login schemes is high in this\n  situation.  The existence of such immature content on a web server represents a\n  significant security risk that is totally avoidable.\n\n      The web server must enforce, internally or through an external utility, the\n  signing of modules before they are implemented into a production environment.\n  By signing modules, the author guarantees that the module has been reviewed and\n  tested before production implementation.",
      "descriptions": {
        "default": "In the case of a production web server, areas for content development\n  and testing will not exist, as this type of content is only permissible on a\n  development website.  The process of developing on a functional production\n  website entails a degree of trial and error and repeated testing.  This process\n  is often accomplished in an environment where debugging, sequencing, and\n  formatting of content are the main goals.  The opportunity for a malicious user\n  to obtain files that reveal business logic and login schemes is high in this\n  situation.  The existence of such immature content on a web server represents a\n  significant security risk that is totally avoidable.\n\n      The web server must enforce, internally or through an external utility, the\n  signing of modules before they are implemented into a production environment.\n  By signing modules, the author guarantees that the module has been reviewed and\n  tested before production implementation.",
        "check": "Review the NGINX web server documentation and configuration\n  to determine if web server modules are fully tested before implementation in\n  the production environment.\n\n  Review the web server for modules identified as test, debug, or backup and\n  that cannot be reached through the hosted application.\n\n  Review the web server to see if the web server or an external utility is in\n  use to enforce the signing of modules before they are put into a production\n  environment.\n\n  Enter the following command to get a list of the modules installed:\n    # nginx -V\n\n  If there are any modules not required for operation or unsigned modules, this is a finding.",
        "fix": "Use the configure script (available in the nginx download package) to exclude\n  modules unsigned modules using the --without {module_name} option."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000131-WSR-000073",
        "gid": "V-41684",
        "rid": "SV-54261r3_rule",
        "stig_id": "SRG-APP-000131-WSR-000073",
        "fix_id": "F-47143r2_fix",
        "cci": [
          "CCI-001749"
        ],
        "nist": [
          "CM-5 (3)",
          ""
        ]
      },
      "code": "control 'V-41684' do\n  title \"Expansion modules must be fully reviewed, tested, and signed before\n  they can exist on a production NGINX web server.\"\n  desc \"In the case of a production web server, areas for content development\n  and testing will not exist, as this type of content is only permissible on a\n  development website.  The process of developing on a functional production\n  website entails a degree of trial and error and repeated testing.  This process\n  is often accomplished in an environment where debugging, sequencing, and\n  formatting of content are the main goals.  The opportunity for a malicious user\n  to obtain files that reveal business logic and login schemes is high in this\n  situation.  The existence of such immature content on a web server represents a\n  significant security risk that is totally avoidable.\n\n      The web server must enforce, internally or through an external utility, the\n  signing of modules before they are implemented into a production environment.\n  By signing modules, the author guarantees that the module has been reviewed and\n  tested before production implementation.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and configuration\n  to determine if web server modules are fully tested before implementation in\n  the production environment.\n\n  Review the web server for modules identified as test, debug, or backup and\n  that cannot be reached through the hosted application.\n\n  Review the web server to see if the web server or an external utility is in\n  use to enforce the signing of modules before they are put into a production\n  environment.\n\n  Enter the following command to get a list of the modules installed:\n    # nginx -V\n\n  If there are any modules not required for operation or unsigned modules, this is a finding.\n  \"\n  desc 'fix', \"Use the configure script (available in the nginx download package) to exclude\n  modules unsigned modules using the --without {module_name} option.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000131-WSR-000073'\n  tag \"gid\": 'V-41684'\n  tag \"rid\": 'SV-54261r3_rule'\n  tag \"stig_id\": 'SRG-APP-000131-WSR-000073'\n  tag \"fix_id\": 'F-47143r2_fix'\n  tag \"cci\": ['CCI-001749']\n  tag \"nist\": ['CM-5 (3)', '']\n\n  # Only allow a small subset of authorized modules in an attempt to minimize the number of modules active\n\n  describe nginx do\n    its('modules') { should be_in input('nginx_authorized_modules') }\n  end\n  describe nginx do\n    its('modules') { should_not be_in input('nginx_unauthorized_modules') }\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41684.rb",
        "line": 1
      },
      "id": "V-41684"
    },
    {
      "title": "An NGINX web server that is part of a web server cluster must route all\nremote management through a centrally managed access control point.",
      "desc": "A web server cluster is a group of independent web servers that are\nmanaged as a single system for higher availability, easier manageability, and\ngreater scalability. Without having centralized control of the web server\ncluster, management of the cluster becomes difficult. It is critical that\nremote management of the cluster be done through a designated management system\nacting as a single access point.",
      "descriptions": {
        "default": "A web server cluster is a group of independent web servers that are\nmanaged as a single system for higher availability, easier manageability, and\ngreater scalability. Without having centralized control of the web server\ncluster, management of the cluster becomes difficult. It is critical that\nremote management of the cluster be done through a designated management system\nacting as a single access point.",
        "check": "Review the web server documentation and configuration to\n  determine if the web server is part of a cluster.\n\n  If the web server is not part of a cluster, then this check is Not Applicable.\n\n  If the web server is part of a cluster and is not centrally managed, then\n  this is a finding.",
        "fix": "Configure the web server to be centrally managed."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000356-WSR-000007",
        "gid": "V-55957",
        "rid": "SV-70211r2_rule",
        "stig_id": "SRG-APP-000356-WSR-000007",
        "fix_id": "F-60835r1_fix",
        "cci": [
          "CCI-001844"
        ],
        "nist": [
          "AU-3 (2)",
          ""
        ]
      },
      "code": "control 'V-55957' do\n  title \"An NGINX web server that is part of a web server cluster must route all\nremote management through a centrally managed access control point.\"\n  desc  \"A web server cluster is a group of independent web servers that are\nmanaged as a single system for higher availability, easier manageability, and\ngreater scalability. Without having centralized control of the web server\ncluster, management of the cluster becomes difficult. It is critical that\nremote management of the cluster be done through a designated management system\nacting as a single access point.\"\n\n  desc  'check', \"Review the web server documentation and configuration to\n  determine if the web server is part of a cluster.\n\n  If the web server is not part of a cluster, then this check is Not Applicable.\n\n  If the web server is part of a cluster and is not centrally managed, then\n  this is a finding.\n  \"\n  desc 'fix', 'Configure the web server to be centrally managed.'\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000356-WSR-000007'\n  tag \"gid\": 'V-55957'\n  tag \"rid\": 'SV-70211r2_rule'\n  tag \"stig_id\": 'SRG-APP-000356-WSR-000007'\n  tag \"fix_id\": 'F-60835r1_fix'\n  tag \"cci\": ['CCI-001844']\n  tag \"nist\": ['AU-3 (2)', '']\n\n  if input('is_cluster') == false\n    impact 0.0\n    describe 'This check is NA because NGINX is not part of a cluster.' do\n      skip 'This check is NA because NGINX is not part of a cluster.'\n    end\n  elsif input('is_cluster_master') == false\n    describe nginx do\n      its('modules') { should include 'ngx_stream_zone_sync_module' }\n    end\n  else\n    describe nginx do\n      its('modules') { should include 'ngx_stream_zone_sync_module' }\n    end\n    describe package('nginx-sync') do\n      it { should be_installed }\n    end\n    describe parse_config_file('/etc/nginx-sync.conf') do\n      its('NODES') { should_not be nil }\n      its('CONFPATHS') { should_not be nil }\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55957.rb",
        "line": 1
      },
      "id": "V-55957"
    },
    {
      "title": "Web server accounts not utilized by installed features (i.e., tools,\n  utilities, specific services, etc.) must not be created and must be deleted\n  when the NGINX web server feature is uninstalled.",
      "desc": "When accounts used for web server features such as documentation,\n  sample code, example applications, tutorials, utilities, and services are\n  created even though the feature is not installed, they become an exploitable\n  threat to a web server.\n\n    These accounts become inactive, are not monitored through regular use, and\n  passwords for the accounts are not created or updated. An attacker, through\n  very little effort, can use these accounts to gain access to the web server and\n  begin investigating ways to elevate the account privileges.\n\n    The accounts used for web server features not installed must not be created\n  and must be deleted when these features are uninstalled.",
      "descriptions": {
        "default": "When accounts used for web server features such as documentation,\n  sample code, example applications, tutorials, utilities, and services are\n  created even though the feature is not installed, they become an exploitable\n  threat to a web server.\n\n    These accounts become inactive, are not monitored through regular use, and\n  passwords for the accounts are not created or updated. An attacker, through\n  very little effort, can use these accounts to gain access to the web server and\n  begin investigating ways to elevate the account privileges.\n\n    The accounts used for web server features not installed must not be created\n  and must be deleted when these features are uninstalled.",
        "check": "Review the NGINX web server documentation to determine the user\n  accounts created when particular features are installed.\n\n  Verify that user specified is an authorized user:\n    #grep the 'user' directive in the main context of the nginx.conf file\n\n  If the 'user' directive cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  Verify the accounts specified in the 'user' directive has an entry in /etc/passwd:\n    # grep -w '<user account>' /etc/passwd'\n\n  If any accounts exist that are not used by the installed features, this is a finding.",
        "fix": "Ensure at least one 'user' directive exists in the nginx.conf file\n  and remove user accounts not used by the installed NGINX web server features."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000141-WSR-000078",
        "gid": "V-41696",
        "rid": "SV-54273r3_rule",
        "stig_id": "SRG-APP-000141-WSR-000078",
        "fix_id": "F-47155r2_fix",
        "cci": [
          "CCI-000381"
        ],
        "nist": [
          "CM-7 a",
          ""
        ]
      },
      "code": "control 'V-41696' do\n  title \"Web server accounts not utilized by installed features (i.e., tools,\n  utilities, specific services, etc.) must not be created and must be deleted\n  when the NGINX web server feature is uninstalled.\"\n  desc \"When accounts used for web server features such as documentation,\n  sample code, example applications, tutorials, utilities, and services are\n  created even though the feature is not installed, they become an exploitable\n  threat to a web server.\n\n    These accounts become inactive, are not monitored through regular use, and\n  passwords for the accounts are not created or updated. An attacker, through\n  very little effort, can use these accounts to gain access to the web server and\n  begin investigating ways to elevate the account privileges.\n\n    The accounts used for web server features not installed must not be created\n  and must be deleted when these features are uninstalled.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation to determine the user\n  accounts created when particular features are installed.\n\n  Verify that user specified is an authorized user:\n    #grep the 'user' directive in the main context of the nginx.conf file\n\n  If the 'user' directive cannot be found in NGINX configuration files,\n  this check is Not Applicable.\n\n  Verify the accounts specified in the 'user' directive has an entry in /etc/passwd:\n    # grep -w '<user account>' /etc/passwd'\n\n  If any accounts exist that are not used by the installed features, this is a finding.\n  \"\n  desc 'fix', \"Ensure at least one 'user' directive exists in the nginx.conf file\n  and remove user accounts not used by the installed NGINX web server features.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000141-WSR-000078'\n  tag \"gid\": 'V-41696'\n  tag \"rid\": 'SV-54273r3_rule'\n  tag \"stig_id\": 'SRG-APP-000141-WSR-000078'\n  tag \"fix_id\": 'F-47155r2_fix'\n  tag \"cci\": ['CCI-000381']\n  tag \"nist\": ['CM-7 a', '']\n\n  if nginx_conf.params['user'].nil?\n    impact 0.0\n    describe 'This check is NA because the user directive is not configured properly.' do\n      skip 'This check is NA because the user directive is not configured properly.'\n    end\n  else\n    nginx_conf.params['user'].each do |user|\n      user.each do |value|\n        describe 'The value of user' do\n          it 'should be the default nginx user or other authorized user.' do\n            expect(value).to (eq input('nginx_owner')).or(be_in(input('authorized_user_list')))\n          end\n        end\n        describe 'The password file' do\n          it 'should include the nginx account.' do\n            expect(command(\"grep -w #{value} /etc/passwd\").stdout).to(match(/.*?#{value}.*?/))\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41696.rb",
        "line": 1
      },
      "id": "V-41696"
    },
    {
      "title": "The NGINX web server must produce log records that contain sufficient\n  information to establish the outcome (success or failure) of events.",
      "desc": "Web server logging capability is critical for accurate forensic\n  analysis. Without sufficient and accurate information, a correct replay of the\n  events cannot be determined.\n\n    Ascertaining the success or failure of an event is important during\n  forensic analysis. Correctly determining the outcome will add information to\n  the overall reconstruction of the logable event. By determining the success or\n  failure of the event correctly, analysis of the enterprise can be undertaken to\n  determine if events tied to the event occurred in other areas within the\n  enterprise.\n\n    Without sufficient information establishing the success or failure of the\n  logged event, investigation into the cause of event is severely hindered. The\n  success or failure also provides a means to measure the impact of an event and\n  help authorized personnel to determine the appropriate response. Log record\n  content that may be necessary to satisfy the requirement of this control\n  includes, but is not limited to, time stamps, source and destination IP\n  addresses, user/process identifiers, event descriptions, application-specific\n  events, success/fail indications, file names involved, access control, or flow\n  control rules invoked.",
      "descriptions": {
        "default": "Web server logging capability is critical for accurate forensic\n  analysis. Without sufficient and accurate information, a correct replay of the\n  events cannot be determined.\n\n    Ascertaining the success or failure of an event is important during\n  forensic analysis. Correctly determining the outcome will add information to\n  the overall reconstruction of the logable event. By determining the success or\n  failure of the event correctly, analysis of the enterprise can be undertaken to\n  determine if events tied to the event occurred in other areas within the\n  enterprise.\n\n    Without sufficient information establishing the success or failure of the\n  logged event, investigation into the cause of event is severely hindered. The\n  success or failure also provides a means to measure the impact of an event and\n  help authorized personnel to determine the appropriate response. Log record\n  content that may be necessary to satisfy the requirement of this control\n  includes, but is not limited to, time stamps, source and destination IP\n  addresses, user/process identifiers, event descriptions, application-specific\n  events, success/fail indications, file names involved, access control, or flow\n  control rules invoked.",
        "check": "Review the NGINX web server documentation and deployment\n  configuration to determine if the web server is configured to generate the\n  outcome (success or failure) of the event.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n  Check for the following:\n      # grep for a 'log_format' directive in the http context of the nginx.conf.\n\n  If the 'log_format' directive is not configured to contain the '$status' variable,\n  this is a finding.",
        "fix": "Configure the 'log_format' directive in the nginx.conf to use the\n  '$status' variable to generate the outcome, success or failure, as part of each\n  logable event."
      },
      "impact": 0,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000099-WSR-000061",
        "gid": "V-41617",
        "rid": "SV-54194r3_rule",
        "stig_id": "SRG-APP-000099-WSR-000061",
        "fix_id": "F-47076r2_fix",
        "cci": [
          "CCI-000134"
        ],
        "nist": [
          "AU-3"
        ]
      },
      "code": "control 'V-41617' do\n  title \"The NGINX web server must produce log records that contain sufficient\n  information to establish the outcome (success or failure) of events.\"\n  desc \"Web server logging capability is critical for accurate forensic\n  analysis. Without sufficient and accurate information, a correct replay of the\n  events cannot be determined.\n\n    Ascertaining the success or failure of an event is important during\n  forensic analysis. Correctly determining the outcome will add information to\n  the overall reconstruction of the logable event. By determining the success or\n  failure of the event correctly, analysis of the enterprise can be undertaken to\n  determine if events tied to the event occurred in other areas within the\n  enterprise.\n\n    Without sufficient information establishing the success or failure of the\n  logged event, investigation into the cause of event is severely hindered. The\n  success or failure also provides a means to measure the impact of an event and\n  help authorized personnel to determine the appropriate response. Log record\n  content that may be necessary to satisfy the requirement of this control\n  includes, but is not limited to, time stamps, source and destination IP\n  addresses, user/process identifiers, event descriptions, application-specific\n  events, success/fail indications, file names involved, access control, or flow\n  control rules invoked.\n  \"\n  desc 'check', \"Review the NGINX web server documentation and deployment\n  configuration to determine if the web server is configured to generate the\n  outcome (success or failure) of the event.\n\n  If there are no websites configured for NGINX, this check is Not Applicable.\n\n  Check for the following:\n      # grep for a 'log_format' directive in the http context of the nginx.conf.\n\n  If the 'log_format' directive is not configured to contain the '$status' variable,\n  this is a finding.\n  \"\n  desc 'fix', \"Configure the 'log_format' directive in the nginx.conf to use the\n  '$status' variable to generate the outcome, success or failure, as part of each\n  logable event.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000099-WSR-000061'\n  tag \"gid\": 'V-41617'\n  tag \"rid\": 'SV-54194r3_rule'\n  tag \"stig_id\": 'SRG-APP-000099-WSR-000061'\n  tag \"fix_id\": 'F-47076r2_fix'\n  tag \"cci\": ['CCI-000134']\n  tag \"nist\": %w(AU-3)\n\n  if nginx_conf.params['http'].nil?\n    impact 0.0\n    describe 'This check is NA because no websites have been configured.' do\n      skip 'This check is NA because no websites have been configured.'\n    end\n  else\n    nginx_conf.params['http'].each do |http|\n      http['log_format'].each do |log_format|\n        describe 'status' do\n          it 'should be part of every log format in http.' do\n            expect(log_format.to_s).to(match(/.*?\\$status.*?/))\n          end\n        end\n      end\n    end\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41617.rb",
        "line": 1
      },
      "id": "V-41617"
    },
    {
      "title": "The web server must have Web Distributed Authoring (WebDAV) disabled.",
      "desc": "A web server can be installed with functionality that, just by its\n  nature, is not secure. Web Distributed Authoring (WebDAV) is an extension to\n  the HTTP protocol that, when developed, was meant to allow users to create,\n  change, and move documents on a server, typically a web server or web share.\n  Allowing this functionality, development, and deployment is much easier for web\n  authors.\n\n    WebDAV is not widely used and has serious security concerns because it may\n  allow clients to modify unauthorized files on the web server.",
      "descriptions": {
        "default": "A web server can be installed with functionality that, just by its\n  nature, is not secure. Web Distributed Authoring (WebDAV) is an extension to\n  the HTTP protocol that, when developed, was meant to allow users to create,\n  change, and move documents on a server, typically a web server or web share.\n  Allowing this functionality, development, and deployment is much easier for web\n  authors.\n\n    WebDAV is not widely used and has serious security concerns because it may\n  allow clients to modify unauthorized files on the web server.",
        "check": "Review the web server documentation and deployment configuration to\n  determine if Web Distributed Authoring (WebDAV) is enabled.\n\n  Execute the following command:\n\n  # nginx -V\n\n  Verify the ‘ngx_http_dav_module’ module is not installed.",
        "fix": "Use the configure script (available in the nginx download package) to\n  exclude the 'ngx_http_dav_module' module by using the --without {module_name} option."
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000141-WSR-000085",
        "gid": "V-41702",
        "rid": "SV-54279r3_rule",
        "stig_id": "SRG-APP-000141-WSR-000085",
        "fix_id": "F-47161r2_fix",
        "cci": [
          "CCI-000381"
        ],
        "nist": [
          "CM-7 a",
          ""
        ]
      },
      "code": "control 'V-41702' do\n  title 'The web server must have Web Distributed Authoring (WebDAV) disabled.'\n  desc  \"A web server can be installed with functionality that, just by its\n  nature, is not secure. Web Distributed Authoring (WebDAV) is an extension to\n  the HTTP protocol that, when developed, was meant to allow users to create,\n  change, and move documents on a server, typically a web server or web share.\n  Allowing this functionality, development, and deployment is much easier for web\n  authors.\n\n    WebDAV is not widely used and has serious security concerns because it may\n  allow clients to modify unauthorized files on the web server.\n  \"\n\n  desc 'check', \"Review the web server documentation and deployment configuration to\n  determine if Web Distributed Authoring (WebDAV) is enabled.\n\n  Execute the following command:\n\n  # nginx -V\n\n  Verify the ‘ngx_http_dav_module’ module is not installed.\n  \"\n  desc 'fix', \"Use the configure script (available in the nginx download package) to\n  exclude the 'ngx_http_dav_module' module by using the --without {module_name} option.\"\n\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000141-WSR-000085'\n  tag \"gid\": 'V-41702'\n  tag \"rid\": 'SV-54279r3_rule'\n  tag \"stig_id\": 'SRG-APP-000141-WSR-000085'\n  tag \"fix_id\": 'F-47161r2_fix'\n  tag \"cci\": ['CCI-000381']\n  tag \"nist\": ['CM-7 a', '']\n\n  describe nginx do\n    its('modules') { should_not include 'ngx_http_dav' }\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-41702.rb",
        "line": 1
      },
      "id": "V-41702"
    },
    {
      "title": "The NGINX web server must provide the capability to immediately disconnect\nor disable remote access to the hosted applications.",
      "desc": "During an attack on the web server or any of the hosted applications,\nthe system administrator may need to disconnect or disable access by users to\nstop the attack.\n\n    The web server must provide a capability to disconnect users to a hosted\napplication without compromising other hosted applications unless deemed\nnecessary to stop the attack. Methods to disconnect or disable connections are\nto stop the application service for a specified hosted application, stop the\nweb server, or block all connections through web server access list.\n\n    The web server capabilities used to disconnect or disable users from\nconnecting to hosted applications and the web server must be documented to make\ncertain that, during an attack, the proper action is taken to conserve\nconnectivity to any other hosted application if possible and to make certain\nlog data is conserved for later forensic analysis.",
      "descriptions": {
        "default": "During an attack on the web server or any of the hosted applications,\nthe system administrator may need to disconnect or disable access by users to\nstop the attack.\n\n    The web server must provide a capability to disconnect users to a hosted\napplication without compromising other hosted applications unless deemed\nnecessary to stop the attack. Methods to disconnect or disable connections are\nto stop the application service for a specified hosted application, stop the\nweb server, or block all connections through web server access list.\n\n    The web server capabilities used to disconnect or disable users from\nconnecting to hosted applications and the web server must be documented to make\ncertain that, during an attack, the proper action is taken to conserve\nconnectivity to any other hosted application if possible and to make certain\nlog data is conserved for later forensic analysis.",
        "check": "Review the NGINX web server documentation and configuration\n  to make certain that the web server is configured to allow for the immediate\n  disconnection or disabling of remote access to hosted applications when necessary.\n\n  Interview the SA and Web Manager.\n\n  Ask for documentation for the NGINX administration.\n\n  Verify there are documented procedures for shutting down an NGINX website in the\n  event of an attack. The procedure should, at a minimum, provide the following steps:\n\n  Determine the respective website for the application at risk of an attack.\n\n  In a command line, enter the following command:\n\n  # kill -TERM `cat <'INSTALLED PATH'>/nginx.pid`\n\n  If NGINX is not capable of or cannot be configured to disconnect or disable remote\n  access to the hosted applications when necessary, this is a finding.",
        "fix": "Prepare documented procedures for shutting down an NGINX website in the\n  event of an attack.\n\n  The procedure should, at a minimum, provide the following steps:\n\n  In a command line, enter the following command:\n\n    # kill -TERM `cat <'INSTALLED PATH'>/nginx.pid`"
      },
      "impact": 0.5,
      "refs": [],
      "tags": {
        "severity": "medium",
        "gtitle": "SRG-APP-000316-WSR-000170",
        "gid": "V-55955",
        "rid": "SV-70209r2_rule",
        "stig_id": "SRG-APP-000316-WSR-000170",
        "fix_id": "F-60833r1_fix",
        "cci": [
          "CCI-002322"
        ],
        "nist": [
          "AC-17 (9)",
          ""
        ]
      },
      "code": "control 'V-55955' do\n  title \"The NGINX web server must provide the capability to immediately disconnect\nor disable remote access to the hosted applications.\"\n  desc  \"During an attack on the web server or any of the hosted applications,\nthe system administrator may need to disconnect or disable access by users to\nstop the attack.\n\n    The web server must provide a capability to disconnect users to a hosted\napplication without compromising other hosted applications unless deemed\nnecessary to stop the attack. Methods to disconnect or disable connections are\nto stop the application service for a specified hosted application, stop the\nweb server, or block all connections through web server access list.\n\n    The web server capabilities used to disconnect or disable users from\nconnecting to hosted applications and the web server must be documented to make\ncertain that, during an attack, the proper action is taken to conserve\nconnectivity to any other hosted application if possible and to make certain\nlog data is conserved for later forensic analysis.\n  \"\n\n  desc 'check', \"Review the NGINX web server documentation and configuration\n  to make certain that the web server is configured to allow for the immediate\n  disconnection or disabling of remote access to hosted applications when necessary.\n\n  Interview the SA and Web Manager.\n\n  Ask for documentation for the NGINX administration.\n\n  Verify there are documented procedures for shutting down an NGINX website in the\n  event of an attack. The procedure should, at a minimum, provide the following steps:\n\n  Determine the respective website for the application at risk of an attack.\n\n  In a command line, enter the following command:\n\n  # kill -TERM `cat <'INSTALLED PATH'>/nginx.pid`\n\n  If NGINX is not capable of or cannot be configured to disconnect or disable remote\n  access to the hosted applications when necessary, this is a finding.\n  \"\n  desc  'fix', \"Prepare documented procedures for shutting down an NGINX website in the\n  event of an attack.\n\n  The procedure should, at a minimum, provide the following steps:\n\n  In a command line, enter the following command:\n\n    # kill -TERM `cat <'INSTALLED PATH'>/nginx.pid`\"\n  impact 0.5\n  tag \"severity\": 'medium'\n  tag \"gtitle\": 'SRG-APP-000316-WSR-000170'\n  tag \"gid\": 'V-55955'\n  tag \"rid\": 'SV-70209r2_rule'\n  tag \"stig_id\": 'SRG-APP-000316-WSR-000170'\n  tag \"fix_id\": 'F-60833r1_fix'\n  tag \"cci\": ['CCI-002322']\n  tag \"nist\": ['AC-17 (9)', '']\n\n  describe \"This test requires a Manual Review: Interview the SA and Web Manager and ask\n  for documentation.Verify there are documented procedures for shutting down an NGINX website\n  in the event of an attack.\" do\n    skip \"This test requires a Manual Review: Interview the SA and Web Manager and ask\n    for documentation.Verify there are documented procedures for shutting down an NGINX website\n    in the event of an attack.\"\n  end\nend\n",
      "source_location": {
        "ref": "./NGINX STIG Ready Baseline/controls/V-55955.rb",
        "line": 1
      },
      "id": "V-55955"
    }
  ],
  "groups": [
    {
      "title": null,
      "controls": [
        "V-41693"
      ],
      "id": "controls/V-41693.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41694"
      ],
      "id": "controls/V-41694.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41700"
      ],
      "id": "controls/V-41700.rb"
    },
    {
      "title": null,
      "controls": [
        "V-56015"
      ],
      "id": "controls/V-56015.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41745"
      ],
      "id": "controls/V-41745.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55947"
      ],
      "id": "controls/V-55947.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55971"
      ],
      "id": "controls/V-55971.rb"
    },
    {
      "title": null,
      "controls": [
        "V-56027"
      ],
      "id": "controls/V-56027.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55945"
      ],
      "id": "controls/V-55945.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41811"
      ],
      "id": "controls/V-41811.rb"
    },
    {
      "title": null,
      "controls": [
        "V-40792"
      ],
      "id": "controls/V-40792.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55987"
      ],
      "id": "controls/V-55987.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41699"
      ],
      "id": "controls/V-41699.rb"
    },
    {
      "title": null,
      "controls": [
        "V-40800"
      ],
      "id": "controls/V-40800.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55951"
      ],
      "id": "controls/V-55951.rb"
    },
    {
      "title": null,
      "controls": [
        "V-56029"
      ],
      "id": "controls/V-56029.rb"
    },
    {
      "title": null,
      "controls": [
        "V-40819"
      ],
      "id": "controls/V-40819.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55981"
      ],
      "id": "controls/V-55981.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55979"
      ],
      "id": "controls/V-55979.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41612"
      ],
      "id": "controls/V-41612.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55997"
      ],
      "id": "controls/V-55997.rb"
    },
    {
      "title": null,
      "controls": [
        "V-56007"
      ],
      "id": "controls/V-56007.rb"
    },
    {
      "title": null,
      "controls": [
        "V-56003"
      ],
      "id": "controls/V-56003.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41731"
      ],
      "id": "controls/V-41731.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55973"
      ],
      "id": "controls/V-55973.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41812"
      ],
      "id": "controls/V-41812.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55995"
      ],
      "id": "controls/V-55995.rb"
    },
    {
      "title": null,
      "controls": [
        "V-56017"
      ],
      "id": "controls/V-56017.rb"
    },
    {
      "title": null,
      "controls": [
        "V-56035"
      ],
      "id": "controls/V-56035.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41704"
      ],
      "id": "controls/V-41704.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55961"
      ],
      "id": "controls/V-55961.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41807"
      ],
      "id": "controls/V-41807.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41611"
      ],
      "id": "controls/V-41611.rb"
    },
    {
      "title": null,
      "controls": [
        "V-56009"
      ],
      "id": "controls/V-56009.rb"
    },
    {
      "title": null,
      "controls": [
        "V-56011"
      ],
      "id": "controls/V-56011.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41695"
      ],
      "id": "controls/V-41695.rb"
    },
    {
      "title": null,
      "controls": [
        "V-61353"
      ],
      "id": "controls/V-61353.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41671"
      ],
      "id": "controls/V-41671.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41706"
      ],
      "id": "controls/V-41706.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41668"
      ],
      "id": "controls/V-41668.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41674"
      ],
      "id": "controls/V-41674.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41746"
      ],
      "id": "controls/V-41746.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41600"
      ],
      "id": "controls/V-41600.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41701"
      ],
      "id": "controls/V-41701.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41614"
      ],
      "id": "controls/V-41614.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55977"
      ],
      "id": "controls/V-55977.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41855"
      ],
      "id": "controls/V-41855.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55983"
      ],
      "id": "controls/V-55983.rb"
    },
    {
      "title": null,
      "controls": [
        "V-40799"
      ],
      "id": "controls/V-40799.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55959"
      ],
      "id": "controls/V-55959.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41670"
      ],
      "id": "controls/V-41670.rb"
    },
    {
      "title": null,
      "controls": [
        "V-56033"
      ],
      "id": "controls/V-56033.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41821"
      ],
      "id": "controls/V-41821.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55991"
      ],
      "id": "controls/V-55991.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41738"
      ],
      "id": "controls/V-41738.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41620"
      ],
      "id": "controls/V-41620.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41703"
      ],
      "id": "controls/V-41703.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55993"
      ],
      "id": "controls/V-55993.rb"
    },
    {
      "title": null,
      "controls": [
        "V-56025"
      ],
      "id": "controls/V-56025.rb"
    },
    {
      "title": null,
      "controls": [
        "V-56021"
      ],
      "id": "controls/V-56021.rb"
    },
    {
      "title": null,
      "controls": [
        "V-56031"
      ],
      "id": "controls/V-56031.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55975"
      ],
      "id": "controls/V-55975.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41672"
      ],
      "id": "controls/V-41672.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55949"
      ],
      "id": "controls/V-55949.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41730"
      ],
      "id": "controls/V-41730.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55985"
      ],
      "id": "controls/V-55985.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55999"
      ],
      "id": "controls/V-55999.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41852"
      ],
      "id": "controls/V-41852.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55953"
      ],
      "id": "controls/V-55953.rb"
    },
    {
      "title": null,
      "controls": [
        "V-56005"
      ],
      "id": "controls/V-56005.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55969"
      ],
      "id": "controls/V-55969.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41833"
      ],
      "id": "controls/V-41833.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41616"
      ],
      "id": "controls/V-41616.rb"
    },
    {
      "title": null,
      "controls": [
        "V-40791"
      ],
      "id": "controls/V-40791.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41615"
      ],
      "id": "controls/V-41615.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55989"
      ],
      "id": "controls/V-55989.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41613"
      ],
      "id": "controls/V-41613.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41854"
      ],
      "id": "controls/V-41854.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41609"
      ],
      "id": "controls/V-41609.rb"
    },
    {
      "title": null,
      "controls": [
        "V-56013"
      ],
      "id": "controls/V-56013.rb"
    },
    {
      "title": null,
      "controls": [
        "V-56001"
      ],
      "id": "controls/V-56001.rb"
    },
    {
      "title": null,
      "controls": [
        "V-56019"
      ],
      "id": "controls/V-56019.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41698"
      ],
      "id": "controls/V-41698.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41684"
      ],
      "id": "controls/V-41684.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55957"
      ],
      "id": "controls/V-55957.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41696"
      ],
      "id": "controls/V-41696.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41617"
      ],
      "id": "controls/V-41617.rb"
    },
    {
      "title": null,
      "controls": [
        "V-41702"
      ],
      "id": "controls/V-41702.rb"
    },
    {
      "title": null,
      "controls": [
        "V-55955"
      ],
      "id": "controls/V-55955.rb"
    }
  ],
  "sha256": "68bc9d55bb211614b5209a2e25340c385b20e69ccdc5bd0054b8da3f4929a03e",
  "status_message": "",
  "status": "loaded",
  "generator": {
    "name": "inspec",
    "version": "4.33.1"
  }
}