{
    "@generated": "Thu, 6 Dec 2018 10:53:11",
    "@version": "2.7.0",
    "site": [
        {
            "@host": "ciscobinary.openh264.org",
            "@name": "http://ciscobinary.openh264.org",
            "@port": "80",
            "@ssl": "false",
            "alerts": [
                {
                    "alert": "X-Content-Type-Options Header Missing",
                    "confidence": "2",
                    "count": "1",
                    "cweid": "16",
                    "desc": "<p>The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.</p>",
                    "instances": [
                        {
                            "method": "GET",
                            "param": "X-Content-Type-Options",
                            "uri": "http://ciscobinary.openh264.org/openh264-macosx64-0410d336bb748149a4f560eb6108090f078254b1.zip"
                        }
                    ],
                    "name": "X-Content-Type-Options Header Missing",
                    "otherinfo": "<p>This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.</p><p>At \"High\" threshold this scanner will not alert on client or server error responses.</p>",
                    "pluginid": "10021",
                    "reference": "<p>http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx</p><p>https://www.owasp.org/index.php/List_of_useful_HTTP_headers</p>",
                    "riskcode": "1",
                    "riskdesc": "Low (Medium)",
                    "solution": "<p>Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.</p><p>If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.</p>",
                    "sourceid": "3",
                    "wascid": "15"
                }
            ]
        },
        {
            "@host": "code.jquery.com",
            "@name": "http://code.jquery.com",
            "@port": "80",
            "@ssl": "false",
            "alerts": [
                {
                    "alert": "X-Content-Type-Options Header Missing",
                    "confidence": "2",
                    "count": "1",
                    "cweid": "16",
                    "desc": "<p>The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.</p>",
                    "instances": [
                        {
                            "method": "GET",
                            "param": "X-Content-Type-Options",
                            "uri": "http://code.jquery.com/ui/1.9.1/themes/base/jquery-ui.css"
                        }
                    ],
                    "name": "X-Content-Type-Options Header Missing",
                    "otherinfo": "<p>This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.</p><p>At \"High\" threshold this scanner will not alert on client or server error responses.</p>",
                    "pluginid": "10021",
                    "reference": "<p>http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx</p><p>https://www.owasp.org/index.php/List_of_useful_HTTP_headers</p>",
                    "riskcode": "1",
                    "riskdesc": "Low (Medium)",
                    "solution": "<p>Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.</p><p>If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.</p>",
                    "sourceid": "3",
                    "wascid": "15"
                }
            ]
        },
        {
            "@host": "detectportal.firefox.com",
            "@name": "http://detectportal.firefox.com",
            "@port": "80",
            "@ssl": "false",
            "alerts": [
                {
                    "alert": "X-Content-Type-Options Header Missing",
                    "confidence": "2",
                    "count": "1",
                    "cweid": "16",
                    "desc": "<p>The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.</p>",
                    "instances": [
                        {
                            "method": "GET",
                            "param": "X-Content-Type-Options",
                            "uri": "http://detectportal.firefox.com/success.txt"
                        }
                    ],
                    "name": "X-Content-Type-Options Header Missing",
                    "otherinfo": "<p>This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.</p><p>At \"High\" threshold this scanner will not alert on client or server error responses.</p>",
                    "pluginid": "10021",
                    "reference": "<p>http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx</p><p>https://www.owasp.org/index.php/List_of_useful_HTTP_headers</p>",
                    "riskcode": "1",
                    "riskdesc": "Low (Medium)",
                    "solution": "<p>Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.</p><p>If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.</p>",
                    "sourceid": "3",
                    "wascid": "15"
                }
            ]
        },
        {
            "@host": "mymac.com",
            "@name": "http://mymac.com:8191",
            "@port": "8191",
            "@ssl": "false",
            "alerts": [
                {
                    "alert": "Insecure HTTP Method - MKCOL",
                    "confidence": "2",
                    "count": "32",
                    "cweid": "200",
                    "desc": "<p>This HTTP method is a WEBDAV method: MKCOL. If this server is not offering any WEBDAV services, these methods should not be available.</p>",
                    "instances": [
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MKCOL",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjection/servers?column=id"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MKCOL",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/bypass.js?_=1544107787924"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MKCOL",
                            "uri": "http://mymac.com:8191/WebGoat/service/hint.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MKCOL",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/credentials.js?_=1544108073698"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MKCOL",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessoninfo.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MKCOL",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/bootstrap.min.js?_=1544107787922"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MKCOL",
                            "uri": "http://mymac.com:8191/WebGoat/CrossSiteScripting.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MKCOL",
                            "uri": "http://mymac.com:8191/WebGoat/service/debug/labels.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MKCOL",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessonmenu.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MKCOL",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjectionMitigations.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MKCOL",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MKCOL",
                            "uri": "http://mymac.com:8191/WebGoat/WebGoatIntroduction.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MKCOL",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/assignment12.js?_=1544107787919"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MKCOL",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/8/votes"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MKCOL",
                            "uri": "http://mymac.com:8191/WebGoat/service/labels.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MKCOL",
                            "uri": "http://mymac.com:8191/WebGoat/HttpProxies.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MKCOL",
                            "uri": "http://mymac.com:8191/WebGoat/InsecureLogin.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MKCOL",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/password-reset-simple.js?_=1544107787923"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MKCOL",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessonoverview.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MKCOL",
                            "uri": "http://mymac.com:8191/WebGoat/CrossSiteScripting/stored-xss"
                        }
                    ],
                    "name": "Insecure HTTP Method - MKCOL",
                    "otherinfo": "<p>See the discussion on stackexchange: https://security.stackexchange.com/questions/21413/how-to-exploit-http-methods</p>",
                    "pluginid": "90028",
                    "reference": "<p>http://projects.webappsec.org/Fingerprinting</p><p></p>",
                    "riskcode": "0",
                    "riskdesc": "Informational (Medium)",
                    "solution": "<p></p>",
                    "sourceid": "1",
                    "wascid": "45"
                },
                {
                    "alert": "Cookie No HttpOnly Flag",
                    "confidence": "2",
                    "count": "8",
                    "cweid": "16",
                    "desc": "<p>A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.</p>",
                    "instances": [
                        {
                            "evidence": "Set-Cookie: JSESSIONID",
                            "method": "GET",
                            "param": "JSESSIONID",
                            "uri": "http://mymac.com:8191/WebGoat/attack"
                        },
                        {
                            "evidence": "Set-Cookie: JSESSIONID",
                            "method": "GET",
                            "param": "JSESSIONID",
                            "uri": "http://mymac.com:8191/WebGoat/logout"
                        },
                        {
                            "evidence": "Set-Cookie: access_token",
                            "method": "GET",
                            "param": "access_token",
                            "uri": "http://mymac.com:8191/WebGoat/JWT/votings/login?user=Guest"
                        },
                        {
                            "evidence": "Set-Cookie: JSESSIONID",
                            "method": "GET",
                            "param": "JSESSIONID",
                            "uri": "http://mymac.com:8191/WebGoat/fonts/fontawesome-webfont.woff?v=4.0.3"
                        },
                        {
                            "evidence": "Set-Cookie: JSESSIONID",
                            "method": "GET",
                            "param": "JSESSIONID",
                            "uri": "http://mymac.com:8191/WebGoat/start.mvc"
                        },
                        {
                            "evidence": "Set-Cookie: JSESSIONID",
                            "method": "GET",
                            "param": "JSESSIONID",
                            "uri": "http://mymac.com:8191/WebGoat/"
                        },
                        {
                            "evidence": "Set-Cookie: JSESSIONID",
                            "method": "GET",
                            "param": "JSESSIONID",
                            "uri": "http://mymac.com:8191/WebGoat/login?logout"
                        },
                        {
                            "evidence": "Set-Cookie: JSESSIONID",
                            "method": "POST",
                            "param": "JSESSIONID",
                            "uri": "http://mymac.com:8191/WebGoat/login"
                        }
                    ],
                    "name": "Cookie No HttpOnly Flag",
                    "pluginid": "10010",
                    "reference": "<p>http://www.owasp.org/index.php/HttpOnly</p>",
                    "riskcode": "1",
                    "riskdesc": "Low (Medium)",
                    "solution": "<p>Ensure that the HttpOnly flag is set for all cookies.</p>",
                    "sourceid": "3",
                    "wascid": "13"
                },
                {
                    "alert": "Backup File Disclosure",
                    "confidence": "2",
                    "count": "74",
                    "cweid": "425",
                    "desc": "<p>A backup of the file was disclosed by the web server</p>",
                    "instances": [
                        {
                            "attack": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.old.baseUrl%>",
                            "evidence": "A backup of [http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E] is available at [http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.old.baseUrl%>]",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.old.baseUrl%>"
                        },
                        {
                            "attack": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.2",
                            "evidence": "A backup of [http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E] is available at [http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.2]",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.2"
                        },
                        {
                            "attack": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.backup",
                            "evidence": "A backup of [http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E] is available at [http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.backup]",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.backup"
                        },
                        {
                            "attack": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.bz2.baseUrl%>",
                            "evidence": "A backup of [http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E] is available at [http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.bz2.baseUrl%>]",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.bz2.baseUrl%>"
                        },
                        {
                            "attack": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.old",
                            "evidence": "A backup of [http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E] is available at [http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.old]",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.old"
                        },
                        {
                            "attack": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.gz",
                            "evidence": "A backup of [http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E] is available at [http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.gz]",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.gz"
                        },
                        {
                            "attack": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.~bk",
                            "evidence": "A backup of [http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E] is available at [http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.~bk]",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.~bk"
                        },
                        {
                            "attack": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.0",
                            "evidence": "A backup of [http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E] is available at [http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.0]",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.0"
                        },
                        {
                            "attack": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>~",
                            "evidence": "A backup of [http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E] is available at [http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>~]",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>~"
                        },
                        {
                            "attack": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.bac",
                            "evidence": "A backup of [http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E] is available at [http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.bac]",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.bac"
                        },
                        {
                            "attack": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.gz",
                            "evidence": "A backup of [http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E] is available at [http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.gz]",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.gz"
                        },
                        {
                            "attack": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.bak.baseUrl%>",
                            "evidence": "A backup of [http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E] is available at [http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.bak.baseUrl%>]",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.bak.baseUrl%>"
                        },
                        {
                            "attack": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.bac",
                            "evidence": "A backup of [http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E] is available at [http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.bac]",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.bac"
                        },
                        {
                            "attack": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.orig.baseUrl%>",
                            "evidence": "A backup of [http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E] is available at [http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.orig.baseUrl%>]",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.orig.baseUrl%>"
                        },
                        {
                            "attack": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.backup.baseUrl%>",
                            "evidence": "A backup of [http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E] is available at [http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.backup.baseUrl%>]",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.backup.baseUrl%>"
                        },
                        {
                            "attack": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.exe",
                            "evidence": "A backup of [http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E] is available at [http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.exe]",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.exe"
                        },
                        {
                            "attack": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.1",
                            "evidence": "A backup of [http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E] is available at [http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.1]",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.1"
                        },
                        {
                            "attack": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.zip",
                            "evidence": "A backup of [http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E] is available at [http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.zip]",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.zip"
                        },
                        {
                            "attack": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.swp",
                            "evidence": "A backup of [http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E] is available at [http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.swp]",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>.swp"
                        },
                        {
                            "attack": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.1",
                            "evidence": "A backup of [http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E] is available at [http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.1]",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.1"
                        }
                    ],
                    "name": "Backup File Disclosure",
                    "otherinfo": "<p>http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%></p>",
                    "pluginid": "10095",
                    "reference": "<p>http://projects.webappsec.org/Predictable-Resource-Location</p><p>http://cwe.mitre.org/data/definitions/425.html</p>",
                    "riskcode": "2",
                    "riskdesc": "Medium (Medium)",
                    "solution": "<p>Do not edit files in-situ on the web server, and ensure that un-necessary files (including hidden files) are removed from the web server.</p>",
                    "sourceid": "1",
                    "wascid": "34"
                },
                {
                    "alert": "Insecure HTTP Method - COPY",
                    "confidence": "2",
                    "count": "32",
                    "cweid": "200",
                    "desc": "<p>This HTTP method is a WEBDAV method: COPY. If this server is not offering any WEBDAV services, these methods should not be available.</p>",
                    "instances": [
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "COPY",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/password-reset-simple.js?_=1544107787923"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "COPY",
                            "uri": "http://mymac.com:8191/WebGoat/HttpProxies.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "COPY",
                            "uri": "http://mymac.com:8191/WebGoat/CrossSiteScripting/stored-xss"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "COPY",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "COPY",
                            "uri": "http://mymac.com:8191/WebGoat/service"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "COPY",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/8/votes"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "COPY",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjectionAdvanced.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "COPY",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessonmenu.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "COPY",
                            "uri": "http://mymac.com:8191/WebGoat/HttpBasics.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "COPY",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjectionMitigations.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "COPY",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjection"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "COPY",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessoninfo.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "COPY",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/bootstrap.min.js?_=1544107787922"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "COPY",
                            "uri": "http://mymac.com:8191/WebGoat/AuthBypass.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "COPY",
                            "uri": "http://mymac.com:8191/WebGoat/CrossSiteScripting.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "COPY",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/assignment12.js?_=1544107787919"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "COPY",
                            "uri": "http://mymac.com:8191/WebGoat/WebGoatIntroduction.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "COPY",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/credentials.js?_=1544108073698"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "COPY",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessonoverview.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "COPY",
                            "uri": "http://mymac.com:8191/WebGoat/InsecureLogin.lesson.lesson"
                        }
                    ],
                    "name": "Insecure HTTP Method - COPY",
                    "otherinfo": "<p>See the discussion on stackexchange: https://security.stackexchange.com/questions/21413/how-to-exploit-http-methods</p>",
                    "pluginid": "90028",
                    "reference": "<p>http://projects.webappsec.org/Fingerprinting</p><p></p>",
                    "riskcode": "0",
                    "riskdesc": "Informational (Medium)",
                    "solution": "<p></p>",
                    "sourceid": "1",
                    "wascid": "45"
                },
                {
                    "alert": "Insecure HTTP Method - MOVE",
                    "confidence": "2",
                    "count": "32",
                    "cweid": "200",
                    "desc": "<p>This HTTP method is a WEBDAV method: MOVE. If this server is not offering any WEBDAV services, these methods should not be available.</p>",
                    "instances": [
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MOVE",
                            "uri": "http://mymac.com:8191/WebGoat/CrossSiteScripting/stored-xss"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MOVE",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/challenge.js?_=1544107787918"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MOVE",
                            "uri": "http://mymac.com:8191/WebGoat/service"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MOVE",
                            "uri": "http://mymac.com:8191/WebGoat/HttpBasics.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MOVE",
                            "uri": "http://mymac.com:8191/WebGoat/HttpProxies.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MOVE",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/password-reset-simple.js?_=1544107787923"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MOVE",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessonmenu.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MOVE",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/8"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MOVE",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjectionAdvanced.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MOVE",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MOVE",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessonprogress.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MOVE",
                            "uri": "http://mymac.com:8191/WebGoat/PasswordReset.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MOVE",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/stored-xss.js?_=1544108073699"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MOVE",
                            "uri": "http://mymac.com:8191/WebGoat/service/debug/labels.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MOVE",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjection/servers?column=id"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MOVE",
                            "uri": "http://mymac.com:8191/WebGoat/service/labels.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MOVE",
                            "uri": "http://mymac.com:8191/WebGoat/CrossSiteScripting"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MOVE",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessoninfo.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MOVE",
                            "uri": "http://mymac.com:8191/WebGoat/service/debug"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "MOVE",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/bypass.js?_=1544107787924"
                        }
                    ],
                    "name": "Insecure HTTP Method - MOVE",
                    "otherinfo": "<p>See the discussion on stackexchange: https://security.stackexchange.com/questions/21413/how-to-exploit-http-methods</p>",
                    "pluginid": "90028",
                    "reference": "<p>http://projects.webappsec.org/Fingerprinting</p><p></p>",
                    "riskcode": "0",
                    "riskdesc": "Informational (Medium)",
                    "solution": "<p></p>",
                    "sourceid": "1",
                    "wascid": "45"
                },
                {
                    "alert": "Insecure HTTP Method - PUT",
                    "confidence": "2",
                    "count": "32",
                    "cweid": "200",
                    "desc": "<p>This method was originally intended for file managemant operations. It is now most commonly used in REST services, PUT is most-often utilized for **update** capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource..</p>",
                    "instances": [
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PUT",
                            "uri": "http://mymac.com:8191/WebGoat/service/ixvsrz0hz5"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PUT",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/challenge.js?_=1544107787918/00dfqjxpr0"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PUT",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessonprogress.mvc/ov8o4i4cxb"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PUT",
                            "uri": "http://mymac.com:8191/WebGoat/CrossSiteScripting/stored-xss/l75ohjdbcz"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PUT",
                            "uri": "http://mymac.com:8191/WebGoat/CrossSiteScripting/66hxlzn8iv"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PUT",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjectionMitigations.lesson.lesson/o0zqg3osop"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PUT",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessonmenu.mvc/yxxfu40mzc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PUT",
                            "uri": "http://mymac.com:8191/WebGoat/service/labels.mvc/kqmx8plyqp"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PUT",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/bootstrap.min.js?_=1544107787922/ry1v48bqo2"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PUT",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/stored-xss.js?_=1544108073699/nup8fuk9jv"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PUT",
                            "uri": "http://mymac.com:8191/WebGoat/service/debug/wavpiy56r0"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PUT",
                            "uri": "http://mymac.com:8191/WebGoat/service/hint.mvc/2c7ugyjrbx"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PUT",
                            "uri": "http://mymac.com:8191/WebGoat/WebGoatIntroduction.lesson.lesson/0ovfht8qeu"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PUT",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessonoverview.mvc/o7eg68rtmj"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PUT",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjectionAdvanced.lesson.lesson/ecpghb5i3h"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PUT",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/credentials.js?_=1544108073698/0qcvijm5f6"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PUT",
                            "uri": "http://mymac.com:8191/WebGoat/AuthBypass.lesson.lesson/qo4qznscod"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PUT",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/8/votes/hyp7hbjya6"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PUT",
                            "uri": "http://mymac.com:8191/WebGoat/InsecureLogin.lesson.lesson/og02v787sa"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PUT",
                            "uri": "http://mymac.com:8191/WebGoat/HttpProxies.lesson.lesson/3ylc0lqab1"
                        }
                    ],
                    "name": "Insecure HTTP Method - PUT",
                    "otherinfo": "<p>See the discussion on stackexchange: https://security.stackexchange.com/questions/21413/how-to-exploit-http-methods, for understanding REST operations see http://www.restapitutorial.com/lessons/httpmethods.html</p>",
                    "pluginid": "90028",
                    "reference": "<p>http://projects.webappsec.org/Fingerprinting</p><p></p>",
                    "riskcode": "2",
                    "riskdesc": "Medium (Medium)",
                    "solution": "<p></p>",
                    "sourceid": "1",
                    "wascid": "45"
                },
                {
                    "alert": "Absence of Anti-CSRF Tokens",
                    "confidence": "2",
                    "count": "74",
                    "cweid": "352",
                    "desc": "<p>No Anti-CSRF tokens were found in a HTML submission form.</p><p>A cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.</p><p></p><p>CSRF attacks are effective in a number of situations, including:</p><p>    * The victim has an active session on the target site.</p><p>    * The victim is authenticated via HTTP auth on the target site.</p><p>    * The victim is on the same local network as the target site.</p><p></p><p>CSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.</p>",
                    "instances": [
                        {
                            "evidence": "<form class=\"attack-form\" accept-charset=\"UNKNOWN\" name=\"intercept-request\" method=\"POST\" action=\"/WebGoat/HttpProxies/intercept-request\" enctype=\"application/json;charset=UTF-8\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/HttpProxies.lesson.lesson"
                        },
                        {
                            "evidence": "<form class=\"attack-form\" accept-charset=\"UNKNOWN\" name=\"task\" method=\"POST\" action=\"#attack/307/100\" enctype=\"application/json;charset=UTF-8\">",
                            "method": "POST",
                            "uri": "http://mymac.com:8191/WebGoat/InsecureLogin.lesson.lesson"
                        },
                        {
                            "evidence": "<form class=\"form-horizontal\" action=\"/WebGoat/register.mvc\" method=\"POST\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/registration"
                        },
                        {
                            "evidence": "<form class=\"attack-form\" accept-charset=\"UNKNOWN\" id=\"change-password-form\" method=\"POST\" name=\"form\" successCallback=\"onBypassResponse\" action=\"/WebGoat/auth-bypass/verify-account\" enctype=\"application/json;charset=UTF-8\" style=\"display:none\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/AuthBypass.lesson.lesson"
                        },
                        {
                            "evidence": "<form class=\"attack-form\" accept-charset=\"UNKNOWN\" method=\"POST\" name=\"form\" action=\"/WebGoat/WebWolf/mail/\" enctype=\"application/json;charset=UTF-8\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/WebWolfIntroduction.lesson.lesson"
                        },
                        {
                            "evidence": "<form class=\"attack-form\" accept-charset=\"UNKNOWN\" method=\"POST\" name=\"form\" action=\"/WebGoat/PasswordReset/reset/create-password-reset-link\" enctype=\"application/json;charset=UTF-8\" role=\"form\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/PasswordReset.lesson.lesson"
                        },
                        {
                            "evidence": "<form class=\"attack-form\" accept-charset=\"UNKNOWN\" name=\"task\" method=\"POST\" action=\"/WebGoat/InsecureLogin/task\" enctype=\"application/json;charset=UTF-8\">",
                            "method": "POST",
                            "uri": "http://mymac.com:8191/WebGoat/InsecureLogin.lesson.lesson"
                        },
                        {
                            "evidence": "<form id=\"register-form\" class=\"attack-form\" accept-charset=\"UNKNOWN\" method=\"PUT\" name=\"form\" action=\"SqlInjection/challenge\" enctype=\"application/json;charset=UTF-8\" style=\"display: none;\" role=\"form\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjectionAdvanced.lesson.lesson"
                        },
                        {
                            "evidence": "<form class=\"attack-form\" method=\"POST\" name=\"diff-form\" action=\"IDOR/diff-attributes\" enctype=\"application/json;charset=UTF-8\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/IDOR.lesson.lesson"
                        },
                        {
                            "evidence": "<form class=\"attack-form\" accept-charset=\"UNKNOWN\" method=\"POST\" name=\"form\" action=\"/WebGoat/challenge/1\" style=\"width: 200px;\" enctype=\"application/json;charset=UTF-8\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/Challenge1.lesson.lesson"
                        },
                        {
                            "evidence": "<form class=\"attack-form\" accept-charset=\"UNKNOWN\" name=\"frontendValidation\" id=\"frontendValidation\" method=\"POST\" action=\"/WebGoat/BypassRestrictions/frontendValidation/\" enctype=\"application/json;charset=UTF-8\" onsubmit=\"return validate()\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/BypassRestrictions.lesson.lesson"
                        },
                        {
                            "evidence": "<form class=\"attack-form\" accept-charset=\"UNKNOWN\" method=\"POST\" name=\"form\" action=\"/WebGoat/SqlInjection/attack5a\" enctype=\"application/json;charset=UTF-8\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjection.lesson.lesson"
                        },
                        {
                            "evidence": "<form method=\"POST\" style=\"width: 200px;\" action=\"/WebGoat/login\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/login?logout"
                        },
                        {
                            "evidence": "<form class=\"attack-form\" accept-charset=\"UNKNOWN\" method=\"POST\" action=\"/WebGoat/PasswordReset/questions\" enctype=\"application/json;charset=UTF-8\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/PasswordReset.lesson.lesson"
                        },
                        {
                            "evidence": "<form class=\"attack-form\" accept-charset=\"UNKNOWN\" method=\"POST\" name=\"form\" action=\"/WebGoat/HttpBasics/attack1\" enctype=\"application/json;charset=UTF-8\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/HttpBasics.lesson.lesson"
                        },
                        {
                            "evidence": "<form class=\"attack-form\" method=\"POST\" name=\"form\" action=\"/WebGoat/challenge/flag\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/Challenge6.lesson.lesson"
                        },
                        {
                            "evidence": "<form id=\"register-form\" class=\"attack-form\" accept-charset=\"UNKNOWN\" method=\"PUT\" name=\"form\" action=\"/WebGoat/challenge/6\" enctype=\"application/json;charset=UTF-8\" style=\"display: none;\" role=\"form\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/Challenge6.lesson.lesson"
                        },
                        {
                            "evidence": "<form id=\"login-form\" class=\"attack-form\" accept-charset=\"UNKNOWN\" method=\"POST\" name=\"form\" action=\"/WebGoat/challenge/5\" enctype=\"application/json;charset=UTF-8\" role=\"form\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/Challenge5.lesson.lesson"
                        },
                        {
                            "evidence": "<form class=\"attack-form\" accept-charset=\"UNKNOWN\" name=\"fieldRestrictions\" method=\"POST\" action=\"/WebGoat/BypassRestrictions/FieldRestrictions\" enctype=\"application/json;charset=UTF-8\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/BypassRestrictions.lesson.lesson"
                        },
                        {
                            "evidence": "<form class=\"attack-form\" method=\"POST\" name=\"form\" action=\"/WebGoat/challenge/flag\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/Challenge7.lesson.lesson"
                        }
                    ],
                    "name": "Absence of Anti-CSRF Tokens",
                    "otherinfo": "<p>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf] was found in the following HTML form: [Form 1: \"changeMe\" ].</p>",
                    "pluginid": "10202",
                    "reference": "<p>http://projects.webappsec.org/Cross-Site-Request-Forgery</p><p>http://cwe.mitre.org/data/definitions/352.html</p>",
                    "riskcode": "1",
                    "riskdesc": "Low (Medium)",
                    "solution": "<p>Phase: Architecture and Design</p><p>Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.</p><p>For example, use anti-CSRF packages such as the OWASP CSRFGuard.</p><p></p><p>Phase: Implementation</p><p>Ensure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.</p><p></p><p>Phase: Architecture and Design</p><p>Generate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).</p><p>Note that this can be bypassed using XSS.</p><p></p><p>Identify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.</p><p>Note that this can be bypassed using XSS.</p><p></p><p>Use the ESAPI Session Management control.</p><p>This control includes a component for CSRF.</p><p></p><p>Do not use the GET method for any request that triggers a state change.</p><p></p><p>Phase: Implementation</p><p>Check the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.</p>",
                    "sourceid": "3",
                    "wascid": "9"
                },
                {
                    "alert": "Information Disclosure - Suspicious Comments",
                    "confidence": "2",
                    "count": "43",
                    "cweid": "200",
                    "desc": "<p>The response appears to contain suspicious comments which may help an attacker.</p>",
                    "instances": [
                        {
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/HttpBasics.lesson.lesson"
                        },
                        {
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/credentials.js?_=1544108073698"
                        },
                        {
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/jwt-voting.js?_=1544107787947"
                        },
                        {
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/libs/text.js"
                        },
                        {
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/start.mvc"
                        },
                        {
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/credentials.js"
                        },
                        {
                            "method": "POST",
                            "uri": "http://mymac.com:8191/WebGoat/InsecureLogin.lesson.lesson"
                        },
                        {
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/stored-xss.js?_=1544107787952"
                        },
                        {
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/libs/backbone-min.js"
                        },
                        {
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/assignment12.js?_=1544107787919"
                        },
                        {
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/CrossSiteScripting.lesson.lesson"
                        },
                        {
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/ClientSideFiltering.lesson.lesson"
                        },
                        {
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/AuthBypass.lesson.lesson"
                        },
                        {
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/credentials.js?_=1544106249403"
                        },
                        {
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/libs/underscore-min.js"
                        },
                        {
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/view/UserAndInfoView.js"
                        },
                        {
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/libs/jquery.form.js"
                        },
                        {
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/view/LessonContentView.js"
                        },
                        {
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/modernizr-2.6.2.min.js"
                        },
                        {
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/VulnerableComponents.lesson.lesson"
                        }
                    ],
                    "name": "Information Disclosure - Suspicious Comments",
                    "otherinfo": "<p><!-- do not remove the two following div's, this is where your feedback/output will land --></p><p><!-- do not remove the two following div's, this is where your feedback/output will land --></p><p></p>",
                    "pluginid": "10027",
                    "reference": "<p></p>",
                    "riskcode": "0",
                    "riskdesc": "Informational (Medium)",
                    "solution": "<p>Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.</p>",
                    "sourceid": "3",
                    "wascid": "13"
                },
                {
                    "alert": "Insecure HTTP Method - PROPPATCH",
                    "confidence": "2",
                    "count": "32",
                    "cweid": "200",
                    "desc": "<p>This HTTP method is a WEBDAV method: PROPPATCH. If this server is not offering any WEBDAV services, these methods should not be available.</p>",
                    "instances": [
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPPATCH",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/bootstrap.min.js?_=1544107787922"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPPATCH",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessonprogress.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPPATCH",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjection"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPPATCH",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjectionMitigations.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPPATCH",
                            "uri": "http://mymac.com:8191/WebGoat/HttpBasics.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPPATCH",
                            "uri": "http://mymac.com:8191/WebGoat/service/debug/labels.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPPATCH",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/challenge.js?_=1544107787918"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPPATCH",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/bypass.js?_=1544107787924"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPPATCH",
                            "uri": "http://mymac.com:8191/WebGoat/service"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPPATCH",
                            "uri": "http://mymac.com:8191/WebGoat/CrossSiteScripting"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPPATCH",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessoninfo.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPPATCH",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjection/servers?column=id"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPPATCH",
                            "uri": "http://mymac.com:8191/WebGoat/CrossSiteScripting/stored-xss"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPPATCH",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/stored-xss.js?_=1544108073699"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPPATCH",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/8"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPPATCH",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjectionAdvanced.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPPATCH",
                            "uri": "http://mymac.com:8191/WebGoat/service/debug"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPPATCH",
                            "uri": "http://mymac.com:8191/WebGoat/PasswordReset.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPPATCH",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/assignment12.js?_=1544107787919"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPPATCH",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/8/votes"
                        }
                    ],
                    "name": "Insecure HTTP Method - PROPPATCH",
                    "otherinfo": "<p>See the discussion on stackexchange: https://security.stackexchange.com/questions/21413/how-to-exploit-http-methods</p>",
                    "pluginid": "90028",
                    "reference": "<p>http://projects.webappsec.org/Fingerprinting</p><p></p>",
                    "riskcode": "0",
                    "riskdesc": "Informational (Medium)",
                    "solution": "<p></p>",
                    "sourceid": "1",
                    "wascid": "45"
                },
                {
                    "alert": "Insecure HTTP Method - PROPFIND",
                    "confidence": "2",
                    "count": "32",
                    "cweid": "200",
                    "desc": "<p>This HTTP method is a WEBDAV method: PROPFIND. If this server is not offering any WEBDAV services, these methods should not be available.</p>",
                    "instances": [
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPFIND",
                            "uri": "http://mymac.com:8191/WebGoat/PasswordReset.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPFIND",
                            "uri": "http://mymac.com:8191/WebGoat/CrossSiteScripting.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPFIND",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessoninfo.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPFIND",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjectionAdvanced.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPFIND",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPFIND",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/8/votes"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPFIND",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessonoverview.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPFIND",
                            "uri": "http://mymac.com:8191/WebGoat/service/labels.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPFIND",
                            "uri": "http://mymac.com:8191/WebGoat/HttpProxies.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPFIND",
                            "uri": "http://mymac.com:8191/WebGoat/InsecureLogin.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPFIND",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/credentials.js?_=1544108073698"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPFIND",
                            "uri": "http://mymac.com:8191/WebGoat/AuthBypass.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPFIND",
                            "uri": "http://mymac.com:8191/WebGoat/WebGoatIntroduction.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPFIND",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/assignment12.js?_=1544107787919"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPFIND",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjection"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPFIND",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/8"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPFIND",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/stored-xss.js?_=1544108073699"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPFIND",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessonprogress.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPFIND",
                            "uri": "http://mymac.com:8191/WebGoat/service/debug/labels.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PROPFIND",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessonmenu.mvc"
                        }
                    ],
                    "name": "Insecure HTTP Method - PROPFIND",
                    "otherinfo": "<p>See the discussion on stackexchange: https://security.stackexchange.com/questions/21413/how-to-exploit-http-methods</p>",
                    "pluginid": "90028",
                    "reference": "<p>http://projects.webappsec.org/Fingerprinting</p><p></p>",
                    "riskcode": "0",
                    "riskdesc": "Informational (Medium)",
                    "solution": "<p></p>",
                    "sourceid": "1",
                    "wascid": "45"
                },
                {
                    "alert": "Information Disclosure - Debug Error Messages",
                    "confidence": "2",
                    "count": "6",
                    "cweid": "200",
                    "desc": "<p>The response appeared to contain common error messages returned by platforms such as ASP.NET, and Web-servers such as IIS and Apache. You can configure the list of common debug messages.</p>",
                    "instances": [
                        {
                            "evidence": "Internal Server Error",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E/%3C%25=index%25%3E"
                        },
                        {
                            "evidence": "Internal Server Error",
                            "method": "POST",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/7"
                        },
                        {
                            "evidence": "Internal Server Error",
                            "method": "POST",
                            "uri": "http://mymac.com:8191/WebGoat/IDOR/profile/alt-path"
                        },
                        {
                            "evidence": "Internal Server Error",
                            "method": "POST",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/flag"
                        },
                        {
                            "evidence": "Internal Server Error",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/IDOR/profile/%7BuserId%7D?View+Profile=View+Profile"
                        },
                        {
                            "evidence": "Internal Server Error",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E"
                        }
                    ],
                    "name": "Information Disclosure - Debug Error Messages",
                    "pluginid": "10023",
                    "reference": "<p></p>",
                    "riskcode": "1",
                    "riskdesc": "Low (Medium)",
                    "solution": "<p>Disable debugging messages before pushing to production.</p>",
                    "sourceid": "3",
                    "wascid": "13"
                },                {
                    "alert": "Information Disclosure - Debug Error Messages",
                    "confidence": "2",
                    "count": "6",
                    "cweid": "200",
                    "desc": "<p>The response appeared to contain common error messages returned by platforms such as ASP.NET, and Web-servers such as IIS and Apache. You can configure the list of common debug messages.</p>",
                    "instances": [
                        {
                            "evidence": "Internal Server Error",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E/%3C%25=index%25%3E"
                        },
                        {
                            "evidence": "Internal Server Error",
                            "method": "POST",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/7"
                        },
                        {
                            "evidence": "Internal Server Error",
                            "method": "POST",
                            "uri": "http://mymac.com:8191/WebGoat/IDOR/profile/alt-path"
                        },
                        {
                            "evidence": "Internal Server Error",
                            "method": "POST",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/flag"
                        },
                        {
                            "evidence": "Internal Server Error",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/IDOR/profile/%7BuserId%7D?View+Profile=View+Profile"
                        },
                        {
                            "evidence": "Internal Server Error",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E"
                        }
                    ],
                    "name": "Information Disclosure - Debug Error Messages",
                    "pluginid": "10023",
                    "reference": "<p></p>",
                    "riskcode": "1",
                    "riskdesc": "Low (Medium)",
                    "solution": "<p>Disable debugging messages before pushing to production.</p>",
                    "sourceid": "3",
                    "wascid": "13"
                },                {
                    "alert": "Information Disclosure - Debug Error Messages",
                    "confidence": "2",
                    "count": "6",
                    "cweid": "200",
                    "desc": "<p>The response appeared to contain common error messages returned by platforms such as ASP.NET, and Web-servers such as IIS and Apache. You can configure the list of common debug messages.</p>",
                    "instances": [
                        {
                            "evidence": "Internal Server Error",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E/%3C%25=index%25%3E"
                        },
                        {
                            "evidence": "Internal Server Error",
                            "method": "POST",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/7"
                        },
                        {
                            "evidence": "Internal Server Error",
                            "method": "POST",
                            "uri": "http://mymac.com:8191/WebGoat/IDOR/profile/alt-path"
                        },
                        {
                            "evidence": "Internal Server Error",
                            "method": "POST",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/flag"
                        },
                        {
                            "evidence": "Internal Server Error",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/IDOR/profile/%7BuserId%7D?View+Profile=View+Profile"
                        },
                        {
                            "evidence": "Internal Server Error",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E"
                        }
                    ],
                    "name": "Information Disclosure - Debug Error Messages",
                    "pluginid": "10023",
                    "reference": "<p></p>",
                    "riskcode": "1",
                    "riskdesc": "Low (Medium)",
                    "solution": "<p>Disable debugging messages before pushing to production.</p>",
                    "sourceid": "3",
                    "wascid": "13"
                },
                {
                    "alert": "Insecure HTTP Method - PATCH",
                    "confidence": "2",
                    "count": "32",
                    "cweid": "200",
                    "desc": "<p>This method is now most commonly used in REST services, PATCH is used for **modify** capabilities. The PATCH request only needs to contain the changes to the resource, not the complete resource.</p>",
                    "instances": [
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PATCH",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessonoverview.mvc/eh79fr0hqg"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PATCH",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessonmenu.mvc/wreq5y0a7l"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PATCH",
                            "uri": "http://mymac.com:8191/WebGoat/CrossSiteScripting.lesson.lesson/zm4mz99dlc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PATCH",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/bootstrap.min.js?_=1544107787922/lh51ktufa2"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PATCH",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/8/votes/2t85ricln1"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PATCH",
                            "uri": "http://mymac.com:8191/WebGoat/HttpBasics.lesson.lesson/p0kmik78y1"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PATCH",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjection/servers?column=id/czpve71c6f"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PATCH",
                            "uri": "http://mymac.com:8191/WebGoat/service/f9r0o7rim6"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PATCH",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjection/64anwrsu4c"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PATCH",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/credentials.js?_=1544108073698/7oq2rqa5sa"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PATCH",
                            "uri": "http://mymac.com:8191/WebGoat/WebGoatIntroduction.lesson.lesson/6oiufjzooj"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PATCH",
                            "uri": "http://mymac.com:8191/WebGoat/service/labels.mvc/nn288rrdbp"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PATCH",
                            "uri": "http://mymac.com:8191/WebGoat/PasswordReset.lesson.lesson/fja4tms7h6"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PATCH",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/stored-xss.js?_=1544108073699/25gvf9s6s7"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PATCH",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessonprogress.mvc/omuhh6arma"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PATCH",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/c3e684sost"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PATCH",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/bypass.js?_=1544107787924/v0fu6lixpx"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PATCH",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjectionAdvanced.lesson.lesson/n8prgootk5"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PATCH",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessoninfo.mvc/ruq25qpun7"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "PATCH",
                            "uri": "http://mymac.com:8191/WebGoat/InsecureLogin.lesson.lesson/0oqh22nenm"
                        }
                    ],
                    "name": "Insecure HTTP Method - PATCH",
                    "otherinfo": "<p>See the discussion on stackexchange: https://security.stackexchange.com/questions/21413/how-to-exploit-http-methods, for understanding REST operations see http://www.restapitutorial.com/lessons/httpmethods.html</p>",
                    "pluginid": "90028",
                    "reference": "<p>http://projects.webappsec.org/Fingerprinting</p><p></p>",
                    "riskcode": "2",
                    "riskdesc": "Medium (Medium)",
                    "solution": "<p></p>",
                    "sourceid": "1",
                    "wascid": "45"
                },
                {
                    "alert": "Insecure HTTP Method - UNLOCK",
                    "confidence": "2",
                    "count": "32",
                    "cweid": "200",
                    "desc": "<p>This HTTP method is a WEBDAV method: UNLOCK. If this server is not offering any WEBDAV services, these methods should not be available.</p>",
                    "instances": [
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "UNLOCK",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessonprogress.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "UNLOCK",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/bootstrap.min.js?_=1544107787922"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "UNLOCK",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/8"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "UNLOCK",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessonmenu.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "UNLOCK",
                            "uri": "http://mymac.com:8191/WebGoat/HttpBasics.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "UNLOCK",
                            "uri": "http://mymac.com:8191/WebGoat/service/debug/labels.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "UNLOCK",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjection"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "UNLOCK",
                            "uri": "http://mymac.com:8191/WebGoat/service/hint.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "UNLOCK",
                            "uri": "http://mymac.com:8191/WebGoat/CrossSiteScripting/stored-xss"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "UNLOCK",
                            "uri": "http://mymac.com:8191/WebGoat/service"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "UNLOCK",
                            "uri": "http://mymac.com:8191/WebGoat/service/labels.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "UNLOCK",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/credentials.js?_=1544108073698"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "UNLOCK",
                            "uri": "http://mymac.com:8191/WebGoat/CrossSiteScripting.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "UNLOCK",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessonoverview.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "UNLOCK",
                            "uri": "http://mymac.com:8191/WebGoat/HttpProxies.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "UNLOCK",
                            "uri": "http://mymac.com:8191/WebGoat/InsecureLogin.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "UNLOCK",
                            "uri": "http://mymac.com:8191/WebGoat/WebGoatIntroduction.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "UNLOCK",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjectionMitigations.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "UNLOCK",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/assignment12.js?_=1544107787919"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "UNLOCK",
                            "uri": "http://mymac.com:8191/WebGoat/AuthBypass.lesson.lesson"
                        }
                    ],
                    "name": "Insecure HTTP Method - UNLOCK",
                    "otherinfo": "<p>See the discussion on stackexchange: https://security.stackexchange.com/questions/21413/how-to-exploit-http-methods</p>",
                    "pluginid": "90028",
                    "reference": "<p>http://projects.webappsec.org/Fingerprinting</p><p></p>",
                    "riskcode": "0",
                    "riskdesc": "Informational (Medium)",
                    "solution": "<p></p>",
                    "sourceid": "1",
                    "wascid": "45"
                },
                {
                    "alert": "Information Disclosure - Sensitive Informations in URL",
                    "confidence": "2",
                    "count": "5",
                    "cweid": "200",
                    "desc": "<p>The request appeared to contain sensitive information leaked in the URL. This can violate PCI and most organizational compliance policies. You can configure the list of strings for this check to add or remove values specific to your environment.</p>",
                    "instances": [
                        {
                            "evidence": "ZAP",
                            "method": "GET",
                            "param": "username_reg",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/6?confirm_password_reg=ZAP&email_reg=foo-bar%40example.com&password_reg=ZAP&register-submit=Register+Now&username_reg=ZAP"
                        },
                        {
                            "evidence": "ZAP",
                            "method": "GET",
                            "param": "confirm_password_reg",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/6?confirm_password_reg=ZAP&email_reg=foo-bar%40example.com&password_reg=ZAP&register-submit=Register+Now&username_reg=ZAP"
                        },
                        {
                            "evidence": "foo-bar@example.com",
                            "method": "GET",
                            "param": "email_reg",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/6?confirm_password_reg=ZAP&email_reg=foo-bar%40example.com&password_reg=ZAP&register-submit=Register+Now&username_reg=ZAP"
                        },
                        {
                            "evidence": "Guest",
                            "method": "GET",
                            "param": "user",
                            "uri": "http://mymac.com:8191/WebGoat/JWT/votings/login?user=Guest"
                        },
                        {
                            "evidence": "ZAP",
                            "method": "GET",
                            "param": "password_reg",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/6?confirm_password_reg=ZAP&email_reg=foo-bar%40example.com&password_reg=ZAP&register-submit=Register+Now&username_reg=ZAP"
                        }
                    ],
                    "name": "Information Disclosure - Sensitive Informations in URL",
                    "otherinfo": "<p>The URL contains potentially sensitive information.</p>",
                    "pluginid": "10024",
                    "reference": "<p></p>",
                    "riskcode": "0",
                    "riskdesc": "Informational (Medium)",
                    "solution": "<p>Do not pass sensitive information in URIs.</p>",
                    "sourceid": "3",
                    "wascid": "13"
                },
                {
                    "alert": "Insecure HTTP Method - LOCK",
                    "confidence": "2",
                    "count": "31",
                    "cweid": "200",
                    "desc": "<p>This HTTP method is a WEBDAV method: LOCK. If this server is not offering any WEBDAV services, these methods should not be available.</p>",
                    "instances": [
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "LOCK",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjectionMitigations.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "LOCK",
                            "uri": "http://mymac.com:8191/WebGoat/service/hint.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "LOCK",
                            "uri": "http://mymac.com:8191/WebGoat/InsecureLogin.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "LOCK",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessonmenu.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "LOCK",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessonprogress.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "LOCK",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/8"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "LOCK",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/stored-xss.js?_=1544108073699"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "LOCK",
                            "uri": "http://mymac.com:8191/WebGoat/service/labels.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "LOCK",
                            "uri": "http://mymac.com:8191/WebGoat/CrossSiteScripting/stored-xss"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "LOCK",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessoninfo.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "LOCK",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/credentials.js?_=1544108073698"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "LOCK",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessonoverview.mvc"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "LOCK",
                            "uri": "http://mymac.com:8191/WebGoat/service"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "LOCK",
                            "uri": "http://mymac.com:8191/WebGoat/WebGoatIntroduction.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "LOCK",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjection"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "LOCK",
                            "uri": "http://mymac.com:8191/WebGoat/CrossSiteScripting.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "LOCK",
                            "uri": "http://mymac.com:8191/WebGoat/HttpBasics.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "LOCK",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js/bootstrap.min.js?_=1544107787922"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "LOCK",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjectionAdvanced.lesson.lesson"
                        },
                        {
                            "evidence": "response code 401 for potentially insecure HTTP METHOD",
                            "method": "LOCK",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/8/votes"
                        }
                    ],
                    "name": "Insecure HTTP Method - LOCK",
                    "otherinfo": "<p>See the discussion on stackexchange: https://security.stackexchange.com/questions/21413/how-to-exploit-http-methods</p>",
                    "pluginid": "90028",
                    "reference": "<p>http://projects.webappsec.org/Fingerprinting</p><p></p>",
                    "riskcode": "0",
                    "riskdesc": "Informational (Medium)",
                    "solution": "<p></p>",
                    "sourceid": "1",
                    "wascid": "45"
                },
                {
                    "alert": "Application Error Disclosure",
                    "confidence": "2",
                    "count": "6",
                    "cweid": "200",
                    "desc": "<p>This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.</p>",
                    "instances": [
                        {
                            "evidence": "HTTP/1.1 500",
                            "method": "POST",
                            "uri": "http://mymac.com:8191/WebGoat/IDOR/profile/alt-path"
                        },
                        {
                            "evidence": "HTTP/1.1 500",
                            "method": "POST",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/7"
                        },
                        {
                            "evidence": "HTTP/1.1 500",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E/%3C%25=index%25%3E"
                        },
                        {
                            "evidence": "HTTP/1.1 500",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/IDOR/profile/%7BuserId%7D?View+Profile=View+Profile"
                        },
                        {
                            "evidence": "HTTP/1.1 500",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E"
                        },
                        {
                            "evidence": "HTTP/1.1 500",
                            "method": "POST",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/flag"
                        }
                    ],
                    "name": "Application Error Disclosure",
                    "pluginid": "90022",
                    "reference": "<p></p>",
                    "riskcode": "2",
                    "riskdesc": "Medium (Medium)",
                    "solution": "<p>Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.</p>",
                    "sourceid": "3",
                    "wascid": "13"
                },
                {
                    "alert": "Source Code Disclosure - SVN",
                    "confidence": "1",
                    "count": "2",
                    "cweid": "541",
                    "desc": "<p>The source code for the current page was disclosed by the web server</p>",
                    "instances": [
                        {
                            "attack": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>/.svn/text-base/<%=index%>.svn-base",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>/<%=index%>"
                        },
                        {
                            "attack": "http://mymac.com:8191/WebGoat/js/goatApp/templates/.svn/text-base/<%=overview.baseUrl%>.svn-base",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>"
                        }
                    ],
                    "name": "Source Code Disclosure - SVN",
                    "otherinfo": "<p>The source code for [<%=index%>] was found at [http://mymac.com:8191/WebGoat/js/goatApp/templates/<%=overview.baseUrl%>/.svn/text-base/<%=index%>.svn-base]</p>",
                    "pluginid": "42",
                    "reference": "<p>http://projects.webappsec.org/Predictable-Resource-Location</p><p>http://cwe.mitre.org/data/definitions/425.html</p>",
                    "riskcode": "3",
                    "riskdesc": "High (Low)",
                    "solution": "<p>Ensure that SVN metadata files are not deployed to the web server or application server</p>",
                    "sourceid": "1",
                    "wascid": "34"
                },
                {
                    "alert": "Web Browser XSS Protection Not Enabled",
                    "confidence": "2",
                    "count": "2",
                    "cweid": "933",
                    "desc": "<p>Web Browser XSS Protection is not enabled, or is disabled by the configuration of the 'X-XSS-Protection' HTTP response header on the web server</p>",
                    "instances": [
                        {
                            "method": "GET",
                            "param": "X-XSS-Protection",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E/%3C%25=index%25%3E"
                        },
                        {
                            "method": "GET",
                            "param": "X-XSS-Protection",
                            "uri": "http://mymac.com:8191/WebGoat/js/goatApp/templates/%3C%25=overview.baseUrl%25%3E"
                        }
                    ],
                    "name": "Web Browser XSS Protection Not Enabled",
                    "otherinfo": "<p>The X-XSS-Protection HTTP response header allows the web server to enable or disable the web browser's XSS protection mechanism. The following values would attempt to enable it: </p><p>X-XSS-Protection: 1; mode=block</p><p>X-XSS-Protection: 1; report=http://www.example.com/xss</p><p>The following values would disable it:</p><p>X-XSS-Protection: 0</p><p>The X-XSS-Protection HTTP response header is currently supported on Internet Explorer, Chrome and Safari (WebKit).</p><p>Note that this alert is only raised if the response body could potentially contain an XSS payload (with a text-based content type, with a non-zero length).</p>",
                    "pluginid": "10016",
                    "reference": "<p>https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet</p><p>https://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/</p>",
                    "riskcode": "1",
                    "riskdesc": "Low (Medium)",
                    "solution": "<p>Ensure that the web browser's XSS filter is enabled, by setting the X-XSS-Protection HTTP response header to '1'.</p>",
                    "sourceid": "3",
                    "wascid": "14"
                },
                {
                    "alert": "Anti CSRF Tokens Scanner",
                    "confidence": "2",
                    "count": "17",
                    "cweid": "352",
                    "desc": "<p>A cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.</p><p></p><p>CSRF attacks are effective in a number of situations, including:</p><p>    * The victim has an active session on the target site.</p><p>    * The victim is authenticated via HTTP auth on the target site.</p><p>    * The victim is on the same local network as the target site.</p><p></p><p>CSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.</p>",
                    "instances": [
                        {
                            "evidence": "<form role=\"form\" method=\"POST\" action=\"http://localhost:9090/landing\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/WebWolf/landing/password-reset"
                        },
                        {
                            "evidence": "<form class=\"attack-form\" accept-charset=\"UNKNOWN\" method=\"POST\" name=\"form\" action=\"/WebGoat/challenge/1\" style=\"width: 200px;\" enctype=\"application/json;charset=UTF-8\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/Challenge1.lesson.lesson"
                        },
                        {
                            "evidence": "<form id=\"login-form\" class=\"attack-form\" accept-charset=\"UNKNOWN\" method=\"POST\" name=\"form\" action=\"/WebGoat/challenge/6\" enctype=\"application/json;charset=UTF-8\" role=\"form\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/Challenge6.lesson.lesson"
                        },
                        {
                            "evidence": "<form class=\"attack-form\" accept-charset=\"UNKNOWN\" method=\"POST\" name=\"form\" action=\"/WebGoat/IDOR/login\" enctype=\"application/json;charset=UTF-8\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/IDOR.lesson.lesson"
                        },
                        {
                            "evidence": "<form class=\"attack-form\" accept-charset=\"UNKNOWN\" method=\"POST\" name=\"form\" action=\"/WebGoat/WebWolf/mail/send\" enctype=\"application/json;charset=UTF-8\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/WebWolfIntroduction.lesson.lesson"
                        },
                        {
                            "evidence": "<form method=\"POST\" style=\"width: 200px;\" action=\"/WebGoat/login\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/login?logout"
                        },
                        {
                            "evidence": "<form method=\"POST\" style=\"width: 200px;\" action=\"/WebGoat/login\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/login"
                        },
                        {
                            "evidence": "<form method=\"POST\" style=\"width: 200px;\" action=\"/WebGoat/login\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/login?error"
                        },
                        {
                            "evidence": "<form class=\"attack-form\" accept-charset=\"UNKNOWN\" method=\"POST\" name=\"form\" action=\"/WebGoat/SqlInjection/attack5a\" enctype=\"application/json;charset=UTF-8\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjection.lesson.lesson"
                        },
                        {
                            "evidence": "<form class=\"form-horizontal\" action=\"/WebGoat/register.mvc\" method=\"POST\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/registration"
                        },
                        {
                            "evidence": "<form id=\"login-form\" class=\"attack-form\" accept-charset=\"UNKNOWN\" method=\"POST\" name=\"form\" action=\"/WebGoat/challenge/5\" enctype=\"application/json;charset=UTF-8\" role=\"form\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/Challenge5.lesson.lesson"
                        },
                        {
                            "evidence": "<form class=\"form-horizontal\" action=\"/WebGoat/register.mvc\" method=\"POST\">",
                            "method": "POST",
                            "uri": "http://mymac.com:8191/WebGoat/register.mvc"
                        },
                        {
                            "evidence": "<form id=\"login-form\" class=\"attack-form\" accept-charset=\"UNKNOWN\" method=\"POST\" name=\"form\" action=\"/WebGoat/challenge/7\" enctype=\"application/json;charset=UTF-8\" role=\"form\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/Challenge7.lesson.lesson"
                        },
                        {
                            "evidence": "<form class=\"attack-form\" method=\"POST\" name=\"form\" action=\"/WebGoat/challenge/flag\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/Challenge8.lesson.lesson"
                        },
                        {
                            "evidence": "<form class=\"attack-form\" accept-charset=\"UNKNOWN\" method=\"POST\" name=\"form\" action=\"/WebGoat/access-control/hidden-menu\">",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/MissingFunctionAC.lesson.lesson"
                        },
                        {
                            "evidence": "<form class=\"attack-form\" accept-charset=\"UNKNOWN\" name=\"task\" method=\"POST\" action=\"#attack/307/100\" enctype=\"application/json;charset=UTF-8\">",
                            "method": "POST",
                            "uri": "http://mymac.com:8191/WebGoat/InsecureLogin.lesson.lesson"
                        },
                        {
                            "evidence": "<form>",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/libs/jquery.form.js"
                        }
                    ],
                    "name": "Anti CSRF Tokens Scanner",
                    "pluginid": "20012",
                    "reference": "<p>http://projects.webappsec.org/Cross-Site-Request-Forgery</p><p>http://cwe.mitre.org/data/definitions/352.html</p>",
                    "riskcode": "3",
                    "riskdesc": "High (Medium)",
                    "solution": "<p>Phase: Architecture and Design</p><p>Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.</p><p>For example, use anti-CSRF packages such as the OWASP CSRFGuard.</p><p></p><p>Phase: Implementation</p><p>Ensure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.</p><p></p><p>Phase: Architecture and Design</p><p>Generate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).</p><p>Note that this can be bypassed using XSS.</p><p></p><p>Identify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.</p><p>Note that this can be bypassed using XSS.</p><p></p><p>Use the ESAPI Session Management control.</p><p>This control includes a component for CSRF.</p><p></p><p>Do not use the GET method for any request that triggers a state change.</p><p></p><p>Phase: Implementation</p><p>Check the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.</p>",
                    "sourceid": "1",
                    "wascid": "9"
                },
                {
                    "alert": "HTTP Parameter Override",
                    "confidence": "1",
                    "count": "2",
                    "cweid": "20",
                    "desc": "<p>Unspecified form action: HTTP parameter override attack potentially possible. This is a known problem with Java Servlets but other platforms may also be vulnerable.</p>",
                    "instances": [
                        {
                            "evidence": "<form>",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/js/libs/jquery.form.js"
                        },
                        {
                            "evidence": "<form>",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/PasswordReset.lesson.lesson"
                        }
                    ],
                    "name": "HTTP Parameter Override",
                    "pluginid": "10026",
                    "reference": "<p>http://download.oracle.com/javaee-archive/servlet-spec.java.net/jsr340-experts/att-0317/OnParameterPollutionAttacks.pdf</p>",
                    "riskcode": "2",
                    "riskdesc": "Medium (Low)",
                    "solution": "<p>All forms must specify the action URL.</p>",
                    "sourceid": "3",
                    "wascid": "20"
                },
                {
                    "alert": "SQL Injection",
                    "confidence": "2",
                    "count": "6",
                    "cweid": "89",
                    "desc": "<p>SQL injection may be possible.</p>",
                    "instances": [
                        {
                            "attack": "query ASC  -- ",
                            "method": "GET",
                            "param": "query",
                            "uri": "http://mymac.com:8191/WebGoat/service/debug/labels.mvc?query=query+ASC++--+"
                        },
                        {
                            "attack": "query\" OR \"1\"=\"1\" -- ",
                            "method": "GET",
                            "param": "query",
                            "uri": "http://mymac.com:8191/WebGoat/service/lessonmenu.mvc?query=query%22+AND+%221%22%3D%221%22+--+"
                        },
                        {
                            "attack": "query\" OR \"1\"=\"1\" -- ",
                            "method": "GET",
                            "param": "query",
                            "uri": "http://mymac.com:8191/WebGoat/lesson_js?query=query%22+AND+%221%22%3D%221%22+--+"
                        },
                        {
                            "attack": "query AND 1=1",
                            "method": "GET",
                            "param": "query",
                            "uri": "http://mymac.com:8191/WebGoat/register.mvc?query=query+AND+1%3D1"
                        },
                        {
                            "attack": "query OR 1=1",
                            "method": "GET",
                            "param": "query",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/8?query=query+AND+1%3D1"
                        },
                        {
                            "attack": "query AND 1=1",
                            "method": "GET",
                            "param": "query",
                            "uri": "http://mymac.com:8191/WebGoat/challenge/8?query=query+AND+1%3D1"
                        }
                    ],
                    "name": "SQL Injection",
                    "otherinfo": "<p>The original page results were successfully replicated using the \"ORDER BY\" expression [query ASC  -- ] as the parameter value</p><p>The parameter value being modified was stripped from the HTML output for the purposes of the comparison</p>",
                    "pluginid": "40018",
                    "reference": "<p>https://www.owasp.org/index.php/Top_10_2010-A1</p><p>https://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet</p>",
                    "riskcode": "3",
                    "riskdesc": "High (Medium)",
                    "solution": "<p>Do not trust client side input, even if there is client side validation in place.  </p><p>In general, type check all data on the server side.</p><p>If the application uses JDBC, use PreparedStatement or CallableStatement, with parameters passed by '?'</p><p>If the application uses ASP, use ADO Command Objects with strong type checking and parameterized queries.</p><p>If database Stored Procedures can be used, use them.</p><p>Do *not* concatenate strings into queries in the stored procedure, or use 'exec', 'exec immediate', or equivalent functionality!</p><p>Do not create dynamic SQL queries using simple string concatenation.</p><p>Escape all data received from the client.</p><p>Apply a 'whitelist' of allowed characters, or a 'blacklist' of disallowed characters in user input.</p><p>Apply the principle of least privilege by using the least privileged database user possible.</p><p>In particular, avoid using the 'sa' or 'db-owner' database users. This does not eliminate SQL injection, but minimizes its impact.</p><p>Grant the minimum database access that is necessary for the application.</p>",
                    "sourceid": "1",
                    "wascid": "19"
                },
                {
                    "alert": "Private IP Disclosure",
                    "confidence": "2",
                    "count": "2",
                    "cweid": "200",
                    "desc": "<p>A private IP (such as 10.x.x.x, 172.x.x.x, 192.168.x.x) or an Amazon EC2 private hostname (for example, ip-10-0-56-78) has been found in the HTTP response body. This information might be helpful for further attacks targeting internal systems.</p>",
                    "instances": [
                        {
                            "evidence": "192.168.1.151:9090",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/WebWolfIntroduction.lesson.lesson"
                        },
                        {
                            "evidence": "192.168.4.0",
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/SqlInjection/servers?column=id"
                        }
                    ],
                    "name": "Private IP Disclosure",
                    "otherinfo": "<p>192.168.1.151:9090</p><p></p>",
                    "pluginid": "2",
                    "reference": "<p>https://tools.ietf.org/html/rfc1918</p>",
                    "riskcode": "1",
                    "riskdesc": "Low (Medium)",
                    "solution": "<p>Remove the private IP address from the HTTP response body.  For comments, use JSP/ASP/PHP comment instead of HTML/JavaScript comment which can be seen by client browsers.</p>",
                    "sourceid": "3",
                    "wascid": "13"
                },
                {
                    "alert": "Charset Mismatch (Header Versus Meta Content-Type Charset)",
                    "confidence": "1",
                    "count": "1",
                    "cweid": "16",
                    "desc": "<p>This check identifies responses where the HTTP Content-Type header declares a charset different from the charset defined by the body of the HTML or XML. When there's a charset mismatch between the HTTP header and content body Web browsers can be forced into an undesirable content-sniffing mode to determine the content's correct character set.</p><p></p><p>An attacker could manipulate content on the page to be interpreted in an encoding of their choice. For example, if an attacker can control content at the beginning of the page, they could inject script using UTF-7 encoded text and manipulate some browsers into interpreting that text.</p>",
                    "instances": [
                        {
                            "method": "GET",
                            "uri": "http://mymac.com:8191/WebGoat/start.mvc"
                        }
                    ],
                    "name": "Charset Mismatch (Header Versus Meta Content-Type Charset)",
                    "otherinfo": "<p>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [ISO-8859-1] do not match.</p>",
                    "pluginid": "90011",
                    "reference": "<p>http://code.google.com/p/browsersec/wiki/Part2#Character_set_handling_and_detection</p>",
                    "riskcode": "0",
                    "riskdesc": "Informational (Low)",
                    "solution": "<p>Force UTF-8 for all text content in both the HTTP header and meta tags in HTML or encoding declarations in XML.</p>",
                    "sourceid": "3",
                    "wascid": "15"
                }
            ]
        }
    ]
}
