{
  "platform": {
    "name": "Heimdall Tools",
    "release": "2.6.27",
    "target_id": "xss"
  },
  "version": "2.6.27",
  "statistics": {
    "duration": null
  },
  "profiles": [
    {
      "name": "Sonarqube Scan",
      "version": null,
      "title": "SonarQube Scan of Project xss",
      "maintainer": null,
      "summary": "SonarQube Scan of Project xss",
      "license": null,
      "copyright": null,
      "copyright_email": null,
      "supports": [],
      "attributes": [],
      "depends": [],
      "groups": [],
      "status": "loaded",
      "controls": [
        {
          "desc": "<p>Browsers <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\">allow message exchanges</a> between Window objects of\ndifferent origins.</p>\n<p>Because any window can send / receive messages from other window it is important to verify the sender’s / receiver’s identity:</p>\n<ul>\n  <li> When sending message with postMessage method, the identity’s receiver should be defined (the wildcard keyword (<code>*</code>) should not be\n  used). </li>\n  <li> When receiving message with message event, the sender’s identity should be verified using the origin and possibly source properties. </li>\n</ul>\n<h2>Noncompliant Code Example</h2>\n<p>When sending message:</p>\n<pre>\nvar iframe = document.getElementById(\"testiframe\");\niframe.contentWindow.postMessage(\"secret\", \"*\"); // Noncompliant: * is used\n</pre>\n<p>When receiving message:</p>\n<pre>\nwindow.addEventListener(\"message\", function(event) { // Noncompliant: no checks are done on the origin property.\n      console.log(event.data);\n });\n</pre>\n<h2>Compliant Solution</h2>\n<p>When sending message:</p>\n<pre>\nvar iframe = document.getElementById(\"testsecureiframe\");\niframe.contentWindow.postMessage(\"hello\", \"https://secure.example.com\"); // Compliant\n</pre>\n<p>When receiving message:</p>\n<pre>\nwindow.addEventListener(\"message\", function(event) {\n\n  if (event.origin !== \"http://example.org\") // Compliant\n    return;\n\n  console.log(event.data)\n});\n</pre>\n<h2>See</h2>\n<ul>\n  <li> <a href=\"https://owasp.org/Top10/A01_2021-Broken_Access_Control/\">OWASP Top 10 2021 Category A1</a> - Broken Access Control </li>\n  <li> <a href=\"https://www.owasp.org/index.php/Top_10_2010-A3-Broken_Authentication_and_Session_Management\">OWASP Top 10 2017 Category A3</a> -\n  Broken Authentication and Session Management </li>\n  <li> <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\">developer.mozilla.org</a> - postMessage API </li>\n</ul>",
          "descriptions": [],
          "refs": [],
          "source_location": {},
          "id": "javascript:S2819",
          "title": "Origins should be verified during cross-origin communications",
          "impact": 0.7,
          "code": null,
          "tags": {
            "cci": [
              "CCI-001312"
            ],
            "nist": [
              "SI-11"
            ]
          },
          "results": [
            {
              "status": "failed",
              "code_desc": "Path:xss:packages/docs/src/service-worker.js:29:29 StartLine: 29, EndLine: 29<br>Code:<pre></pre>",
              "run_time": 0,
              "start_time": ""
            }
          ]
        }
      ],
      "sha256": "a3274b3e5cb49da5936ddbcd0b9bbdc1c78923b3adb8e92d05ac9bf0d6e705b3"
    }
  ]
}